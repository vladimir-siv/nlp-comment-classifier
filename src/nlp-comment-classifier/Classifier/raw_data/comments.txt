EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_check.sql	alibaba/AliSQL/mysql-test/include/mtr_check.sql/1	 Copyright (c) 2008, 2013, Oracle and/or its affiliates. All rights reserved.\n\n This program is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation; version 2 of the License.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software Foundation,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA	General
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_check.sql	alibaba/AliSQL/mysql-test/include/mtr_check.sql/27	 For tests tampering with performance_schema table structure	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_check.sql	alibaba/AliSQL/mysql-test/include/mtr_check.sql/32	 Leave the instruments in the same state	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_check.sql	alibaba/AliSQL/mysql-test/include/mtr_check.sql/37	 Leave the consumers in the same state	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_check.sql	alibaba/AliSQL/mysql-test/include/mtr_check.sql/41	 Leave the actors setup in the same state	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_check.sql	alibaba/AliSQL/mysql-test/include/mtr_check.sql/45	 Leave the objects setup in the same state	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_check.sql	alibaba/AliSQL/mysql-test/include/mtr_check.sql/53	 Procedure used to check if server has been properly\n restored after testcase has been run	Functional-Method
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_check.sql	alibaba/AliSQL/mysql-test/include/mtr_check.sql/61	 Dump all global variables except those that may change.\n timestamp changes if time passes. server_uuid changes if server restarts.	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_check.sql	alibaba/AliSQL/mysql-test/include/mtr_check.sql/69	 Dump all databases, there should be none\n except those that was created during bootstrap	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_check.sql	alibaba/AliSQL/mysql-test/include/mtr_check.sql/73	 The test database should not contain any tables	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_check.sql	alibaba/AliSQL/mysql-test/include/mtr_check.sql/77	 Show "mysql" database, tables and columns	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_check.sql	alibaba/AliSQL/mysql-test/include/mtr_check.sql/91	 Dump all events, there should be none	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_check.sql	alibaba/AliSQL/mysql-test/include/mtr_check.sql/93	 Dump all triggers except mtr internals, there should be none	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_check.sql	alibaba/AliSQL/mysql-test/include/mtr_check.sql/96	 Dump all created procedures, there should be none	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_check.sql	alibaba/AliSQL/mysql-test/include/mtr_check.sql/101	 Checksum system tables to make sure they have been properly\n restored after test	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_check.sql	alibaba/AliSQL/mysql-test/include/mtr_check.sql/124	 Procedure used by test case used to force all\n servers to restart after testcase and thus skipping\n check test case after test	Functional-Method
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_warnings.sql	alibaba/AliSQL/mysql-test/include/mtr_warnings.sql/1	 Copyright (c) 2008, 2015, Oracle and/or its affiliates. All rights reserved.\n\n This program is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation; version 2 of the License.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software Foundation,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA	General
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_warnings.sql	alibaba/AliSQL/mysql-test/include/mtr_warnings.sql/21	 Create table where testcases can insert patterns to\n be suppressed	Notice
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_warnings.sql	alibaba/AliSQL/mysql-test/include/mtr_warnings.sql/30	 Declare a trigger that makes sure\n no invalid patterns can be inserted\n into test_suppressions	Notice
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_warnings.sql	alibaba/AliSQL/mysql-test/include/mtr_warnings.sql/40	!50002\nCREATE DEFINER=root@localhost TRIGGER ts_insert\nBEFORE INSERT ON test_suppressions\nFOR EACH ROW BEGIN\n  DECLARE dummy INT;\n  SELECT "" REGEXP NEW.pattern INTO dummy;\nEND\n	Code
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_warnings.sql	alibaba/AliSQL/mysql-test/include/mtr_warnings.sql/54	 Load table with patterns that will be suppressed globally(always)	Notice
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_warnings.sql	alibaba/AliSQL/mysql-test/include/mtr_warnings.sql/61	 Declare a trigger that makes sure\n no invalid patterns can be inserted\n into global_suppressions	Notice
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_warnings.sql	alibaba/AliSQL/mysql-test/include/mtr_warnings.sql/71	!50002\nCREATE DEFINER=root@localhost TRIGGER gs_insert\nBEFORE INSERT ON global_suppressions\nFOR EACH ROW BEGIN\n  DECLARE dummy INT;\n  SELECT "" REGEXP NEW.pattern INTO dummy;\nEND\n	Code
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_warnings.sql	alibaba/AliSQL/mysql-test/include/mtr_warnings.sql/86	 Insert patterns that should always be suppressed	Notice
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_warnings.sql	alibaba/AliSQL/mysql-test/include/mtr_warnings.sql/102	\n   Due to timing issues, it might be that this warning\n   is printed when the server shuts down and the\n   computer is loaded.\n 	Notice
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_warnings.sql	alibaba/AliSQL/mysql-test/include/mtr_warnings.sql/160	 innodb foreign key tests that fail in ALTER or RENAME produce this 	Notice
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_warnings.sql	alibaba/AliSQL/mysql-test/include/mtr_warnings.sql/165	\n   BUG#32080 - Excessive warnings on Solaris: setrlimit could not\n   change the size of core files\n  	ToDo
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_warnings.sql	alibaba/AliSQL/mysql-test/include/mtr_warnings.sql/174	It will print a warning if a new UUID of server is generated.	Notice
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_warnings.sql	alibaba/AliSQL/mysql-test/include/mtr_warnings.sql/176	It will print a warning if server is run without --explicit_defaults_for_timestamp.	Notice
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_warnings.sql	alibaba/AliSQL/mysql-test/include/mtr_warnings.sql/179	 Added 2009-08-XX after fixing Bug #42408 	Notice
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_warnings.sql	alibaba/AliSQL/mysql-test/include/mtr_warnings.sql/191	 Messages from valgrind 	Notice
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_warnings.sql	alibaba/AliSQL/mysql-test/include/mtr_warnings.sql/196	 This comes with innodb plugin tests 	Notice
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_warnings.sql	alibaba/AliSQL/mysql-test/include/mtr_warnings.sql/198	 valgrind-3.5.0 dumps this 	Notice
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_warnings.sql	alibaba/AliSQL/mysql-test/include/mtr_warnings.sql/201	 valgrind warnings: invalid file descriptor -1 in syscall\n    write()/read(). Bug #50414 	ToDo
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_warnings.sql	alibaba/AliSQL/mysql-test/include/mtr_warnings.sql/206	\n   Transient network failures that cause warnings on reconnect.\n   BUG#47743 and BUG#47983.\n 	ToDo
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_warnings.sql	alibaba/AliSQL/mysql-test/include/mtr_warnings.sql/218	\n   BUG#42147 - Concurrent DML and LOCK TABLE ... READ for InnoDB \n   table cause warnings in errlog\n   Note: This is a temporary suppression until Bug#42147 can be \n   fixed properly. See bug page for more information.\n  	ToDo
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_warnings.sql	alibaba/AliSQL/mysql-test/include/mtr_warnings.sql/226	\n   Warning message is printed out whenever a slave is started with\n   a configuration that is not crash-safe.\n 	Notice
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_warnings.sql	alibaba/AliSQL/mysql-test/include/mtr_warnings.sql/232	\n   Warning messages introduced in the context of the WL#4143.\n 	Notice
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_warnings.sql	alibaba/AliSQL/mysql-test/include/mtr_warnings.sql/238	\n  In MTS if the user issues a stop slave sql while it is scheduling a group\n  of events, this warning is emitted.\n  	Notice
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_warnings.sql	alibaba/AliSQL/mysql-test/include/mtr_warnings.sql/253	 Procedure that uses the above created tables to check\n the servers error log for warnings	Functional-Method
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_warnings.sql	alibaba/AliSQL/mysql-test/include/mtr_warnings.sql/260	 Don't write these queries to binlog	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_warnings.sql	alibaba/AliSQL/mysql-test/include/mtr_warnings.sql/264	 Remove mark from lines that are suppressed by global suppressions	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_warnings.sql	alibaba/AliSQL/mysql-test/include/mtr_warnings.sql/271	 Remove mark from lines that are suppressed by test specific suppressions	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_warnings.sql	alibaba/AliSQL/mysql-test/include/mtr_warnings.sql/278	 Get the number of marked lines and return result	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_warnings.sql	alibaba/AliSQL/mysql-test/include/mtr_warnings.sql/286	SELECT * FROM test_suppressions;	Code
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_warnings.sql	alibaba/AliSQL/mysql-test/include/mtr_warnings.sql/287	 Return 2 -> check failed	Code
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_warnings.sql	alibaba/AliSQL/mysql-test/include/mtr_warnings.sql/290	 Return 0 -> OK	Code
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_warnings.sql	alibaba/AliSQL/mysql-test/include/mtr_warnings.sql/294	 Cleanup for next test	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_warnings.sql	alibaba/AliSQL/mysql-test/include/mtr_warnings.sql/301	 Declare a procedure testcases can use to insert test\n specific suppressions	Functional-Method
EN	SQL	alibaba/AliSQL	mysql-test/include/mtr_warnings.sql	alibaba/AliSQL/mysql-test/include/mtr_warnings.sql/304	!50001\nCREATE DEFINER=root@localhost\nPROCEDURE add_suppression(pattern VARCHAR(255))\nBEGIN\n  INSERT INTO test_suppressions (pattern) VALUES (pattern);\nEND\n	Code
EN	SQL	alibaba/AliSQL	mysql-test/include/set_binlog_format_mixed.sql	alibaba/AliSQL/mysql-test/include/set_binlog_format_mixed.sql/1	 Copyright (c) 2007 MySQL AB\n Use is subject to license terms.\n\n This program is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation; version 2 of the License.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software Foundation,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA	General
EN	SQL	alibaba/AliSQL	mysql-test/include/set_binlog_format_row.sql	alibaba/AliSQL/mysql-test/include/set_binlog_format_row.sql/1	 Copyright (c) 2007 MySQL AB\n Use is subject to license terms.\n\n This program is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation; version 2 of the License.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software Foundation,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA	General
EN	SQL	alibaba/AliSQL	mysql-test/include/set_binlog_format_statement.sql	alibaba/AliSQL/mysql-test/include/set_binlog_format_statement.sql/1	 Copyright (c) 2007 MySQL AB\n Use is subject to license terms.\n\n This program is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation; version 2 of the License.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software Foundation,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA	General
EN	SQL	alibaba/AliSQL	mysql-test/suite/engines/rr_trx/check_consistency.sql	alibaba/AliSQL/mysql-test/suite/engines/rr_trx/check_consistency.sql/2	 This file contains queries that can be used to check table consistency after running the stress_tx_rr test suite.	Functional-Module
EN	SQL	alibaba/AliSQL	mysql-test/suite/engines/rr_trx/check_consistency.sql	alibaba/AliSQL/mysql-test/suite/engines/rr_trx/check_consistency.sql/3	 Contains a mix of queries used throughout the actual test suite.	Functional-Module
EN	SQL	alibaba/AliSQL	mysql-test/suite/engines/rr_trx/check_consistency.sql	alibaba/AliSQL/mysql-test/suite/engines/rr_trx/check_consistency.sql/4	 When server is running, run this script e.g. like this:	Functional-Module
EN	SQL	alibaba/AliSQL	mysql-test/suite/engines/rr_trx/check_consistency.sql	alibaba/AliSQL/mysql-test/suite/engines/rr_trx/check_consistency.sql/5	  ./bin/mysql -v -u root -h 127.0.0.1 < mysql-test/suite/engines/rr_trx/check_consistency.sql	General
EN	SQL	alibaba/AliSQL	mysql-test/suite/engines/rr_trx/check_consistency.sql	alibaba/AliSQL/mysql-test/suite/engines/rr_trx/check_consistency.sql/10	 Sum of all integers that are part of the test data should be 0	Notice
EN	SQL	alibaba/AliSQL	mysql-test/suite/engines/rr_trx/check_consistency.sql	alibaba/AliSQL/mysql-test/suite/engines/rr_trx/check_consistency.sql/16	 No uncommitted data should be visible to a REPEATABLE-READ transaction	Notice
EN	SQL	alibaba/AliSQL	mysql-test/suite/engines/rr_trx/check_consistency.sql	alibaba/AliSQL/mysql-test/suite/engines/rr_trx/check_consistency.sql/19	 No rows marked as consistent should have row-sum not equal to 0	Notice
EN	SQL	alibaba/AliSQL	mysql-test/suite/engines/rr_trx/check_consistency.sql	alibaba/AliSQL/mysql-test/suite/engines/rr_trx/check_consistency.sql/22	 Check the table count. SHOULD NOT BE 0.	Notice
EN	SQL	alibaba/AliSQL	mysql-test/suite/engines/rr_trx/check_consistency.sql	alibaba/AliSQL/mysql-test/suite/engines/rr_trx/check_consistency.sql/25	 The count of rows with pk divisible by 5 should be constant.	Notice
EN	SQL	alibaba/AliSQL	mysql-test/suite/engines/rr_trx/check_consistency.sql	alibaba/AliSQL/mysql-test/suite/engines/rr_trx/check_consistency.sql/26	 (less useful when there is no concurrency, though)	Notice
EN	SQL	alibaba/AliSQL	mysql-test/suite/engines/rr_trx/check_consistency.sql	alibaba/AliSQL/mysql-test/suite/engines/rr_trx/check_consistency.sql/29	 Check statistics (any number is OK, we are only looking for an impractical amount of errors	Notice
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/1	#============================================================================\n# Notes\n#============================================================================	Functional-Module
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/5	 Test case for Bug#11230	Notice
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/7	 The point of this test is to make sure that '#', '-- ' and '/* ... */'\n comments, as well as empty lines, are sent from the client to the server.\n This is to ensure better error reporting, and to keep comments in the code\n for stored procedures / functions / triggers (Bug#11230).\n As a result, be careful when editing comments in this script, they do\n matter.\n\n Also, note that this is a script for **mysql**, not mysqltest.\n This is critical, as the mysqltest client interprets comments differently.	Notice
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/17	#============================================================================\n# Setup\n#============================================================================	Functional-Module
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/21	# See mysql_comments.test for initial cleanup	Notice
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/23	 Test tables\n\n t1 is reused throughout the file, and dropped at the end.	Notice
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/33	#============================================================================\n# Comments outside statements\n#============================================================================	Functional-Module
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/37	 Ignored 1a	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/38	 Ignored 1b	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/39	\n   Ignored 1c\n	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/45	#============================================================================\n# Comments inside statements\n#============================================================================	Functional-Module
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/49	 comment 1a	General
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/50	 comment 2a	General
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/51	 comment 2b	General
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/52	\n   comment 2c\n	General
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/56	 not strictly inside, but on same line	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/57	 ignored	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/59	#============================================================================\n# Comments inside functions\n#============================================================================	Functional-Module
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/67	 not inside the body yet 	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/69	 comment 1a	General
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/69	 comment 1b	General
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/71	 comment 1c 	General
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/72	 after body, on same line	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/84	 comment 1a	General
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/85	 comment 1b	General
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/86	\n     comment 1c\n  	General
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/90	 empty line below	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/92	 empty line above	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/103	#============================================================================\n# Comments inside stored procedures\n#============================================================================	Functional-Module
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/107	 Empty statement	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/119	# These comments are before the create, and will be lost	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/120	 Comment 1a	General
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/121	 Comment 1b	General
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/122	\n   Comment 1c\n 	General
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/126	 Comment not quiet in the body yet 	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/128	# These comments are part of the procedure body, and should be kept.	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/129	 Comment 2a	General
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/130	 Comment 2b	General
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/131	 Comment 2c 	General
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/132	 empty line below	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/134	 empty line above	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/135	 comment 3, still part of the body	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/136	# After the ';', therefore not part of the body	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/137	 comment 4a	General
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/138	 Comment 4b	General
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/139	\n   Comment 4c\n 	General
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/155	 declare some variables here	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/159	 do more stuff here	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/160	 commented nicely and so on	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/162	 famous last words ...	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/170	#============================================================================\n# Comments inside triggers\n#============================================================================	Functional-Module
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/190	 comment 1a	General
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/191	 comment 1b	General
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/192	\n   comment 1c\n	General
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/195	 declare some variables here	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/199	 do more stuff here	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/200	 commented nicely and so on	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/202	 famous last words ...	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/210	 also make sure the trigger still works	Notice
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_comments.sql	alibaba/AliSQL/mysql-test/t/mysql_comments.sql/214	#============================================================================\n# Cleanup\n#============================================================================	Functional-Module
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_delimiter.sql	alibaba/AliSQL/mysql-test/t/mysql_delimiter.sql/2	 Test default delimiter ;	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_delimiter.sql	alibaba/AliSQL/mysql-test/t/mysql_delimiter.sql/6	 Test delimiter without argument	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_delimiter.sql	alibaba/AliSQL/mysql-test/t/mysql_delimiter.sql/8	 Nothing should be displayed, error is returned	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_delimiter.sql	alibaba/AliSQL/mysql-test/t/mysql_delimiter.sql/10	 Reset delimiter	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_delimiter.sql	alibaba/AliSQL/mysql-test/t/mysql_delimiter.sql/12	 Test delimiter :	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_delimiter.sql	alibaba/AliSQL/mysql-test/t/mysql_delimiter.sql/16	 Reset delimiter	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_delimiter.sql	alibaba/AliSQL/mysql-test/t/mysql_delimiter.sql/18	 Test delimiter ':'	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_delimiter.sql	alibaba/AliSQL/mysql-test/t/mysql_delimiter.sql/22	 Reset delimiter	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_delimiter.sql	alibaba/AliSQL/mysql-test/t/mysql_delimiter.sql/24	 Test delimiter :;	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_delimiter.sql	alibaba/AliSQL/mysql-test/t/mysql_delimiter.sql/28	 Reset delimiter	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_delimiter.sql	alibaba/AliSQL/mysql-test/t/mysql_delimiter.sql/30	# Test delimiter //	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_delimiter.sql	alibaba/AliSQL/mysql-test/t/mysql_delimiter.sql/34	 Reset delimiter	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_delimiter.sql	alibaba/AliSQL/mysql-test/t/mysql_delimiter.sql/36	 Test delimiter 'MySQL'	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_delimiter.sql	alibaba/AliSQL/mysql-test/t/mysql_delimiter.sql/40	 Reset delimiter	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_delimiter.sql	alibaba/AliSQL/mysql-test/t/mysql_delimiter.sql/42	 Test delimiter 'delimiter'(should be allowed according to the code)	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_delimiter.sql	alibaba/AliSQL/mysql-test/t/mysql_delimiter.sql/46	 Reset delimiter	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_delimiter.sql	alibaba/AliSQL/mysql-test/t/mysql_delimiter.sql/49	 Bug #11523: \d works differently than delimiter	ToDo
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_delimiter.sql	alibaba/AliSQL/mysql-test/t/mysql_delimiter.sql/52	 Reset delimiter	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_delimiter.sql	alibaba/AliSQL/mysql-test/t/mysql_delimiter.sql/49	 Bug #19799: delimiter command not working correctly when sourcing a sql file\n             with Windows style line endings.	ToDo
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_delimiter.sql	alibaba/AliSQL/mysql-test/t/mysql_delimiter.sql/61	 Reset delimiter	Functional-Inline
EN	SQL	alibaba/AliSQL	mysql-test/t/mysql_delimiter.sql	alibaba/AliSQL/mysql-test/t/mysql_delimiter.sql/64	 Bug #36244: MySQL CLI doesn't recognize standalone -- as comment\n             before DELIMITER statement	ToDo
EN	SQL	alibaba/AliSQL	plugin/innodb_memcached/innodb_memcache/scripts/innodb_memcached_config.sql	alibaba/AliSQL/plugin/innodb_memcached/innodb_memcache/scripts/innodb_memcached_config.sql/6	 ------------------------------------------------------------------------\n Following are set of "configuration tables" that used to configure\n the InnoDB Memcached.\n ------------------------------------------------------------------------	Functional-Module
EN	SQL	alibaba/AliSQL	plugin/innodb_memcached/innodb_memcache/scripts/innodb_memcached_config.sql	alibaba/AliSQL/plugin/innodb_memcached/innodb_memcache/scripts/innodb_memcached_config.sql/11	 ------------------------------------------------------------------------\n Table `cache_policies`\n\n Each record in this table represents a named caching policy, specifying:\n  * How the memcache GET command is executed, including whether to get\n    records from local cache only, from InnoDB only, from local cache if\n    present (treating InnoDB as a backing store), or not at all.\n  * Similarly, how memcache SET commands are executed.\n  * How memcache DELETE commands are executed.\n  * Whether flushing the cache should cause a mass delete from NDB.\n\n ------------------------------------------------------------------------	Functional-Inline
EN	SQL	alibaba/AliSQL	plugin/innodb_memcached/innodb_memcache/scripts/innodb_memcached_config.sql	alibaba/AliSQL/plugin/innodb_memcached/innodb_memcache/scripts/innodb_memcached_config.sql/36	 ------------------------------------------------------------------------\n Table `containers`\n\n A container record describes an InnoDB table used for data storage by\n InnoDB Memcache.\n There must be a unique index on the `key column`, and unique index name\n is specified in the `unique_idx_name_on_key` column of the table\n `value_columns` are comma-separated lists of the columns that make up\n the memcache key and value. Each column width is defined such that they\n are in consistent with NDB memcached.\n ------------------------------------------------------------------------	Functional-Inline
EN	SQL	alibaba/AliSQL	plugin/innodb_memcached/innodb_memcache/scripts/innodb_memcached_config.sql	alibaba/AliSQL/plugin/innodb_memcached/innodb_memcache/scripts/innodb_memcached_config.sql/64	 ------------------------------------------------------------------------\n This is an example\n We create a InnoDB table `demo_test` is the `test` database\n and insert an entry into contrainers' table to tell InnoDB Memcache\n that we has such InnoDB table as back store:\n c1 -> key\n c2 -> value\n c3 -> flags\n c4 -> cas\n c5 -> exp time\n PRIMARY -> use primary key to search\n ------------------------------------------------------------------------	Notice
EN	SQL	alibaba/AliSQL	plugin/innodb_memcached/innodb_memcache/scripts/innodb_memcached_config.sql	alibaba/AliSQL/plugin/innodb_memcached/innodb_memcache/scripts/innodb_memcached_config.sql/88	 ------------------------------------------------------------------------\n Key (c1) must be VARCHAR or CHAR type, memcached supports key up to 255\n Bytes\n Value (c2) must be VARCHAR or CHAR type\n Flag (c3) is a 32 bits integer\n CAS (c4) is a 64 bits integer, per memcached define\n Exp (c5) is again a 32 bits integer\n ------------------------------------------------------------------------	Notice
EN	SQL	alibaba/AliSQL	scripts/fill_help_tables.sql	alibaba/AliSQL/scripts/fill_help_tables.sql/1	 Copyright (C) 2005 MySQL AB\n Use is subject to license terms\n \n This program is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation; version 2 of the License.\n \n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n \n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA\n fill_help_tables.sql - this file is a placeholder to satisfy build dependencies -\n it will be replaced with the appropriate content by the Boostrap script that\n creates the official source distribution.	General
EN	SQL	alibaba/AliSQL	scripts/mysql_security_commands.sql	alibaba/AliSQL/scripts/mysql_security_commands.sql/1	 Copyright (c) 2012, Oracle and/or its affiliates. All rights reserved.\n\n This program is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation; version 2 of the License.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA	General
EN	SQL	alibaba/AliSQL	scripts/mysql_security_commands.sql	alibaba/AliSQL/scripts/mysql_security_commands.sql/16	 This set of commands will modify the predefined accounts of a MySQL installation\n to increase security.	Functional-Module
EN	SQL	alibaba/AliSQL	scripts/mysql_security_commands.sql	alibaba/AliSQL/scripts/mysql_security_commands.sql/19	 1) Set passwords for the root account.	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_security_commands.sql	alibaba/AliSQL/scripts/mysql_security_commands.sql/20	 Note that the password 'ABC123xyz' will be replaced by a random string\n when these commands are transferred to the server.	Notice
EN	SQL	alibaba/AliSQL	scripts/mysql_security_commands.sql	alibaba/AliSQL/scripts/mysql_security_commands.sql/29	 2) Drop the anonymous account.	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_security_commands.sql	alibaba/AliSQL/scripts/mysql_security_commands.sql/32	 3) Force the root user to change the password on first connect.	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_security_commands.sql	alibaba/AliSQL/scripts/mysql_security_commands.sql/35	 In case this file is sent to a running server.	Notice
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1	 Copyright (c) 2007, 2014, Oracle and/or its affiliates. All rights reserved.\n\n This program is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation; version 2 of the License.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA	General
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/17	 The system tables of MySQL Server	Functional-Module
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/25	 Remember for later if db table already existed	Notice
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/30	 Remember for later if user table already existed	Notice
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/79	 Create general_log if CSV is enabled.	Notice
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/87	 Create slow_log if CSV is enabled.	Notice
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/211	 PERFORMANCE SCHEMA INSTALLATION\n Note that this script is also reused by mysql_upgrade,\n so we have to be very careful here to not destroy any\n existing database named 'performance_schema' if it\n can contain user data.\n In case of downgrade, it's ok to drop unknown tables\n from a future version, as long as they belong to the\n performance schema engine.	Notice
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/226	 Work around for bug#49542	Notice
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/235	 Work around for bug#49542	Notice
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/248	 The performance schema database.\n Only drop and create the database if this is safe (no broken_pfs).\n This database is created, even in --without-perfschema builds,\n so that the database name is always reserved by the MySQL implementation.	Notice
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/269	 From this point, only create the performance schema tables\n if the server is built with performance schema	Notice
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/276	 TABLE COND_INSTANCES	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/290	 TABLE EVENTS_WAITS_CURRENT	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/321	 TABLE EVENTS_WAITS_HISTORY	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/352	 TABLE EVENTS_WAITS_HISTORY_LONG	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/383	 TABLE EVENTS_WAITS_SUMMARY_BY_INSTANCE	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/402	 TABLE EVENTS_WAITS_SUMMARY_BY_HOST_BY_EVENT_NAME	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/421	 TABLE EVENTS_WAITS_SUMMARY_BY_USER_BY_EVENT_NAME	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/440	 TABLE EVENTS_WAITS_SUMMARY_BY_ACCOUNT_BY_EVENT_NAME	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/460	 TABLE EVENTS_WAITS_SUMMARY_BY_THREAD_BY_EVENT_NAME	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/479	 TABLE EVENTS_WAITS_SUMMARY_GLOBAL_BY_EVENT_NAME	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/497	 TABLE FILE_INSTANCES	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/512	 TABLE FILE_SUMMARY_BY_EVENT_NAME	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/547	 TABLE FILE_SUMMARY_BY_INSTANCE	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/585	 TABLE SOCKET_INSTANCES	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/604	 TABLE SOCKET_SUMMARY_BY_INSTANCE	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/640	 TABLE SOCKET_SUMMARY_BY_INSTANCE	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/675	 TABLE HOST_CACHE	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/716	 TABLE MUTEX_INSTANCES	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/731	 TABLE OBJECTS_SUMMARY_GLOBAL_BY_TYPE	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/751	 TABLE PERFORMANCE_TIMERS	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/767	 TABLE RWLOCK_INSTANCES	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/783	 TABLE SETUP_ACTORS	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/798	 TABLE SETUP_CONSUMERS	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/812	 TABLE SETUP_INSTRUMENTS	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/827	 TABLE SETUP_OBJECTS	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/844	 TABLE SETUP_TIMERS	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/858	 TABLE TABLE_IO_WAITS_SUMMARY_BY_INDEX_USAGE	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/909	 TABLE TABLE_IO_WAITS_SUMMARY_BY_TABLE	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/959	 TABLE TABLE_LOCK_WAITS_SUMMARY_BY_TABLE	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1044	 TABLE THREADS	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1070	 TABLE EVENTS_STAGES_CURRENT	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1092	 TABLE EVENTS_STAGES_HISTORY	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1114	 TABLE EVENTS_STAGES_HISTORY_LONG	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1136	 TABLE EVENTS_STAGES_SUMMARY_BY_THREAD_BY_EVENT_NAME	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1155	 TABLE EVENTS_STAGES_SUMMARY_BY_HOST_BY_EVENT_NAME	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1174	 TABLE EVENTS_STAGES_SUMMARY_BY_USER_BY_EVENT_NAME	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1193	 TABLE EVENTS_STAGES_SUMMARY_BY_ACCOUNT_BY_EVENT_NAME	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1213	 TABLE EVENTS_STAGES_SUMMARY_GLOBAL_BY_EVENT_NAME	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1231	 TABLE EVENTS_STATEMENTS_CURRENT	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1283	 TABLE EVENTS_STATEMENTS_HISTORY	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1335	 TABLE EVENTS_STATEMENTS_HISTORY_LONG	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1387	 TABLE EVENTS_STATEMENTS_SUMMARY_BY_THREAD_BY_EVENT_NAME	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1425	 TABLE EVENTS_STATEMENTS_SUMMARY_BY_HOST_BY_EVENT_NAME	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1463	 TABLE EVENTS_STATEMENTS_SUMMARY_BY_USER_BY_EVENT_NAME	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1501	 TABLE EVENTS_STATEMENTS_SUMMARY_BY_ACCOUNT_BY_EVENT_NAME	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1540	 TABLE EVENTS_STATEMENTS_SUMMARY_GLOBAL_BY_EVENT_NAME	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1577	 TABLE HOSTS	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1592	 TABLE USERS	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1607	 TABLE ACCOUNTS	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1623	 TABLE EVENTS_STATEMENTS_SUMMARY_BY_DIGEST	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1665	 TABLE SESSION_CONNECT_ATTRS	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1681	 TABLE SESSION_ACCOUNT_CONNECT_ATTRS	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1694	 Remember for later if proxies_priv table already existed	Notice
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1698	 SQL commands for creating the tables in MySQL Server which\n are used by the NDBINFO storage engine to access system\n information and statistics from MySQL Cluster\n\n Only create objects if NDBINFO is supported	Functional-Module
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1705	 Only create objects if version >= 7.1	Notice
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1711	 Only create objects if ndbinfo namespace is free	Notice
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1732	 Set NDBINFO in offline mode during (re)create of tables\n and views to avoid errors caused by no such table or\n different table definition in NDB	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1740	 Drop any old views in ndbinfo	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1781	 Drop any old lookup tables in ndbinfo	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1792	 ndbinfo.ndb$tables	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1803	 ndbinfo.ndb$columns	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1814	 ndbinfo.ndb$test	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1825	 ndbinfo.ndb$pools	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1836	 ndbinfo.ndb$transporters	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1847	 ndbinfo.ndb$logspaces	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1858	 ndbinfo.ndb$logbuffers	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1869	 ndbinfo.ndb$resources	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1880	 ndbinfo.ndb$counters	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1891	 ndbinfo.ndb$nodes	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1902	 ndbinfo.ndb$diskpagebuffer	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1913	 ndbinfo.blocks	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1924	 ndbinfo.config_params	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1935	 ndbinfo.transporters	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1941	 ndbinfo.logspaces	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1947	 ndbinfo.logbuffers	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1953	 ndbinfo.resources	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1959	 ndbinfo.counters	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1965	 ndbinfo.nodes	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1971	 ndbinfo.memoryusage	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1977	 ndbinfo.diskpagebuffer	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables.sql	alibaba/AliSQL/scripts/mysql_system_tables.sql/1983	 Finally turn off offline mode	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_data.sql	alibaba/AliSQL/scripts/mysql_system_tables_data.sql/1	 Copyright (c) 2007, 2014, Oracle and/or its affiliates. All rights reserved.\n \n This program is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation; version 2 of the License.\n \n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n \n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA	General
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_data.sql	alibaba/AliSQL/scripts/mysql_system_tables_data.sql/17	 The inital data for system tables of MySQL Server	Functional-Module
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_data.sql	alibaba/AliSQL/scripts/mysql_system_tables_data.sql/20	 When setting up a "cross bootstrap" database (e.g., creating data on a Unix\n host which will later be included in a Windows zip file), any lines\n containing "@current_hostname" are filtered out by mysql_install_db.	Notice
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_data.sql	alibaba/AliSQL/scripts/mysql_system_tables_data.sql/24	 Get the hostname, if the hostname has any wildcard character like "_" or "%" \n add escape character in front of wildcard character to convert "_" or "%" to\n a plain character	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_data.sql	alibaba/AliSQL/scripts/mysql_system_tables_data.sql/30	 Fill "db" table with default grants for anyone to\n access database 'test' and 'test_%' if "db" table didn't exist	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_data.sql	alibaba/AliSQL/scripts/mysql_system_tables_data.sql/39	 Fill "user" table with default users allowing root access\n from local machine if "user" table didn't exist before	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/1	 Copyright (c) 2003, 2014, Oracle and/or its affiliates. All rights reserved.\n\n This program is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation; version 2 of the License.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA	General
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/16	 This part converts any old privilege tables to privilege tables suitable\n for current version of MySQL	Functional-Module
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/19	 You can safely ignore all 'Duplicate column' and 'Unknown column' errors\n because these just mean that your tables are already up to date.\n This script is safe to run even if your tables are already up to date!	Notice
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/23	 Warning message(s) produced for a statement can be printed by explicitly\n adding a 'SHOW WARNINGS' after the statement.	Notice
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/31	 Detect whether or not we had the Grant_priv column	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/38	 Fix privileges for old tables	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/43	 The second alter changes ssl_type to new 4.0.2 format	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/44	 Adding columns needed by GRANT .. REQUIRE (openssl)	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/54	 tables_priv	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/78	 columns_priv	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/81	 Name change of Type -> Column_priv from MySQL 3.22.12	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/102	  Add the new 'type' column to the func table.	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/108	  Change the user and db tables to current format	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/111	 Detect whether we had Show_db_priv	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/124	 Convert privileges so that users have similar privileges as before	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/129	  Add fields that can be used to limit number of questions and connections\n  for some users.	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/139	  Add Create_tmp_table_priv and Lock_tables_priv to db	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/153	 Convert all tables to UTF-8 with binary collation\n and reset all char columns to correct width	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/209	 Modify log tables.	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/251	 Detect whether we had Create_view_priv	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/257	 Create VIEWs privileges (v5.0)	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/266	 Show VIEWs privileges (v5.0)	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/275	 Assign create/show view privileges to people who have create provileges	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/286	 Create PROCEDUREs privileges (v5.0)	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/295	 Alter PROCEDUREs privileges (v5.0)	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/307	 Assign create/alter routine privileges to people who have create privileges	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/313	 Add max_user_connections resource limit	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/318	 user.Create_user_priv	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/331	 procs_priv	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/354	 proc	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/357	 Correct the name fields to not binary, and expand sql_data_access	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/404	 Correct the character set and collation	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/406	 Reset some fields after the conversion	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/466	 Change comment from char(64) to text	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/471	 EVENT privilege	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/485	 EVENT table	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/489	 Add sql_mode column just in case.	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/491	 Update list of sql_mode values.	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/560	 TRIGGER privilege	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/575	 user.Create_tablespace_priv	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/587	 Unlike 'performance_schema', the 'mysql' database is reserved already,\n so no user procedure is supposed to be there.\n\n NOTE: until upgrade is finished, stored routines are not available,\n because system tables (e.g. mysql.proc) might be not usable.	Notice
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/597	 For broken upgrades, SIGNAL the error	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/615	 establish if the field is already there.	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/622	 need to compensate for the ALTER TABLE user .. CONVERT TO CHARACTER SET above	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/625	 Need to pre-fill mysql.proxies_priv with access for root even when upgrading from\n older versions	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/633	 Checking for any duplicate hostname and username combination are exists.\n If exits we will throw error.	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/646	 Get warnings (if any)	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/650	 Convering the host name to lower case for existing users	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/654	 mysql.ndb_binlog_index	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/656	 Change type from BIGINT to INT	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/662	 Add new columns	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/667	 New primary key	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/672	 Activate the new, possible modified privilege tables\n This should not be needed, but gives us some extra testing that the above\n changes was correct	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/696	 Check for accounts with old pre-4.1 passwords and issue a warning	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/699	 SCRAMBLED_PASSWORD_CHAR_LENGTH_323 = 16	Notice
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/702	 signal the deprecation error	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/709	 Get warnings (if any)	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/715	 Check for non-empty host table and issue a warning	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/736	 Get warnings (if any)	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_system_tables_fix.sql	alibaba/AliSQL/scripts/mysql_system_tables_fix.sql/741	 Upgrade help tables	Functional-Inline
EN	SQL	alibaba/AliSQL	scripts/mysql_test_data_timezone.sql	alibaba/AliSQL/scripts/mysql_test_data_timezone.sql/1	 Copyright (C) 2007 MySQL AB\n Use is subject to license terms\n\n This program is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation; version 2 of the License.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n \n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA	General
EN	SQL	alibaba/AliSQL	storage/ndb/clusterj/clusterj-test/src/main/resources/schema.sql	alibaba/AliSQL/storage/ndb/clusterj/clusterj-test/src/main/resources/schema.sql/1	 the first statement is a drop table for the test table	Functional-Inline
EN	SQL	alibaba/AliSQL	storage/ndb/clusterj/clusterj-test/src/main/resources/schema.sql	alibaba/AliSQL/storage/ndb/clusterj/clusterj-test/src/main/resources/schema.sql/3	 the second statement is a test; if it succeeds, skip the rest of the file.	Functional-Inline
EN	SQL	alibaba/AliSQL	storage/ndb/clusterj/clusterj-test/src/main/resources/schema.sql	alibaba/AliSQL/storage/ndb/clusterj/clusterj-test/src/main/resources/schema.sql/4	 the following statements are delimited by semicolon	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_derby.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_derby.sql/1	 Copyright 2010 Sun Microsystems, Inc.\n  All rights reserved. Use is subject to license terms.\n\n This program is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation; version 2 of the License.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA	General
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_derby.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_derby.sql/19	 DROP TABLE IF EXISTS not supported yet by derby	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_derby.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_derby.sql/53	 derby already creates an index on B0.a_id	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_derby.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_derby.sql/55	 seems that these datatypes are not supported (parse error with ij):	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_derby.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_derby.sql/56	        cvarbinary_def  VARBINARY(202),	Code
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_derby.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_derby.sql/57	        ctext_def       TEXT(202),	Code
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/1	 Copyright (c) 2010, Oracle and/or its affiliates. All rights reserved.\n\n This program is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation; version 2 of the License.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA	General
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/16	 SET storage_engine=MEMORY;\n fails with\n ERROR 1163 (42000) at line 24: The used table type doesn't support BLOB/TEXT columns	ToDo
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/21	 SET storage_engine=INNODB;	Code
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/22	 SET storage_engine=MYISAM;	Code
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/48	 crund code currently does not support VARBINARY/CHAR > 202	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/56	        cvarchar_ascii  VARCHAR(202) CHARACTER SET ASCII,	Code
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/57	        ctext_ascii     TEXT(202) CHARACTER SET ASCII,	Code
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/58	        cvarchar_ucs2   VARCHAR(202) CHARACTER SET UCS2,	Code
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/59	        ctext_ucs2      TEXT(202) CHARACTER SET UCS2,	Code
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/60	        cvarchar_utf8   VARCHAR(202) CHARACTER SET UTF8,	Code
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/61	        ctext_utf8      TEXT(202) CHARACTER SET UTF8,	Code
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/73	 TEXT stores first 256 in primary table, rest in parts table at\n different chunk sizes	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/76	 VARBINARY/VARCHAR always store in primary tables, hence 8k limit == 8052B	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/78	 5.1 Reference Manual, Data Types (10)	General
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/79	 Numeric Types:	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/80	 * BIT[(M)] (1 <= M <= 64, default= 1, approximately (M+7)/8 bytes)	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/81	 * BOOL, BOOLEAN (synonyms for TINYINT(1))	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/82	 * INT[(M)], INTEGER[(M)] [UNSIGNED] (4 bytes)	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/83	   TINYINT[(M)] (1 byte), SMALLINT[(M)] (2 bytes),	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/84	   MEDIUMINT[(M)] (3 bytes), BIGINT[(M)] (8 bytes)	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/85	 * FLOAT[(M,D)] [UNSIGNED] (4 bytes if 0 <= p <= 24, 8 bytes if 25 <= p <= 53)	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/86	 * DOUBLE[(M,D)], DOUBLE[(M,D)], REAL[(M,D)] [UNSIGNED] (8 bytes)	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/87	 * DECIMAL[(M[,D])],DEC[(M[,D])],NUMERIC[(M[,D])],FIXED[(M[,D])] [UNSIGNED]	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/88	   (M*4/9 bytes plus extra)	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/89	 Date Types:	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/90	 * DATETIME (8 bytes)	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/91	 * DATE (3 bytes, refman also says 4 bytes)	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/92	 * TIME (3 bytes)	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/93	 * TIMESTAMP (4 bytes)	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/94	 * YEAR[(2|4)] (1 byte)	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/95	 String Types:	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/96	 * BINARY(M), [NATIONAL] CHAR[(M)] [CHARACTER SET name] [COLLATE name]	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/97	   (fixed-length, 0 <= M <= 2^8-1, default=1, right-padded)	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/98	 * VARBINARY(M), [NATIONAL] VARCHAR[(M)] [CHARACTER SET name] [COLLATE name]	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/99	   (variable-length, 0 <= M <= 2^16-1, 1..2-byte length prefix)	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/100	 * BLOB[(M)], TEXT[(M)] [CHARACTER SET name] [COLLATE name]	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/101	   (max length = 2^16-1 bytes, 2-byte length prefix, no default values)	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/102	 * TINYBLOB, TINYTEXT (1-byte length prefix),	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/103	 * MEDIUMBLOB, MEDIUMTEXT (3-byte length prefix),	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/104	 * LONGBLOB, LONGTEXT (4-byte length prefix)	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/105	 * ENUM (max 2^16-1 elements, 1..2 bytes)	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/106	 * SET (max 64 elements, 1,2,3,4, or 8 bytes)	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/107	 varying size types subject to the maximum row size	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/108	 character sizes subject to the character set (utf8 = 1..3 bytes/character)	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/110	 The largest values of a BLOB or TEXT object that can be transmitted\n between the client and server is determined by the amount of available\n memory and the size of the communications buffers. You can change the\n message buffer size by changing the value of the max_allowed_packet\n variable, but you must do so for both the server and the client program.	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/116	 Each BLOB or TEXT value is represented internally by a separately\n allocated object. This is in contrast to all other data types, for which\n storage is allocated once per column when the table is opened.	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/120	 TEXT and BLOB columns are implemented differently in the NDB Cluster\n storage engine, wherein each row in a TEXT column is made up of two\n separate parts. One of these is of fixed size (256 bytes), and is\n actually stored in the original table. The other consists of any data\n in excess of 256 bytes, which is stored in a hidden table. The rows\n in this second table are always 2,000 bytes long. This means that the\n size of a TEXT column is 256 if size <= 256 (where size represents\n the size of the row); otherwise, the size is 256 + size + (2000 –\n (size – 256) % 2000).	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/130	 For tables using the NDBCLUSTER storage engine, there is the factor of\n 4-byte alignment to be taken into account when calculating storage\n requirements. This means that all NDB data storage is done in multiples\n of 4 bytes.  For example, in NDBCLUSTER tables, the TINYINT, SMALLINT,\n MEDIUMINT, and INTEGER (INT) column types each require 4 bytes storage\n per record due to the alignment factor.	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/137	 When calculating storage requirements for MySQL Cluster tables, you must\n also remember that every table using the NDBCLUSTER storage engine\n requires a primary key; if no primary key is defined by the user, then a\n “hidden” primary key will be created by NDB.  This hidden primary key\n consumes 31-35 bytes per table record.	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/143	 The NDBCLUSTER storage engine in MySQL 5.1 supports variable-width\n columns. This means that a VARCHAR column in a MySQL Cluster table\n requires the same amount of storage as it would using any other\n storage engine, with the exception that such values are 4-byte\n aligned. Thus, the string 'abcd' stored in a VARCHAR(50) column using\n the latin1 character set requires 8 bytes (rather than 6 bytes for\n the same column value in a MyISAM table). This represents a change in\n behavior from earlier versions of NDB-CLUSTER, where a VARCHAR(50)\n column would require 52 bytes storage per record regardless of the\n length of the string being stored.	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/154	 You may find the ndb_size.pl utility to be useful for estimating NDB\n storage requirements. This Perl script connects to a current MySQL\n (non-Cluster) database and creates a report on how much space that\n database would require if it used the NDBCLUSTER storage engine. See\n Section 16.10.15, "ndb_size.pl — NDBCLUSTER Size Requirement Estimator",\n for more information.	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/161	 9.2. The Character Set Used for Data and Sorting\n default: latin1 (cp1252 West European) character set and the\n latin1_swedish_ci collation\n CHARSET may be one of binary, armscii8, ascii, big5, cp1250, cp1251,\n cp1256, cp1257, cp850, cp852, cp866, cp932, dec8, eucjpms, euckr,\n gb2312, gbk, geostd8, greek, hebrew, hp8, keybcs2, koi8r, koi8u,\n latin1, latin2, latin5, latin7, macce, macroman, sjis, swe7, tis620,\n ucs2, ujis, utf8.	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/170	 java.nio.charset.Charset:\n The native character encoding of the Java programming language is UTF-16.\n [not sure: \n      out.println("default charset: " + java.nio.charset.Charset.defaultCharset().displayName());\n  shows: UTF-8\n ]	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/177	 http://unicode.org/faq/basic_q.html#14\n Q: What is the difference between UCS-2 and UTF-16?\n A: UCS-2 is what a Unicode implementation was up to Unicode 1.1,\n before surrogate code points and UTF-16 were added as concepts to\n Version 2.0 of the standard. This term should be now be avoided.	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/183	 When interpreting what people have meant by "UCS-2" in past usage, it\n is best thought of as not a data format, but as an indication that an\n implementation does not interpret any supplementary characters. In\n particular, for the purposes of data exchange, UCS-2 and UTF-16 are\n identical formats. Both are 16-bit, and have exactly the same code\n unit representation.	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/190	 The effective difference between UCS-2 and UTF-16 lies at a different\n level, when one is interpreting a sequence code units as code points\n or as characters. In that case, a UCS-2 implementation would not\n handle processing like character properties, codepoint boundaries,\n collation, etc. for supplementary characters. [MD] & [KW]	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/197	 5.1 Reference Manual, NDB Limitations (16.14)\n* no indexes on TEXT and BLOB colums; but VARCHAR allowed\n* attribute names are truncated to 31 characters (errors if not unique)\n* database names and table names can total a maximum of 122 characters\n* past issues with table names having special characters\n* the maximum number of NDB tables is limited to 20320\n* the maximum number of attributes (columns and indexes) per table is\n  limited to 128\n* the maximum number of attributes per key is 32\n* the maximum permitted size of any one row is 8K; each BLOB or TEXT\n  column contributes 256 + 8 = 264 bytes towards this total\n* the foreign key construct is ignored (just as it is in MyISAM tables)	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/210	 * There are no durable commits on disk. Commits are replicated, but there\n  is no guarantee that logs are flushed to disk on commit.\n* Range scans. There are query performance issues due to sequential access\n  to the NDB storage engine; it is also relatively more expensive to do\n  many range scans than it is with either MyISAM or InnoDB.\n* Reliability of Records in range. The Records in range statistic is\n  available but is not completely tested or officially supported. This may\n  result in non-optimal query plans in some cases. If necessary, you can\n  employ USE INDEX or FORCE INDEX to alter the execution plan\n* Unique hash indexes created with USING HASH cannot be used for accessing\n  a table if NULL is given as part of the key.	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/222	 * No distributed table locks. A LOCK TABLES works only for the SQL node on\n  which the lock is issued; no other SQL node in the cluster “sees” this\n  lock.  For example, ALTER TABLE is not fully locking when running\n  multiple MySQL servers (SQL nodes).	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/227	 * DDL operations. DDL operations (such as CREATE TABLE or ALTER TABLE) are\n  not safe from data node failures. If a data node fails while trying to\n  perform one of these, the data dictionary is locked and no further DDL\n  statements can be executed without restarting the cluster.	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/232	 * The result of operations such as ALTER TABLE and CREATE INDEX performed\n   on one SQL node in the cluster are now visible to the cluster's other\n   SQL nodes without any additional action being taken.	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_mysql.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_mysql.sql/236	 quit;	Code
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/src/tables_ora8.sql	alibaba/AliSQL/storage/ndb/test/crund/src/tables_ora8.sql/1	 Copyright 2010 Sun Microsystems, Inc.\n  All rights reserved. Use is subject to license terms.\n\n This program is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation; version 2 of the License.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA	General
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/tws/schema.sql	alibaba/AliSQL/storage/ndb/test/crund/tws/schema.sql/1	 Copyright (c) 2010, 2011, Oracle and/or its affiliates. All rights reserved.\n\n This program is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation; version 2 of the License.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA	General
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/tws/schema.sql	alibaba/AliSQL/storage/ndb/test/crund/tws/schema.sql/19	 USE testdb;	Code
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/tws/schema.sql	alibaba/AliSQL/storage/ndb/test/crund/tws/schema.sql/41	 "Job buffer congestion" crashes with node failure with unique indexes\n http://bugs.mysql.com/bug.php?id=56552	Notice
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/tws/schema.sql	alibaba/AliSQL/storage/ndb/test/crund/tws/schema.sql/43	        UNIQUE INDEX c1_UNIQUE USING BTREE (c1 ASC),	Code
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/tws/schema.sql	alibaba/AliSQL/storage/ndb/test/crund/tws/schema.sql/44	        UNIQUE INDEX c2_UNIQUE (c2 ASC),	Code
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/tws/schema.sql	alibaba/AliSQL/storage/ndb/test/crund/tws/schema.sql/45	        UNIQUE INDEX c7_UNIQUE (c7 ASC),	Code
EN	SQL	alibaba/AliSQL	storage/ndb/test/crund/tws/schema.sql	alibaba/AliSQL/storage/ndb/test/crund/tws/schema.sql/46	        UNIQUE INDEX c8_UNIQUE (c8 ASC)	Code
EN	SQL	alibaba/AliSQL	storage/ndb/tools/ndb_dist_priv.sql	alibaba/AliSQL/storage/ndb/tools/ndb_dist_priv.sql/1	 Copyright (c) 2011, Oracle and/or its affiliates. All rights reserved.\n\n This program is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation; version 2 of the License.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA	General
EN	SQL	kyleconroy/sqlc	examples/authors/query.sql	kyleconroy/sqlc/examples/authors/query.sql/1	 name: GetAuthor :one	IDE
EN	SQL	kyleconroy/sqlc	examples/authors/query.sql	kyleconroy/sqlc/examples/authors/query.sql/5	 name: ListAuthors :many	IDE
EN	SQL	kyleconroy/sqlc	examples/authors/query.sql	kyleconroy/sqlc/examples/authors/query.sql/9	 name: CreateAuthor :one	IDE
EN	SQL	kyleconroy/sqlc	examples/authors/query.sql	kyleconroy/sqlc/examples/authors/query.sql/17	 name: DeleteAuthor :exec	IDE
EN	SQL	kyleconroy/sqlc	examples/booktest/mysql/query.sql	kyleconroy/sqlc/examples/booktest/mysql/query.sql/1	 name: GetAuthor :one 	IDE
EN	SQL	kyleconroy/sqlc	examples/booktest/mysql/query.sql	kyleconroy/sqlc/examples/booktest/mysql/query.sql/5	 name: GetBook :one 	IDE
EN	SQL	kyleconroy/sqlc	examples/booktest/mysql/query.sql	kyleconroy/sqlc/examples/booktest/mysql/query.sql/9	 name: DeleteBook :exec 	IDE
EN	SQL	kyleconroy/sqlc	examples/booktest/mysql/query.sql	kyleconroy/sqlc/examples/booktest/mysql/query.sql/13	 name: BooksByTitleYear :many 	IDE
EN	SQL	kyleconroy/sqlc	examples/booktest/mysql/query.sql	kyleconroy/sqlc/examples/booktest/mysql/query.sql/17	 name: CreateAuthor :exec 	IDE
EN	SQL	kyleconroy/sqlc	examples/booktest/mysql/query.sql	kyleconroy/sqlc/examples/booktest/mysql/query.sql/20	 name: CreateBook :exec 	IDE
EN	SQL	kyleconroy/sqlc	examples/booktest/mysql/query.sql	kyleconroy/sqlc/examples/booktest/mysql/query.sql/38	 name: UpdateBook :exec 	IDE
EN	SQL	kyleconroy/sqlc	examples/booktest/mysql/query.sql	kyleconroy/sqlc/examples/booktest/mysql/query.sql/43	 name: UpdateBookISBN :exec 	IDE
EN	SQL	kyleconroy/sqlc	examples/booktest/mysql/query.sql	kyleconroy/sqlc/examples/booktest/mysql/query.sql/48	 name: DeleteAuthorBeforeYear :exec 	IDE
EN	SQL	kyleconroy/sqlc	examples/booktest/mysql/schema.sql	kyleconroy/sqlc/examples/booktest/mysql/schema.sql/4	 DROP FUNCTION IF EXISTS say_hello;	Code
EN	SQL	kyleconroy/sqlc	examples/booktest/mysql/schema.sql	kyleconroy/sqlc/examples/booktest/mysql/schema.sql/23	 CONSTRAINT FOREIGN KEY (author_id) REFERENCES authors(author_id)	Code
EN	SQL	kyleconroy/sqlc	examples/booktest/mysql/schema.sql	kyleconroy/sqlc/examples/booktest/mysql/schema.sql/28	\nCREATE FUNCTION say_hello(s text) RETURNS text\n  DETERMINISTIC\n  RETURN CONCAT('hello ', s);\n	Code
EN	SQL	kyleconroy/sqlc	examples/booktest/postgresql/query.sql	kyleconroy/sqlc/examples/booktest/postgresql/query.sql/1	 name: GetAuthor :one	IDE
EN	SQL	kyleconroy/sqlc	examples/booktest/postgresql/query.sql	kyleconroy/sqlc/examples/booktest/postgresql/query.sql/5	 name: GetBook :one	IDE
EN	SQL	kyleconroy/sqlc	examples/booktest/postgresql/query.sql	kyleconroy/sqlc/examples/booktest/postgresql/query.sql/9	 name: DeleteBook :exec	IDE
EN	SQL	kyleconroy/sqlc	examples/booktest/postgresql/query.sql	kyleconroy/sqlc/examples/booktest/postgresql/query.sql/13	 name: BooksByTitleYear :many	IDE
EN	SQL	kyleconroy/sqlc	examples/booktest/postgresql/query.sql	kyleconroy/sqlc/examples/booktest/postgresql/query.sql/17	 name: BooksByTags :many	IDE
EN	SQL	kyleconroy/sqlc	examples/booktest/postgresql/query.sql	kyleconroy/sqlc/examples/booktest/postgresql/query.sql/28	 name: CreateAuthor :one	IDE
EN	SQL	kyleconroy/sqlc	examples/booktest/postgresql/query.sql	kyleconroy/sqlc/examples/booktest/postgresql/query.sql/32	 name: CreateBook :one	IDE
EN	SQL	kyleconroy/sqlc	examples/booktest/postgresql/query.sql	kyleconroy/sqlc/examples/booktest/postgresql/query.sql/52	 name: UpdateBook :exec	IDE
EN	SQL	kyleconroy/sqlc	examples/booktest/postgresql/query.sql	kyleconroy/sqlc/examples/booktest/postgresql/query.sql/57	 name: UpdateBookISBN :exec	IDE
EN	SQL	kyleconroy/sqlc	examples/jets/query-building.sql	kyleconroy/sqlc/examples/jets/query-building.sql/1	 name: CountPilots :one	IDE
EN	SQL	kyleconroy/sqlc	examples/jets/query-building.sql	kyleconroy/sqlc/examples/jets/query-building.sql/4	 name: ListPilots :many	IDE
EN	SQL	kyleconroy/sqlc	examples/jets/query-building.sql	kyleconroy/sqlc/examples/jets/query-building.sql/7	 name: DeletePilot :exec	IDE
EN	SQL	kyleconroy/sqlc	examples/jets/schema.sql	kyleconroy/sqlc/examples/jets/schema.sql/26	 Join table	Notice
EN	SQL	kyleconroy/sqlc	examples/jets/schema.sql	kyleconroy/sqlc/examples/jets/schema.sql/32	 Composite primary key	Notice
EN	SQL	kyleconroy/sqlc	examples/kotlin/src/main/resources/authors/query.sql	kyleconroy/sqlc/examples/kotlin/src/main/resources/authors/query.sql/1	 name: GetAuthor :one	IDE
EN	SQL	kyleconroy/sqlc	examples/kotlin/src/main/resources/authors/query.sql	kyleconroy/sqlc/examples/kotlin/src/main/resources/authors/query.sql/5	 name: ListAuthors :many	IDE
EN	SQL	kyleconroy/sqlc	examples/kotlin/src/main/resources/authors/query.sql	kyleconroy/sqlc/examples/kotlin/src/main/resources/authors/query.sql/9	 name: CreateAuthor :one	IDE
EN	SQL	kyleconroy/sqlc	examples/kotlin/src/main/resources/authors/query.sql	kyleconroy/sqlc/examples/kotlin/src/main/resources/authors/query.sql/17	 name: DeleteAuthor :exec	IDE
EN	SQL	kyleconroy/sqlc	examples/kotlin/src/main/resources/booktest/postgresql/query.sql	kyleconroy/sqlc/examples/kotlin/src/main/resources/booktest/postgresql/query.sql/1	 name: GetAuthor :one	IDE
EN	SQL	kyleconroy/sqlc	examples/kotlin/src/main/resources/booktest/postgresql/query.sql	kyleconroy/sqlc/examples/kotlin/src/main/resources/booktest/postgresql/query.sql/5	 name: GetBook :one	IDE
EN	SQL	kyleconroy/sqlc	examples/kotlin/src/main/resources/booktest/postgresql/query.sql	kyleconroy/sqlc/examples/kotlin/src/main/resources/booktest/postgresql/query.sql/9	 name: DeleteBook :exec	IDE
EN	SQL	kyleconroy/sqlc	examples/kotlin/src/main/resources/booktest/postgresql/query.sql	kyleconroy/sqlc/examples/kotlin/src/main/resources/booktest/postgresql/query.sql/13	 name: BooksByTitleYear :many	IDE
EN	SQL	kyleconroy/sqlc	examples/kotlin/src/main/resources/booktest/postgresql/query.sql	kyleconroy/sqlc/examples/kotlin/src/main/resources/booktest/postgresql/query.sql/17	 name: BooksByTags :many	IDE
EN	SQL	kyleconroy/sqlc	examples/kotlin/src/main/resources/booktest/postgresql/query.sql	kyleconroy/sqlc/examples/kotlin/src/main/resources/booktest/postgresql/query.sql/28	 name: CreateAuthor :one	IDE
EN	SQL	kyleconroy/sqlc	examples/kotlin/src/main/resources/booktest/postgresql/query.sql	kyleconroy/sqlc/examples/kotlin/src/main/resources/booktest/postgresql/query.sql/32	 name: CreateBook :one	IDE
EN	SQL	kyleconroy/sqlc	examples/kotlin/src/main/resources/booktest/postgresql/query.sql	kyleconroy/sqlc/examples/kotlin/src/main/resources/booktest/postgresql/query.sql/52	 name: UpdateBook :exec	IDE
EN	SQL	kyleconroy/sqlc	examples/kotlin/src/main/resources/booktest/postgresql/query.sql	kyleconroy/sqlc/examples/kotlin/src/main/resources/booktest/postgresql/query.sql/57	 name: UpdateBookISBN :exec	IDE
EN	SQL	kyleconroy/sqlc	examples/kotlin/src/main/resources/jets/query-building.sql	kyleconroy/sqlc/examples/kotlin/src/main/resources/jets/query-building.sql/1	 name: CountPilots :one	IDE
EN	SQL	kyleconroy/sqlc	examples/kotlin/src/main/resources/jets/query-building.sql	kyleconroy/sqlc/examples/kotlin/src/main/resources/jets/query-building.sql/4	 name: ListPilots :many	IDE
EN	SQL	kyleconroy/sqlc	examples/kotlin/src/main/resources/jets/query-building.sql	kyleconroy/sqlc/examples/kotlin/src/main/resources/jets/query-building.sql/7	 name: DeletePilot :exec	IDE
EN	SQL	kyleconroy/sqlc	examples/kotlin/src/main/resources/jets/schema.sql	kyleconroy/sqlc/examples/kotlin/src/main/resources/jets/schema.sql/26	 Join table	Notice
EN	SQL	kyleconroy/sqlc	examples/kotlin/src/main/resources/jets/schema.sql	kyleconroy/sqlc/examples/kotlin/src/main/resources/jets/schema.sql/32	 Composite primary key	Notice
EN	SQL	kyleconroy/sqlc	examples/kotlin/src/main/resources/ondeck/query/city.sql	kyleconroy/sqlc/examples/kotlin/src/main/resources/ondeck/query/city.sql/1	 name: ListCities :many	IDE
EN	SQL	kyleconroy/sqlc	examples/kotlin/src/main/resources/ondeck/query/city.sql	kyleconroy/sqlc/examples/kotlin/src/main/resources/ondeck/query/city.sql/6	 name: GetCity :one	IDE
EN	SQL	kyleconroy/sqlc	examples/kotlin/src/main/resources/ondeck/query/city.sql	kyleconroy/sqlc/examples/kotlin/src/main/resources/ondeck/query/city.sql/11	 name: CreateCity :one	IDE
EN	SQL	kyleconroy/sqlc	examples/kotlin/src/main/resources/ondeck/query/city.sql	kyleconroy/sqlc/examples/kotlin/src/main/resources/ondeck/query/city.sql/12	 Create a new city. The slug must be unique.	Functional-Inline
EN	SQL	kyleconroy/sqlc	examples/ondeck/query/city.sql	kyleconroy/sqlc/examples/ondeck/query/city.sql/12	 Create a new city. The slug must be unique.	Functional-Inline
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/comparisons/query.sql	kyleconroy/sqlc/internal/endtoend/testdata/comparisons/query.sql/1	 Comparison Functions and Operators	Functional-Module
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/comparisons/query.sql	kyleconroy/sqlc/internal/endtoend/testdata/comparisons/query.sql/2	 https://www.postgresql.org/docs/current/functions-comparison.html	Notice
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/comparisons/query.sql	kyleconroy/sqlc/internal/endtoend/testdata/comparisons/query.sql/6	 name: GreaterThan :many	IDE
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/comparisons/query.sql	kyleconroy/sqlc/internal/endtoend/testdata/comparisons/query.sql/9	 name: LessThan :many	IDE
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/comparisons/query.sql	kyleconroy/sqlc/internal/endtoend/testdata/comparisons/query.sql/12	 name: GreaterThanOrEqual :many	IDE
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/comparisons/query.sql	kyleconroy/sqlc/internal/endtoend/testdata/comparisons/query.sql/15	 name: LessThanOrEqual :many	IDE
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/comparisons/query.sql	kyleconroy/sqlc/internal/endtoend/testdata/comparisons/query.sql/18	 name: NotEqual :many	IDE
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/comparisons/query.sql	kyleconroy/sqlc/internal/endtoend/testdata/comparisons/query.sql/21	 name: AlsoNotEqual :many	IDE
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/comparisons/query.sql	kyleconroy/sqlc/internal/endtoend/testdata/comparisons/query.sql/24	 name: Equal :many	IDE
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/composite_type/query.sql	kyleconroy/sqlc/internal/endtoend/testdata/composite_type/query.sql/18	 name: ListPaths :many	IDE
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/datatype/sql/character.sql	kyleconroy/sqlc/internal/endtoend/testdata/datatype/sql/character.sql/1	 Character Types	Functional-Module
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/datatype/sql/character.sql	kyleconroy/sqlc/internal/endtoend/testdata/datatype/sql/character.sql/2	 https://www.postgresql.org/docs/current/datatype-character.html	Notice
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/datatype/sql/datetime.sql	kyleconroy/sqlc/internal/endtoend/testdata/datatype/sql/datetime.sql/1	 Date/Time Types	Functional-Module
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/datatype/sql/datetime.sql	kyleconroy/sqlc/internal/endtoend/testdata/datatype/sql/datetime.sql/2	 https://www.postgresql.org/docs/current/datatype-datetime.html	Notice
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/datatype/sql/numeric.sql	kyleconroy/sqlc/internal/endtoend/testdata/datatype/sql/numeric.sql/1	 Numeric Types	Functional-Module
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/datatype/sql/numeric.sql	kyleconroy/sqlc/internal/endtoend/testdata/datatype/sql/numeric.sql/2	 https://www.postgresql.org/docs/current/datatype-numeric.html	Notice
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/datatype/sql/numeric.sql	kyleconroy/sqlc/internal/endtoend/testdata/datatype/sql/numeric.sql/4	 TODO: this maps incorrectly to int16, not NullInt16	ToDo
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/datatype/sql/numeric.sql	kyleconroy/sqlc/internal/endtoend/testdata/datatype/sql/numeric.sql/12	 TODO: this maps incorrectly to int16, not NullInt16	ToDo
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/enums/sql/enum.sql	kyleconroy/sqlc/internal/endtoend/testdata/enums/sql/enum.sql/2	 Valid separators	Notice
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/enums/sql/enum.sql	kyleconroy/sqlc/internal/endtoend/testdata/enums/sql/enum.sql/7	 Strip unknown characters	Notice
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/invalid_func_args/query.sql	kyleconroy/sqlc/internal/endtoend/testdata/invalid_func_args/query.sql/4	 stderr	Code
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/invalid_func_args/query.sql	kyleconroy/sqlc/internal/endtoend/testdata/invalid_func_args/query.sql/6	 query.sql:1:8: function random(unknown) does not exist	ToDo
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/invalid_func_args/query.sql	kyleconroy/sqlc/internal/endtoend/testdata/invalid_func_args/query.sql/7	 query.sql:2:8: function position() does not exist	ToDo
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/invalid_params/query.sql	kyleconroy/sqlc/internal/endtoend/testdata/invalid_params/query.sql/15	 stderr	Code
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/invalid_params/query.sql	kyleconroy/sqlc/internal/endtoend/testdata/invalid_params/query.sql/17	 query.sql:4:1: could not determine data type of parameter $1	ToDo
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/invalid_params/query.sql	kyleconroy/sqlc/internal/endtoend/testdata/invalid_params/query.sql/18	 query.sql:7:1: could not determine data type of parameter $2	ToDo
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/invalid_params/query.sql	kyleconroy/sqlc/internal/endtoend/testdata/invalid_params/query.sql/19	 query.sql:10:8: column "foo" does not exist	ToDo
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/invalid_params/query.sql	kyleconroy/sqlc/internal/endtoend/testdata/invalid_params/query.sql/20	 query.sql:13:1: query mixes positional parameters ($1) and named parameters (sqlc.arg or @arg)	ToDo
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/invalid_queries_bar/query.sql	kyleconroy/sqlc/internal/endtoend/testdata/invalid_queries_bar/query.sql/7	 query.sql:2:1: INSERT has more target columns than expressions	ToDo
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/invalid_queries_bar/query.sql	kyleconroy/sqlc/internal/endtoend/testdata/invalid_queries_bar/query.sql/8	 query.sql:3:1: INSERT has more expressions than target columns	ToDo
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/invalid_queries_foo/query.sql	kyleconroy/sqlc/internal/endtoend/testdata/invalid_queries_foo/query.sql/23	 query.sql:4:1: invalid query comment: -- name: ListFoos	ToDo
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/invalid_queries_foo/query.sql	kyleconroy/sqlc/internal/endtoend/testdata/invalid_queries_foo/query.sql/24	 query.sql:7:1: invalid query comment: -- name: ListFoos :one :many	ToDo
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/invalid_queries_foo/query.sql	kyleconroy/sqlc/internal/endtoend/testdata/invalid_queries_foo/query.sql/25	 query.sql:10:1: invalid query type: :two	ToDo
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/invalid_queries_foo/query.sql	kyleconroy/sqlc/internal/endtoend/testdata/invalid_queries_foo/query.sql/26	 query.sql:13:1: query "DeleteFoo" specifies parameter ":one" without containing a RETURNING clause	ToDo
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/invalid_queries_foo/query.sql	kyleconroy/sqlc/internal/endtoend/testdata/invalid_queries_foo/query.sql/27	 query.sql:16:1: query "UpdateFoo" specifies parameter ":one" without containing a RETURNING clause	ToDo
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/invalid_queries_foo/query.sql	kyleconroy/sqlc/internal/endtoend/testdata/invalid_queries_foo/query.sql/28	 query.sql:19:1: query "InsertFoo" specifies parameter ":one" without containing a RETURNING clause	ToDo
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/missing_semicolon/query.sql	kyleconroy/sqlc/internal/endtoend/testdata/missing_semicolon/query.sql/11	 query.sql:7:1: missing semicolon at end of file	ToDo
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/mysql_errors/query.sql	kyleconroy/sqlc/internal/endtoend/testdata/mysql_errors/query.sql/21	 query.sql:1:1: invalid function call "sqlc.argh", did you mean "sqlc.arg"?	ToDo
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/mysql_errors/query.sql	kyleconroy/sqlc/internal/endtoend/testdata/mysql_errors/query.sql/22	 query.sql:4:1: invalid custom argument value "sqlc.arg(sqlc.arg(target_id))"	ToDo
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/mysql_errors/query.sql	kyleconroy/sqlc/internal/endtoend/testdata/mysql_errors/query.sql/23	 query.sql:7:1: invalid custom argument value "sqlc.arg(?)"	ToDo
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/mysql_errors/query.sql	kyleconroy/sqlc/internal/endtoend/testdata/mysql_errors/query.sql/24	 query.sql:11:39: syntax error at or near "from"	ToDo
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/mysql_errors/query.sql	kyleconroy/sqlc/internal/endtoend/testdata/mysql_errors/query.sql/25	 query.sql:14:9: syntax error at or near "selectt"	ToDo
EN	SQL	kyleconroy/sqlc	internal/endtoend/testdata/mysql_errors/query.sql	kyleconroy/sqlc/internal/endtoend/testdata/mysql_errors/query.sql/26	 query.sql:17:35: syntax error at or near "select"	ToDo
EN	SQL	cockroachdb/cockroach	pkg/ccl/backupccl/testdata/restore_old_versions/create.sql	cockroachdb/cockroach/pkg/ccl/backupccl/testdata/restore_old_versions/create.sql/1	 The below SQL is used to create the data that is then exported with BACKUP\n for use in the RestoreOldVersions test. Each of t1, t2, and t3 should contain\n the same rows when ordered by k.	Functional-Module
EN	SQL	cockroachdb/cockroach	pkg/ccl/backupccl/testdata/restore_old_versions/create.sql	cockroachdb/cockroach/pkg/ccl/backupccl/testdata/restore_old_versions/create.sql/9	 t1 gets some modifications.	Functional-Inline
EN	SQL	cockroachdb/cockroach	pkg/ccl/backupccl/testdata/restore_old_versions/create.sql	cockroachdb/cockroach/pkg/ccl/backupccl/testdata/restore_old_versions/create.sql/17	 t2 is an unmodified table.	Functional-Inline
EN	SQL	cockroachdb/cockroach	pkg/ccl/backupccl/testdata/restore_old_versions/create.sql	cockroachdb/cockroach/pkg/ccl/backupccl/testdata/restore_old_versions/create.sql/21	 t3 and t4 are interleaved.	Functional-Inline
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/cockroachdump/dump.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/cockroachdump/dump.sql/24	 Validate foreign key constraints. These can fail if there was unvalidated data during the dump.	Functional-Inline
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/1	 MySQL dump 10.13  Distrib 8.0.12, for osx10.14 (x86_64)\n Host: localhost    Database: cockroachtestdata \nServer version	IDE
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/7	!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/8	!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/9	!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/11	!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/12	!40103 SET TIME_ZONE='+00:00' 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/13	!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/14	!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/15	!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/16	!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/19	 Table structure for table `everything`	Functional-Inline
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/23	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/56	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/59	 Dumping data for table `everything`	Functional-Inline
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/63	!40000 ALTER TABLE `everything` DISABLE KEYS 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/65	!40000 ALTER TABLE `everything` ENABLE KEYS 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/69	 Table structure for table `SECOND` 	Functional-Inline
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/73	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/83	!40101 SET character_set_client = @saved_cs_client  	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/86	 Dumping data for table `SECOND` 	Functional-Inline
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/90	!40000 ALTER TABLE `SECOND` DISABLE KEYS 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/92	!40000 ALTER TABLE `SECOND` ENABLE KEYS 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/96	 Table structure for table `simple` 	Functional-Inline
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/100	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/108	!40101 SET character_set_client = @saved_cs_client  	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/111	 Dumping data for table `simple`	Functional-Inline
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/115	!40000 ALTER TABLE `simple` DISABLE KEYS 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/117	!40000 ALTER TABLE `simple` ENABLE KEYS 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/121	 Table structure for table `third`	Functional-Inline
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/125	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/138	!40101 SET character_set_client = @saved_cs_client	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/141	 Dumping data for table `third` 	Functional-Inline
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/145	!40000 ALTER TABLE `third` DISABLE KEYS 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/146	!40000 ALTER TABLE `third` ENABLE KEYS  	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/148	!40103 SET TIME_ZONE=@OLD_TIME_ZONE 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/150	!40101 SET SQL_MODE=@OLD_SQL_MODE 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/151	!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/152	!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/153	!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/154	!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/155	!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/156	!40111 SET SQL_NOTES=@OLD_SQL_NOTES 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/db.sql/158	 Dump completed on 2018-11-19 20:27:42  	IDE
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/everything.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/everything.sql/1	 MySQL dump 10.13  Distrib 8.0.12, for osx10.14 (x86_64)\nHost: localhost    Database: cockroachtestdata\nServer version	IDE
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/everything.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/everything.sql/7	!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/everything.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/everything.sql/8	!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/everything.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/everything.sql/9	!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/everything.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/everything.sql/11	!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/everything.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/everything.sql/12	!40103 SET TIME_ZONE='+00:00' 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/everything.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/everything.sql/13	!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/everything.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/everything.sql/14	!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/everything.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/everything.sql/15	!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/everything.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/everything.sql/16	!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/everything.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/everything.sql/19	 Table structure for table `everything` 	Functional-Inline
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/everything.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/everything.sql/23	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/everything.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/everything.sql/56	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/everything.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/everything.sql/59	 Dumping data for table `everything` 	Functional-Inline
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/everything.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/everything.sql/63	!40000 ALTER TABLE `everything` DISABLE KEYS 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/everything.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/everything.sql/65	!40000 ALTER TABLE `everything` ENABLE KEYS 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/everything.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/everything.sql/67	!40103 SET TIME_ZONE=@OLD_TIME_ZONE 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/everything.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/everything.sql/69	!40101 SET SQL_MODE=@OLD_SQL_MODE 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/everything.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/everything.sql/70	!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/everything.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/everything.sql/71	!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/everything.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/everything.sql/72	!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/everything.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/everything.sql/73	!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/everything.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/everything.sql/74	!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/everything.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/everything.sql/75	!40111 SET SQL_NOTES=@OLD_SQL_NOTES 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/everything.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/everything.sql/77	 Dump completed on 2018-11-19 20:27:42 	IDE
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/second.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/second.sql/1	 MySQL dump 10.13  Distrib 8.0.12, for osx10.14 (x86_64)\nHost: localhost    Database: cockroachtestdata\nServer version	IDE
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/second.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/second.sql/7	!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/second.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/second.sql/8	!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/second.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/second.sql/9	!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/second.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/second.sql/11	!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/second.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/second.sql/12	!40103 SET TIME_ZONE='+00:00' 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/second.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/second.sql/13	!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/second.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/second.sql/14	!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/second.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/second.sql/15	!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/second.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/second.sql/16	!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/second.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/second.sql/19	 Table structure for table `SECOND` 	Functional-Inline
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/second.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/second.sql/23	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/second.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/second.sql/33	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/second.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/second.sql/36	 Dumping data for table `SECOND` 	Functional-Inline
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/second.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/second.sql/40	!40000 ALTER TABLE `SECOND` DISABLE KEYS 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/second.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/second.sql/42	!40000 ALTER TABLE `SECOND` ENABLE KEYS 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/second.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/second.sql/44	!40103 SET TIME_ZONE=@OLD_TIME_ZONE 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/second.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/second.sql/46	!40101 SET SQL_MODE=@OLD_SQL_MODE 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/second.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/second.sql/47	!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/second.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/second.sql/48	!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/second.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/second.sql/49	!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/second.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/second.sql/50	!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/second.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/second.sql/51	!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/second.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/second.sql/52	!40111 SET SQL_NOTES=@OLD_SQL_NOTES 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/second.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/second.sql/54	 Dump completed on 2018-11-19 20:27:42 	IDE
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/simple.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/simple.sql/1	 MySQL dump 10.13  Distrib 8.0.12, for osx10.14 (x86_64)\nHost: localhost    Database: cockroachtestdata\nServer version	IDE
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/simple.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/simple.sql/7	!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/simple.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/simple.sql/8	!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/simple.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/simple.sql/9	!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/simple.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/simple.sql/11	!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/simple.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/simple.sql/12	!40103 SET TIME_ZONE='+00:00' 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/simple.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/simple.sql/13	!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/simple.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/simple.sql/14	!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/simple.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/simple.sql/15	!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/simple.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/simple.sql/16	!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/simple.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/simple.sql/19	 Table structure for table `simple` 	Functional-Inline
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/simple.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/simple.sql/23	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/simple.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/simple.sql/31	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/simple.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/simple.sql/34	 Dumping data for table `simple` 	Functional-Inline
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/simple.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/simple.sql/38	!40000 ALTER TABLE `simple` DISABLE KEYS 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/simple.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/simple.sql/40	!40000 ALTER TABLE `simple` ENABLE KEYS 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/simple.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/simple.sql/42	!40103 SET TIME_ZONE=@OLD_TIME_ZONE 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/simple.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/simple.sql/44	!40101 SET SQL_MODE=@OLD_SQL_MODE 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/simple.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/simple.sql/45	!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/simple.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/simple.sql/46	!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/simple.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/simple.sql/47	!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/simple.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/simple.sql/48	!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/simple.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/simple.sql/49	!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/simple.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/simple.sql/50	!40111 SET SQL_NOTES=@OLD_SQL_NOTES 	Code
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/mysqldump/simple.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/mysqldump/simple.sql/52	 Dump completed on 2018-11-19 20:27:42 	IDE
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/pgdump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/pgdump/db.sql/2	 PostgreSQL database dump 	IDE
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/pgdump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/pgdump/db.sql/5	 Dumped from database version 9.6.9\nDumped by pg_dump version 9.6.9 	IDE
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/pgdump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/pgdump/db.sql/19	 Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 	IDE
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/pgdump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/pgdump/db.sql/26	 Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 	IDE
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/pgdump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/pgdump/db.sql/33	 Name: a_seq; Type: SEQUENCE; Schema: public; Owner: postgres 	IDE
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/pgdump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/pgdump/db.sql/51	 Name: second; Type: TABLE; Schema: public; Owner: postgres 	IDE
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/pgdump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/pgdump/db.sql/63	 Name: seqtable; Type: TABLE; Schema: public; Owner: postgres 	IDE
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/pgdump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/pgdump/db.sql/75	 Name: simple; Type: TABLE; Schema: public; Owner: postgres 	IDE
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/pgdump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/pgdump/db.sql/88	 Name: a_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres 	IDE
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/pgdump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/pgdump/db.sql/95	 Data for Name: second; Type: TABLE DATA; Schema: public; Owner: postgres 	IDE
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/pgdump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/pgdump/db.sql/110	 Data for Name: seqtable; Type: TABLE DATA; Schema: public; Owner: postgres 	IDE
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/pgdump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/pgdump/db.sql/125	 Data for Name: simple; Type: TABLE DATA; Schema: public; Owner: postgres 	IDE
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/pgdump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/pgdump/db.sql/162	 Name: second second_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres 	IDE
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/pgdump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/pgdump/db.sql/170	 Name: simple simple_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres 	IDE
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/pgdump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/pgdump/db.sql/178	 Name: simple_b_s_idx; Type: INDEX; Schema: public; Owner: postgres 	IDE
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/pgdump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/pgdump/db.sql/185	 Name: simple_s_idx; Type: INDEX; Schema: public; Owner: postgres 	IDE
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/pgdump/db.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/pgdump/db.sql/192	 PostgreSQL database dump complete 	IDE
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/pgdump/second.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/pgdump/second.sql/2	 PostgreSQL database dump 	IDE
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/pgdump/second.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/pgdump/second.sql/5	 Dumped from database version 9.6.9\nDumped by pg_dump version 9.6.9 	IDE
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/pgdump/second.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/pgdump/second.sql/23	 Name: second; Type: TABLE; Schema: public; Owner: postgres 	IDE
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/pgdump/second.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/pgdump/second.sql/35	 Data for Name: second; Type: TABLE DATA; Schema: public; Owner: postgres 	IDE
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/pgdump/second.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/pgdump/second.sql/50	 Name: second second_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres 	IDE
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/pgdump/second.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/pgdump/second.sql/58	 PostgreSQL database dump complete 	IDE
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/pgdump/simple.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/pgdump/simple.sql/2	 PostgreSQL database dump 	IDE
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/pgdump/simple.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/pgdump/simple.sql/5	 Dumped from database version 9.6.9\nDumped by pg_dump version 9.6.9 	IDE
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/pgdump/simple.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/pgdump/simple.sql/23	 Name: simple; Type: TABLE; Schema: public; Owner: postgres 	IDE
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/pgdump/simple.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/pgdump/simple.sql/36	 Data for Name: simple; Type: TABLE DATA; Schema: public; Owner: postgres 	IDE
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/pgdump/simple.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/pgdump/simple.sql/73	 Name: simple simple_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres 	IDE
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/pgdump/simple.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/pgdump/simple.sql/81	 Name: simple_b_s_idx; Type: INDEX; Schema: public; Owner: postgres 	IDE
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/pgdump/simple.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/pgdump/simple.sql/88	 Name: simple_s_idx; Type: INDEX; Schema: public; Owner: postgres 	IDE
EN	SQL	cockroachdb/cockroach	pkg/ccl/importccl/testdata/pgdump/simple.sql	cockroachdb/cockroach/pkg/ccl/importccl/testdata/pgdump/simple.sql/95	 PostgreSQL database dump complete 	IDE
EN	SQL	cockroachdb/cockroach	pkg/workload/tpcds/import.sql	cockroachdb/cockroach/pkg/workload/tpcds/import.sql/2	 The TPC-DS database can be restored from backup (only scale factors of 1 and \n10 - about 1GB and 10GB respectively - are available at the moment): \nRESTORE DATABASE tpcds FROM 'gs://cockroach-fixtures/workload/tpcds/scalefactor=1/backup';\nThe detailed instructions on how to generate the data from scratch can be \nfound on an internal Confluence page. 	Notice
EN	SQL	cockroachdb/cockroach	pkg/workload/tpch/import-sf1.sql	cockroachdb/cockroach/pkg/workload/tpch/import-sf1.sql/2	 This script imports TPCH data for scale factor 1 (SF-1, which is ~1GB) into \nCockroach DB. Data is imported from the CSV files generated by the TPCH dbgen \ntool and uploaded to Google storage. Foreign key constraints are added \nseparately because the IMPORT statement does not support their direct \ndeclaration in the import schema. 	Functional-Module
EN	SQL	cockroachdb/cockroach	pkg/workload/tpch/import-sf1.sql	cockroachdb/cockroach/pkg/workload/tpch/import-sf1.sql/8	 For faster import, the TPCH database can be restored from backup: \n  RESTORE DATABASE tpch FROM 'gs://cockroach-fixtures/workload/tpch/scalefactor=1/backup'; 	Notice
EN	SQL	cockroachdb/cockroach	pkg/workload/tpch/import-sf1.sql	cockroachdb/cockroach/pkg/workload/tpch/import-sf1.sql/12	 When re-generating all data (say after a schema change), a fresh backup can \nbe created via: \n  BACKUP DATABASE tpch TO 'gs://cockroach-fixtures/workload/tpch/scalefactor=1/backup'; 	Notice
EN	SQL	cockroachdb/cockroach	pkg/workload/tpch/import-sf1.sql	cockroachdb/cockroach/pkg/workload/tpch/import-sf1.sql/107	 TODO(andyk): This fails with `pq: column "l_partkey" cannot be used by multiple foreign key constraints`. \nThis limitation would appear to violate TPCH rules, as all foreign keys must be defined, or none at all.	ToDo
EN	SQL	cockroachdb/cockroach	pkg/workload/tpch/import-sf1.sql	cockroachdb/cockroach/pkg/workload/tpch/import-sf1.sql/109	 ALTER TABLE lineitem ADD CONSTRAINT lineitem_fkey_partsupp FOREIGN KEY (l_partkey, l_suppkey) references partsupp (ps_partkey, ps_suppkey); 	Code
EN	SQL	cockroachdb/cockroach	pkg/workload/tpch/import-sf10.sql	cockroachdb/cockroach/pkg/workload/tpch/import-sf10.sql/2	 This script imports TPCH data for scale factor 10 (SF-10, which is ~10GB)\ninto Cockroach DB. Data is imported from the CSV files generated by the TPCH\ndbgen tool and uploaded to Google storage. Foreign key constraints are added\nseparately because the IMPORT statement does not support their direct\ndeclaration in the import schema. 	Functional-Module
EN	SQL	cockroachdb/cockroach	pkg/workload/tpch/import-sf10.sql	cockroachdb/cockroach/pkg/workload/tpch/import-sf10.sql/8	 For faster import, the TPCH database can be restored from backup: \n  RESTORE DATABASE tpch FROM 'gs://cockroach-fixtures/workload/tpch/scalefactor=10/backup'; 	Notice
EN	SQL	cockroachdb/cockroach	pkg/workload/tpch/import-sf10.sql	cockroachdb/cockroach/pkg/workload/tpch/import-sf10.sql/12	 When re-generating all data (say after a schema change), a fresh backup can \n be created via:\n  BACKUP DATABASE tpch TO 'gs://cockroach-fixtures/workload/tpch/scalefactor=10/backup'; 	Notice
EN	SQL	cockroachdb/cockroach	pkg/workload/tpch/import-sf10.sql	cockroachdb/cockroach/pkg/workload/tpch/import-sf10.sql/107	 TODO(andyk): This fails with `pq: column "l_partkey" cannot be used by multiple foreign key constraints`. \nThis limitation would appear to violate TPCH rules, as all foreign keys must be defined, or none at all. 	ToDo
EN	SQL	cockroachdb/cockroach	pkg/workload/tpch/import-sf10.sql	cockroachdb/cockroach/pkg/workload/tpch/import-sf10.sql/109	 ALTER TABLE lineitem ADD CONSTRAINT lineitem_fkey_partsupp FOREIGN KEY (l_partkey, l_suppkey) references partsupp (ps_partkey, ps_suppkey);	Code
EN	SQL	ktaranov/sqlserver-kit	CLR/Regex/Fill_Factor/installRegexSample.sql	ktaranov/sqlserver-kit/CLR/Regex/Fill_Factor/installRegexSample.sql/63	Change this to the filename and path of your DLL	Notice
EN	SQL	ktaranov/sqlserver-kit	Errors/Identity_gap_sql_server_2012.sql	ktaranov/sqlserver-kit/Errors/Identity_gap_sql_server_2012.sql/48	 DBCC CHECKIDENT('t1', 'RESEED', 5);	Code
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/APC_plans_that_are_not_corrected.sql	ktaranov/sqlserver-kit/Extended_Events/APC_plans_that_are_not_corrected.sql/1	\nOriginal link: https://blogs.msdn.microsoft.com/sqlserverstorageengine/2017/07/18/monitoring-automatic-tuning-actions-using-xevents/\nAuthor: Jovan Popovic\n	General
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/APC_Reverted_plan_corrections.sql	ktaranov/sqlserver-kit/Extended_Events/APC_Reverted_plan_corrections.sql/1	\nOriginal link: https://blogs.msdn.microsoft.com/sqlserverstorageengine/2017/07/18/monitoring-automatic-tuning-actions-using-xevents/\nAuthor: Jovan Popovic\n	General
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/AuditFileSize.sql	ktaranov/sqlserver-kit/Extended_Events/AuditFileSize.sql/1	\nOriginal link: https://jasonbrimhall.info/2019/06/25/database-file-changes/\nSource link: https://github.com/ktaranov/sqlserver-kit/blob/master/Extended_Events/AuditFileSize.sql\nAuthor: Phil Factor\n\n	General
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/AuditFileSize.sql	ktaranov/sqlserver-kit/Extended_Events/AuditFileSize.sql/10	 Create the Event Session	Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/AutoTuneMonitor.sql	ktaranov/sqlserver-kit/Extended_Events/AutoTuneMonitor.sql/1	\nhttps://jasonbrimhall.info/2019/01/04/automatic-tuning-monitoring-and-diagnostics/\nAuthor: Jason Brimhall\n	General
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/BackupRestoreTrace.sql	ktaranov/sqlserver-kit/Extended_Events/BackupRestoreTrace.sql/1	\nOriginal link: https://blogs.msdn.microsoft.com/sql_server_team/sql-server-mysteries-the-case-of-the-not-100-restore/\nAuthor: Bob Ward\n	General
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/CheckpointTracking.sql	ktaranov/sqlserver-kit/Extended_Events/CheckpointTracking.sql/1	\nOriginal link: https://www.sqlserverscience.com/extended-events/checkpoint-tracking-via-extended-events/\nAuthor: Max Vernon\n	General
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/CheckpointTracking.sql	ktaranov/sqlserver-kit/Extended_Events/CheckpointTracking.sql/6	 only create this session if one doesn't already exist\n                   to prevent inadvertant loss of events.\n	Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/ConfigurationItemsChanged.sql	ktaranov/sqlserver-kit/Extended_Events/ConfigurationItemsChanged.sql/49	 To update the currently configured value for advanced options.	Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/ConfigurationItemsChanged.sql	ktaranov/sqlserver-kit/Extended_Events/ConfigurationItemsChanged.sql/56	if the session already exists, then delete it. We are assuming you've changed something	Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/ConfigurationItemsChanged.sql	ktaranov/sqlserver-kit/Extended_Events/ConfigurationItemsChanged.sql/63	 the name of the session	Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/ConfigurationItemsChanged.sql	ktaranov/sqlserver-kit/Extended_Events/ConfigurationItemsChanged.sql/65	just the one event	Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/ConfigurationItemsChanged.sql	ktaranov/sqlserver-kit/Extended_Events/ConfigurationItemsChanged.sql/74	 we will write it to a ring buffer target only	Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/ConvertingSQLTracetoExtendedEvents.sql	ktaranov/sqlserver-kit/Extended_Events/ConvertingSQLTracetoExtendedEvents.sql/1	\nAuthor: Jonathan Kehayias\nOriginal link: https://www.sqlskills.com/blogs/jonathan/converting-sql-trace-to-extended-events-in-sql-server-2012\n	General
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/ConvertingSQLTracetoExtendedEvents.sql	ktaranov/sqlserver-kit/Extended_Events/ConvertingSQLTracetoExtendedEvents.sql/11	 Audit Login Failed is not implemented in Extended Events it may be a Server Audit Event	Notice
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/ConvertingSQLTracetoExtendedEvents.sql	ktaranov/sqlserver-kit/Extended_Events/ConvertingSQLTracetoExtendedEvents.sql/12	 Audit Database Scope GDR Event is not implemented in Extended Events it may be a Server Audit Event	Notice
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/ConvertingSQLTracetoExtendedEvents.sql	ktaranov/sqlserver-kit/Extended_Events/ConvertingSQLTracetoExtendedEvents.sql/13	 Audit Schema Object GDR Event is not implemented in Extended Events it may be a Server Audit Event	Notice
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/ConvertingSQLTracetoExtendedEvents.sql	ktaranov/sqlserver-kit/Extended_Events/ConvertingSQLTracetoExtendedEvents.sql/14	 Audit Addlogin Event is not implemented in Extended Events it may be a Server Audit Event	Notice
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/ConvertingSQLTracetoExtendedEvents.sql	ktaranov/sqlserver-kit/Extended_Events/ConvertingSQLTracetoExtendedEvents.sql/15	 Audit Login GDR Event is not implemented in Extended Events it may be a Server Audit Event	Notice
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/ConvertingSQLTracetoExtendedEvents.sql	ktaranov/sqlserver-kit/Extended_Events/ConvertingSQLTracetoExtendedEvents.sql/16	 Audit Login Change Property Event is not implemented in Extended Events it may be a Server Audit Event	Notice
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/ConvertingSQLTracetoExtendedEvents.sql	ktaranov/sqlserver-kit/Extended_Events/ConvertingSQLTracetoExtendedEvents.sql/17	 Audit Add Login to Server Role Event is not implemented in Extended Events it may be a Server Audit Event	Notice
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/ConvertingSQLTracetoExtendedEvents.sql	ktaranov/sqlserver-kit/Extended_Events/ConvertingSQLTracetoExtendedEvents.sql/18	 Audit Add DB User Event is not implemented in Extended Events it may be a Server Audit Event	Notice
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/ConvertingSQLTracetoExtendedEvents.sql	ktaranov/sqlserver-kit/Extended_Events/ConvertingSQLTracetoExtendedEvents.sql/19	 Audit Add Member to DB Role Event is not implemented in Extended Events it may be a Server Audit Event	Notice
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/ConvertingSQLTracetoExtendedEvents.sql	ktaranov/sqlserver-kit/Extended_Events/ConvertingSQLTracetoExtendedEvents.sql/20	 Audit Add Role Event is not implemented in Extended Events it may be a Server Audit Event	Notice
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/ConvertingSQLTracetoExtendedEvents.sql	ktaranov/sqlserver-kit/Extended_Events/ConvertingSQLTracetoExtendedEvents.sql/21	 Audit Backup/Restore Event is not implemented in Extended Events it may be a Server Audit Event	Notice
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/ConvertingSQLTracetoExtendedEvents.sql	ktaranov/sqlserver-kit/Extended_Events/ConvertingSQLTracetoExtendedEvents.sql/22	 Audit DBCC Event is not implemented in Extended Events it may be a Server Audit Event	Notice
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/ConvertingSQLTracetoExtendedEvents.sql	ktaranov/sqlserver-kit/Extended_Events/ConvertingSQLTracetoExtendedEvents.sql/23	 Audit Change Audit Event is not implemented in Extended Events it may be a Server Audit Event	Notice
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/ConvertingSQLTracetoExtendedEvents.sql	ktaranov/sqlserver-kit/Extended_Events/ConvertingSQLTracetoExtendedEvents.sql/24	 Audit Change Database Owner is not implemented in Extended Events it may be a Server Audit Event	Notice
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/ConvertingSQLTracetoExtendedEvents.sql	ktaranov/sqlserver-kit/Extended_Events/ConvertingSQLTracetoExtendedEvents.sql/25	 Audit Schema Object Take Ownership Event is not implemented in Extended Events it may be a Server Audit Event	Notice
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/ConvertingSQLTracetoExtendedEvents.sql	ktaranov/sqlserver-kit/Extended_Events/ConvertingSQLTracetoExtendedEvents.sql/26	 Audit Server Alter Trace Event is not implemented in Extended Events it may be a Server Audit Event	Notice
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/ConvertingSQLTracetoExtendedEvents.sql	ktaranov/sqlserver-kit/Extended_Events/ConvertingSQLTracetoExtendedEvents.sql/43	 Log File Auto Grow is implemented as the sqlserver.database_file_size_change event in Extended Events	Notice
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/ConvertingSQLTracetoExtendedEvents.sql	ktaranov/sqlserver-kit/Extended_Events/ConvertingSQLTracetoExtendedEvents.sql/44	 Data File Auto Shrink is implemented as the sqlserver.database_file_size_change event in Extended Events	Notice
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/ConvertingSQLTracetoExtendedEvents.sql	ktaranov/sqlserver-kit/Extended_Events/ConvertingSQLTracetoExtendedEvents.sql/45	 Log File Auto Shrink is implemented as the sqlserver.database_file_size_change event in Extended Events	Notice
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/DarkQueries.sql	ktaranov/sqlserver-kit/Extended_Events/DarkQueries.sql/4	 Option (RECOMPILE) Requested	Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/DBRecoveryProgress.sql	ktaranov/sqlserver-kit/Extended_Events/DBRecoveryProgress.sql/1	\nOriginal link: https://www.sqlservercentral.com/blogs/database-recovery-monitoring-with-xe\nSource link: https://github.com/ktaranov/sqlserver-kit/blob/master/Extended_Events/DBRecoveryProgress.sql\nAuthor: Jason Brimhall\n	General
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/DBRecoveryProgress.sql	ktaranov/sqlserver-kit/Extended_Events/DBRecoveryProgress.sql/9	 Create the Event Session	Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/DBRecoveryProgress.sql	ktaranov/sqlserver-kit/Extended_Events/DBRecoveryProgress.sql/25	 yes this may be overkill on the actions - it is for discovery	Notice
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/Deadlocks.sql	ktaranov/sqlserver-kit/Extended_Events/Deadlocks.sql/1	\nOriginal link: http://blog.waynesheffield.com/wayne/archive/2017/04/weaning-yourself-off-sql-profiler/\nAuthor: Wayne Sheffield\n	General
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/Deadlocks.sql	ktaranov/sqlserver-kit/Extended_Events/Deadlocks.sql/18	 ApplicationName from SQLTrace	Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/Deadlocks.sql	ktaranov/sqlserver-kit/Extended_Events/Deadlocks.sql/19	 ClientProcessID from SQLTrace  Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/Deadlocks.sql	ktaranov/sqlserver-kit/Extended_Events/Deadlocks.sql/20	 NTUserName from SQLTrace   Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/Deadlocks.sql	ktaranov/sqlserver-kit/Extended_Events/Deadlocks.sql/21	 LoginName from SQLTrace    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/Deadlocks.sql	ktaranov/sqlserver-kit/Extended_Events/Deadlocks.sql/22	 SPID from SQLTrace     Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/Deadlocks.sql	ktaranov/sqlserver-kit/Extended_Events/Deadlocks.sql/29	 SPID from SQLTrace     Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/Deadlocks.sql	ktaranov/sqlserver-kit/Extended_Events/Deadlocks.sql/35	 LoginName from SQLTrace    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/Deadlocks.sql	ktaranov/sqlserver-kit/Extended_Events/Deadlocks.sql/36	 SPID from SQLTrace     Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/ImplicitConversionOnly.sql	ktaranov/sqlserver-kit/Extended_Events/ImplicitConversionOnly.sql/1	\nOriginal link: https://www.scarydba.com/2018/10/15/using-extended-events-to-capture-implicit-conversions/\nAuthor: Grant Fritchey\n   General
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/ImplicitConversionOnly.sql	ktaranov/sqlserver-kit/Extended_Events/ImplicitConversionOnly.sql/5	 If the Event Session exists DROP it    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/ImplicitConversionOnly.sql	ktaranov/sqlserver-kit/Extended_Events/ImplicitConversionOnly.sql/15	 WHERE (sqlserver.equal_i_sql_unicode_string(sqlserver.database_name, N'AdventureWorks2017'))   Code
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/InvestigateWaits.sql	ktaranov/sqlserver-kit/Extended_Events/InvestigateWaits.sql/1	\nOriginal link: http://www.sqlskills.com/blogs/paul/who-is-overriding-maxdop-1-on-the-instance/\nAuthor: Paul Randal\n     General
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/InvestigateWaits.sql	ktaranov/sqlserver-kit/Extended_Events/InvestigateWaits.sql/18	 parallel plans    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/InvestigateWaitsMaxDop.sql	ktaranov/sqlserver-kit/Extended_Events/InvestigateWaitsMaxDop.sql/25	 Stop trace if started  Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/InvestigateWaitsMaxDop.sql	ktaranov/sqlserver-kit/Extended_Events/InvestigateWaitsMaxDop.sql/29	 Delete trace if exists     Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/InvestigateWaitsMaxDop.sql	ktaranov/sqlserver-kit/Extended_Events/InvestigateWaitsMaxDop.sql/33	 Create trace   Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/InvestigateWaitsMaxDop.sql	ktaranov/sqlserver-kit/Extended_Events/InvestigateWaitsMaxDop.sql/41	 parallel plans     Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/LoginFailure.sql	ktaranov/sqlserver-kit/Extended_Events/LoginFailure.sql/1	\nhttps://blogs.msdn.microsoft.com/sql_pfe_blog/2017/05/04/login-failed-for-xxx-whos-keeps-trying-to-connect-to-my-server/\n    General
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/MonitorPageSplits.sql	ktaranov/sqlserver-kit/Extended_Events/MonitorPageSplits.sql/1	\nOriginal link: http://sqlblog.com/blogs/jonathan_kehayias/archive/2010/10/17/tracking-page-splits-in-sql-server-denali-ctp1.aspx\nAuthor: Jonathan Kehayias\n     General
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/ProcedureWaits.sql	ktaranov/sqlserver-kit/Extended_Events/ProcedureWaits.sql/1	\nOriginal link: https://www.scarydba.com/2018/02/05/wait-statistics-query/\nAuthor: Grant Fritchey\n   General
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/QueryExecutionDetails.sql	ktaranov/sqlserver-kit/Extended_Events/QueryExecutionDetails.sql/1	\nOriginal link: https://www.scarydba.com/2019/06/03/which-query-used-the-most-cpu-implementing-extended-events/\nSource link: https://github.com/ktaranov/sqlserver-kit/blob/master/Extended_Events/DBRecoveryProgress.sql\nAuthor: Grant Fritchey\n   General
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/Recompile_Histogram.sql	ktaranov/sqlserver-kit/Extended_Events/Recompile_Histogram.sql/24	 SP:Recompile;  Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/system_health.sql	ktaranov/sqlserver-kit/Extended_Events/system_health.sql/1	\nAuthor: \nOriginal link: https://blog.sqlauthority.com/2017/01/09/sql-server-get-historical-deadlock-information-system-health-extended-events/\nhttp://sqlworldwide.com/sql-server-system_health-session-retention\n     General
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/system_health.sql	ktaranov/sqlserver-kit/Extended_Events/system_health.sql/43	name of the session     Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/system_health.sql	ktaranov/sqlserver-kit/Extended_Events/system_health.sql/44	size of each file in MB     Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/system_health.sql	ktaranov/sqlserver-kit/Extended_Events/system_health.sql/45	how many files you want to keep     Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/System_Health_Addition.sql	ktaranov/sqlserver-kit/Extended_Events/System_Health_Addition.sql/1	\nOriginal link: https://karaszi.com/looking-for-strange\nAuthor: Tibor Karaszi's\n     General
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/System_Health_Addition.sql	ktaranov/sqlserver-kit/Extended_Events/System_Health_Addition.sql/6	Stop trace if started   Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/System_Health_Addition.sql	ktaranov/sqlserver-kit/Extended_Events/System_Health_Addition.sql/10	Delete trace if exists  Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/System_Health_Addition.sql	ktaranov/sqlserver-kit/Extended_Events/System_Health_Addition.sql/14	Create trace    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/system_health_azure.sql	ktaranov/sqlserver-kit/Extended_Events/system_health_azure.sql/1	\nOriginal link: https://www.scarydba.com/2019/03/04/system_health-extended-events-in-azure-sql-database/\nAuthor: Grant Fritchey\n     General
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/system_health_azure.sql	ktaranov/sqlserver-kit/Extended_Events/system_health_azure.sql/17	 Get callstack, SPID, and query for all high severity errors ( above sev 20 )   Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/system_health_azure.sql	ktaranov/sqlserver-kit/Extended_Events/system_health_azure.sql/19	 Get callstack, SPID, and query for OOM errors ( 17803 , 701 , 802 , 8645 , 8651 , 8657 , 8902 ), Hekaton checkpoint/merge errors (41354, 41355, 41367, 41384), Hekaton compilation related errors (41336, 41309, 41312, 41313) Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/system_health_azure.sql	ktaranov/sqlserver-kit/Extended_Events/system_health_azure.sql/35	    ADD EVENT sqlserver.xml_deadlock_report,    Code
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/system_health_azure.sql	ktaranov/sqlserver-kit/Extended_Events/system_health_azure.sql/40	 Waits for latches and important wait resources (not locks ) that have exceeded 15 seconds.     Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/system_health_azure.sql	ktaranov/sqlserver-kit/Extended_Events/system_health_azure.sql/55	 Waits for locks that have exceeded 30 secs.    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/system_health_azure.sql	ktaranov/sqlserver-kit/Extended_Events/system_health_azure.sql/56	 all lock waits     Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/system_health_azure.sql	ktaranov/sqlserver-kit/Extended_Events/system_health_azure.sql/62	 Login related preemptive waits that have exceeded 5 seconds.   Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/system_health_azure.sql	ktaranov/sqlserver-kit/Extended_Events/system_health_azure.sql/76	 Preemptive OS waits that have exceeded 45 seconds.     Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/system_health_azure.sql	ktaranov/sqlserver-kit/Extended_Events/system_health_azure.sql/101	 Store events in the ring buffer target     Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/TrackDBFileChange.sql	ktaranov/sqlserver-kit/Extended_Events/TrackDBFileChange.sql/47	if the path does not exist, a nasty error will be thrown    Notice
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/TrackDBFileChange.sql	ktaranov/sqlserver-kit/Extended_Events/TrackDBFileChange.sql/49	 Store events in the ring buffer target     Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/TrackPageSplits.sql	ktaranov/sqlserver-kit/Extended_Events/TrackPageSplits.sql/1	\nOriginal link: https://www.sqlskills.com/blogs/jonathan/tracking-problematic-pages-splits-in-sql-server-2012-extended-events-no-really-this-time/\nAuthor: Wayne Sheffield\n  General
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/TrackPageSplits.sql	ktaranov/sqlserver-kit/Extended_Events/TrackPageSplits.sql/5	 If the Event Session exists DROP it    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/TrackPageSplits.sql	ktaranov/sqlserver-kit/Extended_Events/TrackPageSplits.sql/11	 Create the Event Session to track LOP_DELETE_SPLIT transaction_log operations in the server    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/TrackPageSplits.sql	ktaranov/sqlserver-kit/Extended_Events/TrackPageSplits.sql/19	 Event Column   Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/TrackPageSplits.sql	ktaranov/sqlserver-kit/Extended_Events/TrackPageSplits.sql/23	 Start the Event Session    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/TrackPageSplits.sql	ktaranov/sqlserver-kit/Extended_Events/TrackPageSplits.sql/28	 Query the target data to identify the worst splitting database_id  Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/TrackPageSplits.sql	ktaranov/sqlserver-kit/Extended_Events/TrackPageSplits.sql/43	 Query Target Data to get the top splitting objects in the database:    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/TrackTFChange.sql	ktaranov/sqlserver-kit/Extended_Events/TrackTFChange.sql/1	\nOriginal link: http://jasonbrimhall.info/2018/12/06/capture-the-flag-the-trace-flag/\nAuthor: Jason Brimhall\n    General
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/TrackTFChange.sql	ktaranov/sqlserver-kit/Extended_Events/TrackTFChange.sql/5	 If the Event Session exists DROP it    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Extended_Events/TrackTFChange.sql	ktaranov/sqlserver-kit/Extended_Events/TrackTFChange.sql/14	 WHERE sqlserver.client_app_name <> 'Microsoft SQL Server Management Studio - Transact-SQL IntelliSense'    Code
EN	SQL	ktaranov/sqlserver-kit	Sample_Databases/PerformanceV3.sql	ktaranov/sqlserver-kit/Sample_Databases/PerformanceV3.sql/2	 Script that creates the sample database PerformanceV3 \nLast updated: 20141125 \n� Itzik Ben-Gan   Functional-Module
EN	SQL	ktaranov/sqlserver-kit	Sample_Databases/PerformanceV3.sql	ktaranov/sqlserver-kit/Sample_Databases/PerformanceV3.sql/9	 creation script for sample database and tables Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Sample_Databases/PerformanceV3.sql	ktaranov/sqlserver-kit/Sample_Databases/PerformanceV3.sql/17	 drop objects if exist  Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Sample_Databases/PerformanceV3.sql	ktaranov/sqlserver-kit/Sample_Databases/PerformanceV3.sql/34	 definition of GetNums function Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Sample_Databases/PerformanceV3.sql	ktaranov/sqlserver-kit/Sample_Databases/PerformanceV3.sql/52	 data distribution settings for orders  Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Sample_Databases/PerformanceV3.sql	ktaranov/sqlserver-kit/Sample_Databases/PerformanceV3.sql/61	 creating and populating the Customers table    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Sample_Databases/PerformanceV3.sql	ktaranov/sqlserver-kit/Sample_Databases/PerformanceV3.sql/77	 creating and populating the Employees table    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Sample_Databases/PerformanceV3.sql	ktaranov/sqlserver-kit/Sample_Databases/PerformanceV3.sql/94	 creating and populating the Shippers table Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Sample_Databases/PerformanceV3.sql	ktaranov/sqlserver-kit/Sample_Databases/PerformanceV3.sql/109	 creating and populating the Orders table   Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Sample_Databases/PerformanceV3.sql	ktaranov/sqlserver-kit/Sample_Databases/PerformanceV3.sql/130	 late arrival with earlier date Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Sample_Databases/PerformanceV3.sql	ktaranov/sqlserver-kit/Sample_Databases/PerformanceV3.sql/159	 data distribution settings for dw (2,500,000 rows) Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Adding_Trace_Flags_To_Startup_Parameters.sql	ktaranov/sqlserver-kit/Scripts/Adding_Trace_Flags_To_Startup_Parameters.sql/25	 Declare and initialize variables.  Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Adding_Trace_Flags_To_Startup_Parameters.sql	ktaranov/sqlserver-kit/Scripts/Adding_Trace_Flags_To_Startup_Parameters.sql/26	 To use with SQL 2005, cannot set the variables in the declare statement.   Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Adding_Trace_Flags_To_Startup_Parameters.sql	ktaranov/sqlserver-kit/Scripts/Adding_Trace_Flags_To_Startup_Parameters.sql/35	 only makes changes if set to zero! Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Adding_Trace_Flags_To_Startup_Parameters.sql	ktaranov/sqlserver-kit/Scripts/Adding_Trace_Flags_To_Startup_Parameters.sql/37	 Add the trace flags that you want changed here.    Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Adding_Trace_Flags_To_Startup_Parameters.sql	ktaranov/sqlserver-kit/Scripts/Adding_Trace_Flags_To_Startup_Parameters.sql/38	 If enable = 1, DBCC TRACEON will be run; if enable = 0 then DBCC TRACEOFF will be run. Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Adding_Trace_Flags_To_Startup_Parameters.sql	ktaranov/sqlserver-kit/Scripts/Adding_Trace_Flags_To_Startup_Parameters.sql/39	 If enable_on_startup = 1, then this TF will be added to start up on service restart;   Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Adding_Trace_Flags_To_Startup_Parameters.sql	ktaranov/sqlserver-kit/Scripts/Adding_Trace_Flags_To_Startup_Parameters.sql/40	 If enable_on_startup - 0, then this TF will be removed from starting up service restart    Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Adding_Trace_Flags_To_Startup_Parameters.sql	ktaranov/sqlserver-kit/Scripts/Adding_Trace_Flags_To_Startup_Parameters.sql/48	 To work with SQL 2005, cannot use a table value constructor. \nSo, use SELECT statements with UNION ALL for each TF to modify.     Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Adding_Trace_Flags_To_Startup_Parameters.sql	ktaranov/sqlserver-kit/Scripts/Adding_Trace_Flags_To_Startup_Parameters.sql/56	 Get all of the arguments / parameters when starting up the service.    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Adding_Trace_Flags_To_Startup_Parameters.sql	ktaranov/sqlserver-kit/Scripts/Adding_Trace_Flags_To_Startup_Parameters.sql/65	 Get the highest argument number that is currently set  Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Adding_Trace_Flags_To_Startup_Parameters.sql	ktaranov/sqlserver-kit/Scripts/Adding_Trace_Flags_To_Startup_Parameters.sql/70	 Disable specified trace flags  Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Adding_Trace_Flags_To_Startup_Parameters.sql	ktaranov/sqlserver-kit/Scripts/Adding_Trace_Flags_To_Startup_Parameters.sql/82	 Enable specified trace flags   Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Adding_Trace_Flags_To_Startup_Parameters.sql	ktaranov/sqlserver-kit/Scripts/Adding_Trace_Flags_To_Startup_Parameters.sql/97	 Current arguments, with new TFs added at the end. Get a row number to sort by. Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Adding_Trace_Flags_To_Startup_Parameters.sql	ktaranov/sqlserver-kit/Scripts/Adding_Trace_Flags_To_Startup_Parameters.sql/104	 Use the row number to calc the SQLArg# for new TFs. \nUse the original Value (SQLArg#) and Data for all rows if possible, \nOtherwise use the calculated SQLArg# and the calculated TF2 column. \n(existing startup TFs not in @TraceFlags are left alone).  Functional-Method
EN	SQL	ktaranov/sqlserver-kit	Scripts/Adding_Trace_Flags_To_Startup_Parameters.sql	ktaranov/sqlserver-kit/Scripts/Adding_Trace_Flags_To_Startup_Parameters.sql/111	 in case any TFs are removed, calculate new row numbers in order \nto renumber the SQLArg values Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Adding_Trace_Flags_To_Startup_Parameters.sql	ktaranov/sqlserver-kit/Scripts/Adding_Trace_Flags_To_Startup_Parameters.sql/115	 Again, for SQL 2005, use SELECT statement instead of VALUES.   Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Adding_Trace_Flags_To_Startup_Parameters.sql	ktaranov/sqlserver-kit/Scripts/Adding_Trace_Flags_To_Startup_Parameters.sql/118	 ISNULL handles non-TF parameters   Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Adding_Trace_Flags_To_Startup_Parameters.sql	ktaranov/sqlserver-kit/Scripts/Adding_Trace_Flags_To_Startup_Parameters.sql/120	 The first three parameters are the location of the errorlog directory, \nand the master database file locations. Ignore these. \nThis returns the remaining parameters that should be set. \nAlso return the highest number of parameters, so can determine if any need to be deleted.    Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Adding_Trace_Flags_To_Startup_Parameters.sql	ktaranov/sqlserver-kit/Scripts/Adding_Trace_Flags_To_Startup_Parameters.sql/145	 In case deleting more TFs than added, there may be extra SQLArg values left behind. \nNeed to delete the extras now.   Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/AutoGuessingForeignKeyConstraints.sql	ktaranov/sqlserver-kit/Scripts/AutoGuessingForeignKeyConstraints.sql/1	\nAuthor: Daniel Hutmacher\nOriginal link: https://sqlsunday.com/2017/04/10/guessing-fk-constraints\n   General
EN	SQL	ktaranov/sqlserver-kit	Scripts/AutoGuessingForeignKeyConstraints.sql	ktaranov/sqlserver-kit/Scripts/AutoGuessingForeignKeyConstraints.sql/38	- This is where the column naming logic \n- can be customized:  Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Auto_Generate_Database_Documentation.sql	ktaranov/sqlserver-kit/Scripts/Auto_Generate_Database_Documentation.sql/1	\n.EXAMPLE\n    Connect SSMS to the database in which you wish to create extended properties and hit F5.\n\n.DESCRIPTION:\n    This script will not create the extended properties, but auto generate the commands to do so.\n    The actual value (@value parameter) of the extended property still has to be manually input.\n    This script will automatically add the user and date to the extended property value.\n\n.NOTE\n    Version: 1.1\n    Modified: 2018-03-30 23:40:00 UTC+3 Konstantin Taranov\n    Link: https://github.com/ktaranov/sqlserver-kit/blob/master/Scripts/Auto_Generate_Database_Documentation.sql\n    Created: 2015-11-25\n    Author: (C) Andy Jones mailto:andrew@aejsoftware.co.uk\n    Functional-Module
EN	SQL	ktaranov/sqlserver-kit	Scripts/Auto_Generate_Database_Documentation.sql	ktaranov/sqlserver-kit/Scripts/Auto_Generate_Database_Documentation.sql/26	set up the data for each object type specifying the correct value for each parameter.   Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Auto_Generate_Database_Documentation.sql	ktaranov/sqlserver-kit/Scripts/Auto_Generate_Database_Documentation.sql/102	union all objects on which to create extended properties. Objects, columns and indexes. Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Auto_Generate_Database_Documentation.sql	ktaranov/sqlserver-kit/Scripts/Auto_Generate_Database_Documentation.sql/123	only document table columns, not views/functions. Remove predicate if required. Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Auto_Generate_Database_Documentation.sql	ktaranov/sqlserver-kit/Scripts/Auto_Generate_Database_Documentation.sql/134	the constraint is already documented, don't document the index too. Remove predicate if required.   Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Auto_Generate_Database_Documentation.sql	ktaranov/sqlserver-kit/Scripts/Auto_Generate_Database_Documentation.sql/135	the constraint is already documented, don't document the index too. Remove predicate if required.   Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Auto_Generate_Database_Documentation.sql	ktaranov/sqlserver-kit/Scripts/Auto_Generate_Database_Documentation.sql/136	the table is already documented, don't document the heap index row too. Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Auto_Generate_Database_Documentation.sql	ktaranov/sqlserver-kit/Scripts/Auto_Generate_Database_Documentation.sql/138	Join objects on which to create extended properties to the parameters, performing string replacement where necessary.   Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Auto_Generate_Database_Documentation.sql	ktaranov/sqlserver-kit/Scripts/Auto_Generate_Database_Documentation.sql/158	pivot the result set so we have one correctly formatted extended property create statement per object.  Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/2	 Azure SQL Database Diagnostic Information Queries\nGlenn Berry \nLast Modified: December 4, 2019\nhttps://www.sqlskills.com/blogs/glenn/\nhttp://sqlserverperformance.wordpress.com/\nTwitter: GlennAlanBerry\nPlease listen to my Pluralsight courses\nhttps://www.pluralsight.com/author/glenn-berry\nIf you want to find all of our SQLskills SQL101 blog posts, check out https://www.sqlskills.com/help/sql101/   General
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/17	 Copyright (C) 2019 Glenn Berry, SQLskills.com\nAll rights reserved. \nFor more scripts and sample code, check out \n   https://www.sqlskills.com/blogs/glenn \nYou may alter this code for your own *non-commercial* purposes. You may \nrepublish altered code as long as you include this copyright and give due credit. \nTHIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF \nANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED \nTO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A \nPARTICULAR PURPOSE.   General
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/34	 Make sure you are connected a user database, rather than the master system database    Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/37	 Server level queries   Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/39	 SQL and OS Version information for current instance  (Query 1) (Version Info)  Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/43	 Azure SQL Database does not expose as much information as on-premises SQL Server does  Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/47	 Get logical instance-level configuration values for instance  (Query 2) (Configuration Values)     Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/53	 All of these settings are read-only in Azure SQL Database, so they are informational only  Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/57	 SQL Server NUMA Node information  (Query 3) (SQL Server NUMA Info)     Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/64	 Gives you some useful information about the composition and relative load on your NUMA nodes   Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/65	 You want to see an equal number of schedulers on each NUMA node    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/69	 Calculates average stalls per read, per write, and per total input/output for each database file  (Query 4) (IO Stalls by File)    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/80	 Helps determine which database files on the entire instance have the most I/O bottlenecks\n This can help you decide whether certain LUNs are overloaded and whether you might\n want to move some files to a different location or perhaps improve your I/O performance n These latency numbers include all file activity against each SQL Server \n database file since SQL Server was last started  Functional-Method
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/88	 Get I/O utilization by database (Query 5) (IO Usage By Database)   Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/102	 Helps determine which database is using the most I/O resources on the instance     Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/105	 Get total buffer usage by database for current instance  (Query 6) (Total Buffer Usage by Database)    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/106	 This make take some time to run on a busy instance Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/121	 Tells you how much memory (in the buffer pool)\nis being used by each database on the instance     Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/126	 Get a count of SQL connections by IP address (Query 7) (Connection Counts by IP Address)   Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/136	 This helps you figure where your database load is coming from \n and verifies connectivity from other machines     Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/139	 Solving Connectivity errors to SQL Server \n https://bit.ly/2EgzoD0    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/144	 Get Average Task Counts (run multiple times)  (Query 8) (Avg Task Counts)  Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/153	 Sustained values above 10 suggest further investigation in that area (depending on your Service Tier)  Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/154	 Avg Task Counts will be higher with lower service tiers    Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/155	 High Avg Task Counts are often caused by blocking/deadlocking or other resource contention     Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/157	 Sustained values above 1 suggest further investigation in that area    Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/158	 High Avg Runnable Task Counts are a good sign of CPU pressure  Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/159	 High Avg Pending DiskIO Counts are a sign of disk pressure     Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/163	 Detect blocking (run multiple times)  (Query 9) (Detect Blocking)  Notice					
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/165	 lock requested Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/166	 spid of waiter Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/167	 get sql for waiter Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/176	 statement blocked  Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/177	 spid of blocker    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/178	 get sql for blocker    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/186	 Helps troubleshoot blocking and deadlocking issues Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/187	 The results will change from second to second on a busy system Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/188	 You should run this query multiple times when you see signs of blocking    Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/192	 Page Life Expectancy (PLE) value for each NUMA node in current instance  (Query 10) (PLE by NUMA Node) Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/196	 Handles named instances    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/200	 PLE is a good measurement of internal memory pressure  Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/201	 Higher PLE is better. Watch the trend over time, not the absolute value    Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/202	 This will only return one row for non-NUMA systems     Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/204	 Page Life Expectancy isn�t what you think� \nhttps://bit.ly/2EgynLa    Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/208	 Memory Grants Pending value for current instance  (Query 11) (Memory Grants Pending)   Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/211	 Handles named instances    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/215	 Run multiple times, and run periodically if you suspect you are under memory pressure  Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/216	 Memory Grants Pending above zero for a sustained period is a very strong indicator of internal memory pressure     Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/219	 Memory Clerk Usage for instance  (Query 12) (Memory Clerk Usage)   Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/220	 Look for high value for CACHESTORE_SQLCP (Ad-hoc query plans)  Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/228	 MEMORYCLERK_SQLBUFFERPOOL was new for SQL Server 2012. It should be your highest consumer of memory    Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/230	 CACHESTORE_SQLCP  SQL Plans    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/231	 These are cached SQL statements or batches that aren't in stored procedures, functions and triggers    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/232	 Watch out for high values for CACHESTORE_SQLCP     Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/233	 Enabling 'optimize for ad hoc workloads' at the instance level can help reduce this    Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/236	 CACHESTORE_OBJCP  Object Plans Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/237	 These are compiled plans for stored procedures, functions and triggers Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/241	 Find single-use, ad-hoc and prepared queries that are bloating the plan cache  (Query 13) (Ad hoc Queries)     Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/253	 Gives you the text, type and size of single-use ad-hoc and prepared queries that waste space in the plan cache     Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/254	 Enabling forced parameterization for the database can help, but test first!    Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/256	 Plan cache, adhoc workloads and clearing the single-use plan cache bloat \n https://bit.ly/2EfYOkl Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/267	 Azure SQL Database size  (Query 14) (Azure SQL DB Size)    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/274	 This gives you the actual space usage within the data file only, to match what the Azure portal shows for the database size    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/276	 Determining Database Size in Azure SQL Database V12 https://bit.ly/2JjrqNh Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/281	 Individual File Sizes and space available for current database  (Query 15) (File Sizes and Space)  Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/294	 Look at how large and how full the files are and where they are located    Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/296	 is_autogrow_all_files was new for SQL Server 2016. Equivalent to TF 1117 for user databases    Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/298	 SQL Server 2016: Changes in default behavior for autogrow and allocations for tempdb and user databases http://bit.ly/2evRZSR  Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/303	 Log space usage for current database  (Query 16) (Log Space Usage)     Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/316	 Look at log file size and usage, along with the log reuse wait description for the current database    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/319	 Get VLF Count for current database (Query 17) (VLF Counts)     Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/329	 High VLF counts can affect write performance to the log file \n and they can make full database restores and crash recovery take much longer   Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/331	 Try to keep your VLF counts under 200 in most cases (depending on log file size)   Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/333	 Important change to VLF creation algorithm in SQL Server 2014 \n https://bit.ly/2Hsjbg4    Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/338	 Status of last VLF for current database  (Query 18) (Last VLF Status)  Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/345	 Determine whether you will be able to shrink the transaction log file  Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/347	 vlf_status Values \n 0 is inactive \n 1 is initialized but unused \n 2 is active   Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Azure SQL Database Diagnostic Information Queries.sql	ktaranov/sqlserver-kit/Scripts/Azure SQL Database Diagnostic Information Queries.sql/353	 Important database properties for current database   (Query 19) (Database Properties)  Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Backup_Restore_What’s_My_Status.sql	ktaranov/sqlserver-kit/Scripts/Backup_Restore_What’s_My_Status.sql/1	\nAuthor: Chris Yates\nOriginal link: http://www.sqlservercentral.com/blogs/the-sql-professor/2017/01/26/backuprestorewhats-my-status/\n    General
EN	SQL	ktaranov/sqlserver-kit	Scripts/Backup_Restore_What’s_My_Status.sql	ktaranov/sqlserver-kit/Scripts/Backup_Restore_What’s_My_Status.sql/6	By checking only for the restore and backup command lines you will be able to quickly identify your session id \n and get an  approximate ETA and percentage complete. you can tinker of course with the estimations \n if you’d like or pull back more fields. This is just a simple technique in utilizing a helpful DMV to provide info quickly. Functional-Method
EN	SQL	ktaranov/sqlserver-kit	Scripts/Blocked_Session.sql	ktaranov/sqlserver-kit/Scripts/Blocked_Session.sql/1	\nAuthor: Kenneth Fisher\nOriginal link: https://sqlstudies.com/2017/01/18/lead-blocker/\n  General
EN	SQL	ktaranov/sqlserver-kit	Scripts/Blocked_Session.sql	ktaranov/sqlserver-kit/Scripts/Blocked_Session.sql/6	 Collect lead blockers  Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Blocked_Session.sql	ktaranov/sqlserver-kit/Scripts/Blocked_Session.sql/7	     Pull all blocking IDs & check which ones are not being blocked themselves  Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Blocked_Session.sql	ktaranov/sqlserver-kit/Scripts/Blocked_Session.sql/16	 Recurse through list of blocked sessions   Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Blocked_Session.sql	ktaranov/sqlserver-kit/Scripts/Blocked_Session.sql/23	 Add up all sessions blocked for the lead blocker   Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Blocked_Session.sql	ktaranov/sqlserver-kit/Scripts/Blocked_Session.sql/47	 We only care if the session has been blocked for longer than 30 seconds.   Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Blocked_Session.sql	ktaranov/sqlserver-kit/Scripts/Blocked_Session.sql/48	 This can obviously be modified or commented out.   Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Bufer_Cache_Info.sql	ktaranov/sqlserver-kit/Scripts/Bufer_Cache_Info.sql/1	\nSource: https://www.sqlshack.com/insight-into-the-sql-server-buffer-cache/\nAuthor: Ed Pollack\n  General
EN	SQL	ktaranov/sqlserver-kit	Scripts/Bufer_Cache_Info.sql	ktaranov/sqlserver-kit/Scripts/Bufer_Cache_Info.sql/182	 Page Life Expectancy   Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Bufer_Cache_Info.sql	ktaranov/sqlserver-kit/Scripts/Bufer_Cache_Info.sql/189	 If your server has a NUMA (non-uniform memory access) architecture Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/BufferPoolExtension.sql	ktaranov/sqlserver-kit/Scripts/BufferPoolExtension.sql/1	\nAuthor:Ryan Adams\nOriginal link: http://www.ryanjadams.com/2017/05/implementing-buffer-pool-extension\n  General
EN	SQL	ktaranov/sqlserver-kit	Scripts/BufferPoolExtension.sql	ktaranov/sqlserver-kit/Scripts/BufferPoolExtension.sql/6	Review current BPE configuration    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/BufferPoolExtension.sql	ktaranov/sqlserver-kit/Scripts/BufferPoolExtension.sql/11	Reduce SQL Server Max memory to restrict the BP and force the use of BPE    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/BufferPoolExtension.sql	ktaranov/sqlserver-kit/Scripts/BufferPoolExtension.sql/20	********** WE HAVE TO RESTART SQL SERVER FOR BPE TO SEE THE RAM CHANGE **************   Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/BufferPoolExtension.sql	ktaranov/sqlserver-kit/Scripts/BufferPoolExtension.sql/22	Enable BPE  Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/BufferPoolExtension.sql	ktaranov/sqlserver-kit/Scripts/BufferPoolExtension.sql/23	Go look at the file size on disk right after you run this   Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/BufferPoolExtension.sql	ktaranov/sqlserver-kit/Scripts/BufferPoolExtension.sql/27	Now that it is enabled we'll inspect the configuration again    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/BufferPoolExtension.sql	ktaranov/sqlserver-kit/Scripts/BufferPoolExtension.sql/32	Try to read enough data to fill BP and start using BPE  Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/BufferPoolExtension.sql	ktaranov/sqlserver-kit/Scripts/BufferPoolExtension.sql/36	If the above didn't do the trick then query this table as well  Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/BufferPoolExtension.sql	ktaranov/sqlserver-kit/Scripts/BufferPoolExtension.sql/37	SELECT * FROM dbo.FactResellerSalesXL_CCI;  Code
EN	SQL	ktaranov/sqlserver-kit	Scripts/BufferPoolExtension.sql	ktaranov/sqlserver-kit/Scripts/BufferPoolExtension.sql/39	Let's see what went to BPE.  If there are no results then go query more data.   Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/BufferPoolExtension.sql	ktaranov/sqlserver-kit/Scripts/BufferPoolExtension.sql/49	Turn BPE off. Go look in c:\temp to see what happens to the physical data file  Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Checking_Your_Backup_Paths_Exist_and_Automatically_Create_it.sql	ktaranov/sqlserver-kit/Scripts/Checking_Your_Backup_Paths_Exist_and_Automatically_Create_it.sql/1	\nAuthor: SQL Undercover\nSource link: https://sqlundercover.com/2017/09/13/undercover-toolbox-checking-your-backup-paths-exist-and-automatically-creating-them-if-they-dont/\n General
EN	SQL	ktaranov/sqlserver-kit	Scripts/Checking_Your_Backup_Paths_Exist_and_Automatically_Create_it.sql	ktaranov/sqlserver-kit/Scripts/Checking_Your_Backup_Paths_Exist_and_Automatically_Create_it.sql/6	variable to hold directory to check Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Checking_Your_Backup_Paths_Exist_and_Automatically_Create_it.sql	ktaranov/sqlserver-kit/Scripts/Checking_Your_Backup_Paths_Exist_and_Automatically_Create_it.sql/17	check if directory exists   Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Checking_Your_Backup_Paths_Exist_and_Automatically_Create_it.sql	ktaranov/sqlserver-kit/Scripts/Checking_Your_Backup_Paths_Exist_and_Automatically_Create_it.sql/24	if directory doesn't exist, attempt to create it    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Checking_Your_Backup_Paths_Exist_and_Automatically_Create_it.sql	ktaranov/sqlserver-kit/Scripts/Checking_Your_Backup_Paths_Exist_and_Automatically_Create_it.sql/28	perform another existance check to make sure that the directory was actually created    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Checking_Your_Backup_Paths_Exist_and_Automatically_Create_it.sql	ktaranov/sqlserver-kit/Scripts/Checking_Your_Backup_Paths_Exist_and_Automatically_Create_it.sql/37	if new directory doesn't exist then there must have been a problem creating it  Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Check_Reserved_Words_For_Object_Names.sql	ktaranov/sqlserver-kit/Scripts/Check_Reserved_Words_For_Object_Names.sql/1	\nAuthor:\nOriginal link: https://www.red-gate.com/simple-talk/blogs/sql-naming-conventions/\n  General
EN	SQL	ktaranov/sqlserver-kit	Scripts/Code_Reuse_With_Dynamic_SQL_and_Temp_Procedures_Example.sql	ktaranov/sqlserver-kit/Scripts/Code_Reuse_With_Dynamic_SQL_and_Temp_Procedures_Example.sql/1	\n<documentation>\n  <author>Konstantin Taranov</author>\n  <summary>List All Unicode Code Points.</summary>\n  <returns>PRINT variables values getted from temporary stored procedures.</returns>\n  <created>2019-04-18</created>\n  <modified>2019-04-18</modified>\n  <version>1.0</version>\n  <sourceLink>https://github.com/ktaranov/sqlserver-kit/blob/master/Scripts/Code_Reuse_With_Dynamic_SQL_and_Temp_Procedures_Example.sql</sourceLink>\n</documentation>\n  IDE
EN	SQL	ktaranov/sqlserver-kit	Scripts/Code_Reuse_With_Dynamic_SQL_and_Temp_Procedures_Example.sql	ktaranov/sqlserver-kit/Scripts/Code_Reuse_With_Dynamic_SQL_and_Temp_Procedures_Example.sql/14	 CREATE temporary procedures for reusing TSQL code  Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Compare_2_tables_by_column_names.sql	ktaranov/sqlserver-kit/Scripts/Compare_2_tables_by_column_names.sql/1	\nAuthor: Shane O'Neill\nSource link: https://nocolumnname.wordpress.com/2017/04/20/stop-hammer-pivot/\n    General
EN	SQL	ktaranov/sqlserver-kit	Scripts/Compress_Tables_And_Indexes.sql	ktaranov/sqlserver-kit/Scripts/Compress_Tables_And_Indexes.sql/1	\n<documentation>\n  <summary>Compress tables and indexes</summary>\n  <returns>Temp table #estimated_results and print or exec rebuild index commands</returns>\n  <author>Max Vernon</author>\n  <created>2019-08-08</created>\n  <modified>2019-09-12 by Konstantin Taranov</modified>\n  <version>1.1</version>\n  <sourceLink>https://github.com/ktaranov/sqlserver-kit/blob/master/Scripts/Compress_Tables.sql</sourceLink>\n  <originalLink>https://www.sqlserverscience.com/performance/compress-big-tables/</originalLink>\n</documentation>\n IDE
EN	SQL	ktaranov/sqlserver-kit	Scripts/Compress_Tables_And_Indexes.sql	ktaranov/sqlserver-kit/Scripts/Compress_Tables_And_Indexes.sql/15	\n    Compresses tables and indexes that are consuming more than the specified amount of space.\n\n    By:     Max Vernon, 2019-08-08\n\n    Set the following variables before running the script!\n        - @DebugOnly  - 1 will cause the script to print out the generated commands, 0 will also execute those commands\n        - @OnlineOnly - 1 causes the script to use ONLINE=ON when performing the compress operation\n        - @CompressionType - can be "PAGE" or "ROW"\n        - @MinObjectSizeGB - the minimum current size of a table/index before it will be considered for compression\n        - @MinCompressionRatio - the minimum estimated compression ratio before a table/index will be compressed,\n                                 a lower number indicates a higher level of compression:\n                                    0.25 - the data must compress to 1/4 its uncompressed size\n                                    0.5  - the data must compress to half its uncompressed size\n                                    0.1  - the data must compress to 1/10th its uncompressed size\n                                    1.0  - no compression\n    Notes:\n        - Only Heaps, Clustered Indexes, and Non-Clustered Indexes are affected by this script.\n  Functional-Module
EN	SQL	ktaranov/sqlserver-kit	Scripts/Compress_Tables_And_Indexes.sql	ktaranov/sqlserver-kit/Scripts/Compress_Tables_And_Indexes.sql/38	set to zero to actually compress tables Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Compress_Tables_And_Indexes.sql	ktaranov/sqlserver-kit/Scripts/Compress_Tables_And_Indexes.sql/41	can be PAGE or ROW  Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Compress_Tables_And_Indexes.sql	ktaranov/sqlserver-kit/Scripts/Compress_Tables_And_Indexes.sql/52	set our MaxDOP to half of the configured value, or 1 if the sysadmin \n hasn't explicity configured the value   Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Compress_Tables_And_Indexes.sql	ktaranov/sqlserver-kit/Scripts/Compress_Tables_And_Indexes.sql/86	heap    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Compress_Tables_And_Indexes.sql	ktaranov/sqlserver-kit/Scripts/Compress_Tables_And_Indexes.sql/87	clustered index Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Compress_Tables_And_Indexes.sql	ktaranov/sqlserver-kit/Scripts/Compress_Tables_And_Indexes.sql/88	non-clustered index Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Compress_Tables_And_Indexes.sql	ktaranov/sqlserver-kit/Scripts/Compress_Tables_And_Indexes.sql/104	none of these column types can be compressed online Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Compress_Tables_And_Indexes.sql	ktaranov/sqlserver-kit/Scripts/Compress_Tables_And_Indexes.sql/109	no filestream table can be compressed online    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Compress_Tables_And_Indexes.sql	ktaranov/sqlserver-kit/Scripts/Compress_Tables_And_Indexes.sql/114	tables with sparse columns cannot be compressed. \n https://docs.microsoft.com/en-us/sql/relational-databases/data-compression/data-compression?view=sql-server-2017#how-compression-affects-other-sql-server-components    Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Compress_Tables_And_Indexes.sql	ktaranov/sqlserver-kit/Scripts/Compress_Tables_And_Indexes.sql/135	RAISERROR (@msg, 0, 1) WITH NOWAIT; Code
EN	SQL	ktaranov/sqlserver-kit	Scripts/Compress_Tables_And_Indexes.sql	ktaranov/sqlserver-kit/Scripts/Compress_Tables_And_Indexes.sql/182	sizes are reported in KB    Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Configure_SQL_Agent_Alerts.sql	ktaranov/sqlserver-kit/Scripts/Configure_SQL_Agent_Alerts.sql/1	 Add important SQL Agent Alerts to your instance    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Configure_SQL_Agent_Alerts.sql	ktaranov/sqlserver-kit/Scripts/Configure_SQL_Agent_Alerts.sql/3	 This will work with SQL Server 2008 and newer  Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Configure_SQL_Agent_Alerts.sql	ktaranov/sqlserver-kit/Scripts/Configure_SQL_Agent_Alerts.sql/4	 Glenn Berry \n SQLskills.com \n Last Modified: August 11, 2014 \n http://sqlserverperformance.wordpress.com/ \n http://sqlskills.com/blogs/glenn/ \n Twitter: GlennAlanBerry   General
EN	SQL	ktaranov/sqlserver-kit	Scripts/Configure_SQL_Agent_Alerts.sql	ktaranov/sqlserver-kit/Scripts/Configure_SQL_Agent_Alerts.sql/11	 Listen to my Pluralsight courses \n http://www.pluralsight.com/author/glenn-berry  Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Configure_SQL_Agent_Alerts.sql	ktaranov/sqlserver-kit/Scripts/Configure_SQL_Agent_Alerts.sql/14	 Change the @OperatorName as needed Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Configure_SQL_Agent_Alerts.sql	ktaranov/sqlserver-kit/Scripts/Configure_SQL_Agent_Alerts.sql/23	 Change @OperatorName as needed Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Configure_SQL_Agent_Alerts.sql	ktaranov/sqlserver-kit/Scripts/Configure_SQL_Agent_Alerts.sql/26	 Change @CategoryName as needed Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Configure_SQL_Agent_Alerts.sql	ktaranov/sqlserver-kit/Scripts/Configure_SQL_Agent_Alerts.sql/29	 Make sure you have an Agent Operator defined that matches the name you supplied    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Configure_SQL_Agent_Alerts.sql	ktaranov/sqlserver-kit/Scripts/Configure_SQL_Agent_Alerts.sql/36	 Add Alert Category if it does not exist    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Configure_SQL_Agent_Alerts.sql	ktaranov/sqlserver-kit/Scripts/Configure_SQL_Agent_Alerts.sql/39	 ALERT  Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Configure_SQL_Agent_Alerts.sql	ktaranov/sqlserver-kit/Scripts/Configure_SQL_Agent_Alerts.sql/46	 Get the server name    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Configure_SQL_Agent_Alerts.sql	ktaranov/sqlserver-kit/Scripts/Configure_SQL_Agent_Alerts.sql/50	 Alert Names start with the name of the server  Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Configure_SQL_Agent_Alerts.sql	ktaranov/sqlserver-kit/Scripts/Configure_SQL_Agent_Alerts.sql/67	 Sev 19 Error: Fatal Error in Resource  Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Configure_SQL_Agent_Alerts.sql	ktaranov/sqlserver-kit/Scripts/Configure_SQL_Agent_Alerts.sql/75	 Add a notification if it does not exist    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Configure_SQL_Agent_Alerts.sql	ktaranov/sqlserver-kit/Scripts/Configure_SQL_Agent_Alerts.sql/86	 Sev 20 Error: Fatal Error in Current Process   Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Configure_SQL_Agent_Alerts.sql	ktaranov/sqlserver-kit/Scripts/Configure_SQL_Agent_Alerts.sql/105	 Sev 21 Error: Fatal Error in Database Process  Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Configure_SQL_Agent_Alerts.sql	ktaranov/sqlserver-kit/Scripts/Configure_SQL_Agent_Alerts.sql/124	 Sev 22 Error: Fatal Error Table Integrity Suspect  Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Configure_SQL_Agent_Alerts.sql	ktaranov/sqlserver-kit/Scripts/Configure_SQL_Agent_Alerts.sql/143	 Sev 23 Error: Fatal Error Database Integrity Suspect   Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Configure_SQL_Agent_Alerts.sql	ktaranov/sqlserver-kit/Scripts/Configure_SQL_Agent_Alerts.sql/162	 Sev 24 Error: Fatal Hardware Error Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Configure_SQL_Agent_Alerts.sql	ktaranov/sqlserver-kit/Scripts/Configure_SQL_Agent_Alerts.sql/181	 Sev 25 Error: Fatal Error  Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Configure_SQL_Agent_Alerts.sql	ktaranov/sqlserver-kit/Scripts/Configure_SQL_Agent_Alerts.sql/199	 Error 823 Alert added on 8/11/2014 Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Configure_SQL_Agent_Alerts.sql	ktaranov/sqlserver-kit/Scripts/Configure_SQL_Agent_Alerts.sql/201	 Error 823: Operating System Error \n How to troubleshoot a Msg 823 error in SQL Server \n http://support.microsoft.com/kb/2015755   Functional-Inline 
EN	SQL	ktaranov/sqlserver-kit	Scripts/Configure_SQL_Agent_Alerts.sql	ktaranov/sqlserver-kit/Scripts/Configure_SQL_Agent_Alerts.sql/222	 Error 824 Alert added on 8/11/2014 Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Configure_SQL_Agent_Alerts.sql	ktaranov/sqlserver-kit/Scripts/Configure_SQL_Agent_Alerts.sql/224	 Error 824: Logical consistency-based I/O error \n How to troubleshoot Msg 824 in SQL Server \n http://support.microsoft.com/kb/2015756 Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Configure_SQL_Agent_Alerts.sql	ktaranov/sqlserver-kit/Scripts/Configure_SQL_Agent_Alerts.sql/246	 Error 825: Read-Retry Required \n How to troubleshoot Msg 825 (read retry) in SQL Server\n http://support.microsoft.com/kb/2015757 Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Configure_SQL_Agent_Alerts.sql	ktaranov/sqlserver-kit/Scripts/Configure_SQL_Agent_Alerts.sql/267	 Error 832 Alert added on 10/30/2013    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Configure_SQL_Agent_Alerts.sql	ktaranov/sqlserver-kit/Scripts/Configure_SQL_Agent_Alerts.sql/269	 Error 832: Constant page has changed \n http://www.sqlskills.com/blogs/paul/dont-confuse-error-823-and-error-832/ \n http://support.microsoft.com/kb/2015759   Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Configure_SQL_Agent_Alerts.sql	ktaranov/sqlserver-kit/Scripts/Configure_SQL_Agent_Alerts.sql/280	 Add a notification if it does not exist    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Configure_SQL_Agent_Alerts.sql	ktaranov/sqlserver-kit/Scripts/Configure_SQL_Agent_Alerts.sql/291	 Memory Error Correction alerts added on 10/30/2013 Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Configure_SQL_Agent_Alerts.sql	ktaranov/sqlserver-kit/Scripts/Configure_SQL_Agent_Alerts.sql/293	 Mitigation of RAM Hardware Errors \n When SQL Server 2012 Enterprise Edition is installed on a Windows 2012 operating system with hardware that supports bad memory diagnostics, \n you will notice new error messages like 854, 855, and 856 instead of the 832 errors that LazyWriter usually generates. \n Error 854 is just informing you that your instance supports memory error correction  Functional-Method
EN	SQL	ktaranov/sqlserver-kit	Scripts/Configure_SQL_Agent_Alerts.sql	ktaranov/sqlserver-kit/Scripts/Configure_SQL_Agent_Alerts.sql/298	 Using SQL Server in Windows 8 and Windows Server 2012 environments \n http://support.microsoft.com/kb/2681562  Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Configure_SQL_Agent_Alerts.sql	ktaranov/sqlserver-kit/Scripts/Configure_SQL_Agent_Alerts.sql/302	 Check for SQL Server 2012 or greater and Enterprise Edition \n You also need Windows Server 2012 or greater, plus hardware that supports memory error correction   Notice
EN	SQL	ktaranov/sqlserver-kit	Scripts/Configure_SQL_Agent_Alerts.sql	ktaranov/sqlserver-kit/Scripts/Configure_SQL_Agent_Alerts.sql/306	 Error 855: Uncorrectable hardware memory corruption detected   Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Configure_SQL_Agent_Alerts.sql	ktaranov/sqlserver-kit/Scripts/Configure_SQL_Agent_Alerts.sql/315	 Add a notification if it does not exist    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Configure_SQL_Agent_Alerts.sql	ktaranov/sqlserver-kit/Scripts/Configure_SQL_Agent_Alerts.sql/325	 Error 856: SQL Server has detected hardware memory corruption, but has recovered the page  Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Configure_SQL_Agent_Alerts.sql	ktaranov/sqlserver-kit/Scripts/Configure_SQL_Agent_Alerts.sql/334	 Add a notification if it does not exist    Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/Count character matches.sql	ktaranov/sqlserver-kit/Scripts/Count character matches.sql/1	 MS SQL Server function LEN() does not count trailing spaces!   Functional-Inline
EN	SQL	ktaranov/sqlserver-kit	Scripts/CPU_Utilization.sql	ktaranov/sqlserver-kit/Scripts/CPU_Utilization.sql/1	\nAuthor: Benjamin Nevarez\nOriginal link: http://sqlblog.com/blogs/ben_nevarez/archive/2009/07/26/getting-cpu-utilization-data-from-sql-server.aspx\n  General
EN	SQL	ktaranov/sqlserver-kit	Scripts/CPU_Utilization_Graphical_form.sql	ktaranov/sqlserver-kit/Scripts/CPU_Utilization_Graphical_form.sql/1	\nAuthor: Slava Murygin\nOriginal link: http://slavasql.blogspot.ru/2016/03/sql-server-cpu-utilization-in-graphical.html\n  General
EN	SQL	ktaranov/sqlserver-kit	Scripts/Create_2_Millions_Tables.sql	ktaranov/sqlserver-kit/Scripts/Create_2_Millions_Tables.sql/1	\nhttps://docs.microsoft.com/en-us/sql/sql-server/maximum-capacity-specifications-for-sql-server?view=sql-server-2017\nDatabase objects include objects such as tables, views, stored procedures, user-defined functions, triggers, rules, defaults, and constraints.\nThe sum of the number of all objects in a database cannot exceed 2,147,483,647.\n    Functional-Module
EN	SQL	ktaranov/sqlserver-kit	Scripts/Create_2_Millions_Tables.sql	ktaranov/sqlserver-kit/Scripts/Create_2_Millions_Tables.sql/27	RAISERROR(@tsql, 0, 1) WITH NOWAIT; Code
EN	SQL	ktaranov/sqlserver-kit	Scripts/Create_2_Millions_Tables.sql	ktaranov/sqlserver-kit/Scripts/Create_2_Millions_Tables.sql/35	\nALTER DATABASE TwoMillions SET SINGLE_USER WITH ROLLBACK IMMEDIATE;\nGO\n\nUSE master;\nGO\n\nDROP DATABASE TwoMillions;\n    Code
EN	SQL	ktaranov/sqlserver-kit	Scripts/Create_JOIN_Query_Between_Multiple_Tables_Dynamically.sql	ktaranov/sqlserver-kit/Scripts/Create_JOIN_Query_Between_Multiple_Tables_Dynamically.sql/1	\n<documentation>\n  <summary>Create JOIN query between multiple tables dynamically.</summary>\n  <returns>SELECT statement from input table with INNER JOINS for all tables having foreign consttraints with input table.</returns>\n  <issues>Does not properly generate alias for case with multiply foreign keys for one table</issues>\n  <author>Konstantin Taranov</author>\n  <created>2019-04-22</created>\n  <modified>2019-04-23 by Konstantin Taranov</modified>\n  <version>1.1</version>\n  <sourceLink>https://github.com/ktaranov/sqlserver-kit/blob/master/Scripts/Create_JOIN_Query_Between_Multiple_Tables_Dynamically.sql</sourceLink>\n</documentation>\n  General
EN	SQL	ktaranov/sqlserver-kit	Scripts/Current_Running_Queries.sql	ktaranov/sqlserver-kit/Scripts/Current_Running_Queries.sql/1	\nAuthor: Nagaraj\nOriginal link: http://www.sqlservercentral.com/blogs/sql-and-sql-only/2016/08/07/current-running-queries/\n  General
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_01/1_build_schema.sql	XD-DENG/SQL-exercise/SQL_exercise_01/1_build_schema.sql/1	 LINK: https://en.wikibooks.org/wiki/SQL_Exercises/The_computer_store   Notice
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_01/1_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_01/1_questions_and_solutions.sql/1	 LINK: https://en.wikibooks.org/wiki/SQL_Exercises/The_computer_store   Notice
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_01/1_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_01/1_questions_and_solutions.sql/4	 1.1 Select the names of all the products in the store. Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_01/1_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_01/1_questions_and_solutions.sql/7	 1.2 Select the names and the prices of all the products in the store.  Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_01/1_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_01/1_questions_and_solutions.sql/10	 1.3 Select the name of the products with a price less than or equal to $200.   Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_01/1_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_01/1_questions_and_solutions.sql/14	 1.4 Select all the products with a price between $60 and $120. Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_01/1_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_01/1_questions_and_solutions.sql/18	 1.5 Select the name and price in cents (i.e., the price must be multiplied by 100).    Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_01/1_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_01/1_questions_and_solutions.sql/23	 1.6 Compute the average price of all the products. Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_01/1_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_01/1_questions_and_solutions.sql/27	 1.7 Compute the average price of all products with manufacturer code equal to 2.   Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_01/1_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_01/1_questions_and_solutions.sql/30	 1.8 Compute the number of products with a price larger than or equal to $180.  Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_01/1_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_01/1_questions_and_solutions.sql/33	 1.9 Select the name and price of all products with a price larger than or equal to $180, and sort first by price (in descending order), and then by name (in ascending order). Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_01/1_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_01/1_questions_and_solutions.sql/36	 1.10 Select all the data from the products, including all the data for each product's manufacturer.    Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_01/1_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_01/1_questions_and_solutions.sql/40	 1.11 Select the product name, price, and manufacturer name of all the products.    Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_01/1_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_01/1_questions_and_solutions.sql/47	 1.12 Select the average price of each manufacturer's products, showing only the manufacturer's code.   Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_01/1_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_01/1_questions_and_solutions.sql/53	 1.13 Select the average price of each manufacturer's products, showing the manufacturer's name.    Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_01/1_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_01/1_questions_and_solutions.sql/60	 1.14 Select the names of manufacturer whose products have an average price larger than or equal to $150.   Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_01/1_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_01/1_questions_and_solutions.sql/74	 1.15 Select the name and price of the cheapest product.    Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_01/1_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_01/1_questions_and_solutions.sql/85	SQL SERVER SOLUTION (T-SQL) Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_01/1_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_01/1_questions_and_solutions.sql/92	 1.16 Select the name of each manufacturer along with the name and price of its most expensive product. Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_01/1_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_01/1_questions_and_solutions.sql/113	 1.17 Add a new product: Loudspeakers, $70, manufacturer 2. Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_01/1_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_01/1_questions_and_solutions.sql/117	 1.18 Update the name of product 8 to "Laser Printer".  Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_01/1_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_01/1_questions_and_solutions.sql/122	 1.19 Apply a 10% discount to all products. Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_01/1_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_01/1_questions_and_solutions.sql/127	 1.20 Apply a 10% discount to all products with a price larger than or equal to $120.   Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_02/2_build_schema.sql	XD-DENG/SQL-exercise/SQL_exercise_02/2_build_schema.sql/1	 LINK : https://en.wikibooks.org/wiki/SQL_Exercises/Employee_management Notice
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_02/2_build_schema.sql	XD-DENG/SQL-exercise/SQL_exercise_02/2_build_schema.sql/3	 Build the Schema   Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_02/2_questions_and_solution.sql	XD-DENG/SQL-exercise/SQL_exercise_02/2_questions_and_solution.sql/1	 LINK : https://en.wikibooks.org/wiki/SQL_Exercises/Employee_management Notice
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_02/2_questions_and_solution.sql	XD-DENG/SQL-exercise/SQL_exercise_02/2_questions_and_solution.sql/3	 2.1 Select the last name of all employees. Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_02/2_questions_and_solution.sql	XD-DENG/SQL-exercise/SQL_exercise_02/2_questions_and_solution.sql/7	 2.2 Select the last name of all employees, without duplicates. Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_02/2_questions_and_solution.sql	XD-DENG/SQL-exercise/SQL_exercise_02/2_questions_and_solution.sql/11	 2.3 Select all the data of employees whose last name is "Smith".   Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_02/2_questions_and_solution.sql	XD-DENG/SQL-exercise/SQL_exercise_02/2_questions_and_solution.sql/15	 2.4 Select all the data of employees whose last name is "Smith" or "Doe".  Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_02/2_questions_and_solution.sql	XD-DENG/SQL-exercise/SQL_exercise_02/2_questions_and_solution.sql/20	 2.5 Select all the data of employees that work in department 14.   Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_02/2_questions_and_solution.sql	XD-DENG/SQL-exercise/SQL_exercise_02/2_questions_and_solution.sql/23	 2.6 Select all the data of employees that work in department 37 or department 77.  Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_02/2_questions_and_solution.sql	XD-DENG/SQL-exercise/SQL_exercise_02/2_questions_and_solution.sql/28	 2.7 Select all the data of employees whose last name begins with an "S".   Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_02/2_questions_and_solution.sql	XD-DENG/SQL-exercise/SQL_exercise_02/2_questions_and_solution.sql/32	 2.8 Select the sum of all the departments' budgets.    Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_02/2_questions_and_solution.sql	XD-DENG/SQL-exercise/SQL_exercise_02/2_questions_and_solution.sql/38	 2.9 Select the number of employees in each department (you only need to show the department code and the number of employees). Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_02/2_questions_and_solution.sql	XD-DENG/SQL-exercise/SQL_exercise_02/2_questions_and_solution.sql/46	 2.10 Select all the data of employees, including each employee's department's data.    Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_02/2_questions_and_solution.sql	XD-DENG/SQL-exercise/SQL_exercise_02/2_questions_and_solution.sql/54	 2.11 Select the name and last name of each employee, along with the name and budget of the employee's department.  Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_02/2_questions_and_solution.sql	XD-DENG/SQL-exercise/SQL_exercise_02/2_questions_and_solution.sql/59	 Without labels Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_02/2_questions_and_solution.sql	XD-DENG/SQL-exercise/SQL_exercise_02/2_questions_and_solution.sql/64	 With labels    Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_02/2_questions_and_solution.sql	XD-DENG/SQL-exercise/SQL_exercise_02/2_questions_and_solution.sql/70	 2.12 Select the name and last name of employees working for departments with a budget greater than $60,000.    Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_02/2_questions_and_solution.sql	XD-DENG/SQL-exercise/SQL_exercise_02/2_questions_and_solution.sql/77	 Without subquery   Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_02/2_questions_and_solution.sql	XD-DENG/SQL-exercise/SQL_exercise_02/2_questions_and_solution.sql/83	 With subquery  Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_02/2_questions_and_solution.sql	XD-DENG/SQL-exercise/SQL_exercise_02/2_questions_and_solution.sql/89	 2.13 Select the departments with a budget larger than the average budget of all the departments.   Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_02/2_questions_and_solution.sql	XD-DENG/SQL-exercise/SQL_exercise_02/2_questions_and_solution.sql/105	 2.14 \n Select the names of departments with more than two employees.  Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_02/2_questions_and_solution.sql	XD-DENG/SQL-exercise/SQL_exercise_02/2_questions_and_solution.sql/116	 With subquery  Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_02/2_questions_and_solution.sql	XD-DENG/SQL-exercise/SQL_exercise_02/2_questions_and_solution.sql/126	 With UNION. This assumes that no two departments have\n   the same name    Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_02/2_questions_and_solution.sql	XD-DENG/SQL-exercise/SQL_exercise_02/2_questions_and_solution.sql/135	 2.15 \n Very Important \n Select the name and last name of employees working for departments with second lowest budget.    Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_02/2_questions_and_solution.sql	XD-DENG/SQL-exercise/SQL_exercise_02/2_questions_and_solution.sql/148	 With subquery  Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_02/2_questions_and_solution.sql	XD-DENG/SQL-exercise/SQL_exercise_02/2_questions_and_solution.sql/157	 2.16 \n Add a new department called "Quality Assurance", with a budget of $40,000 and departmental code 11. \n Add an employee called "Mary Moore" in that department, with SSN 847-21-9811.   Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_02/2_questions_and_solution.sql	XD-DENG/SQL-exercise/SQL_exercise_02/2_questions_and_solution.sql/164	 2.17 \n Reduce the budget of all departments by 10%.   Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_02/2_questions_and_solution.sql	XD-DENG/SQL-exercise/SQL_exercise_02/2_questions_and_solution.sql/170	 2.18 \n Reassign all employees from the Research department (code 77) to the IT department (code 14).   Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_02/2_questions_and_solution.sql	XD-DENG/SQL-exercise/SQL_exercise_02/2_questions_and_solution.sql/176	 2.19 \n Delete from the table all employees in the IT department (code 14). Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_02/2_questions_and_solution.sql	XD-DENG/SQL-exercise/SQL_exercise_02/2_questions_and_solution.sql/182	 2.20 \n Delete from the table all employees who work in departments with a budget greater than or equal to $60,000. Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_02/2_questions_and_solution.sql	XD-DENG/SQL-exercise/SQL_exercise_02/2_questions_and_solution.sql/192	 2.21 \n Delete from the table all employees.    Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_03/3_build_schema.sql	XD-DENG/SQL-exercise/SQL_exercise_03/3_build_schema.sql/1	 The Warehouse \n lINK: https://en.wikibooks.org/wiki/SQL_Exercises/The_warehouse   Notice
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_03/3_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_03/3_questions_and_solutions.sql/1	 The Warehouse \n lINK: https://en.wikibooks.org/wiki/SQL_Exercises/The_warehouse   Notice
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_03/3_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_03/3_questions_and_solutions.sql/4	3.1  \n Select all warehouses.  Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_03/3_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_03/3_questions_and_solutions.sql/8	3.2 \n Select all boxes with a value larger than $150. Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_03/3_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_03/3_questions_and_solutions.sql/12	3.3 \n Select all distinct contents in all the boxes.  Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_03/3_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_03/3_questions_and_solutions.sql/16	3.4 \n Select the average value of all the boxes.  Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_03/3_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_03/3_questions_and_solutions.sql/20	3.5 \n Select the warehouse code and the average value of the boxes in each warehouse. Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_03/3_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_03/3_questions_and_solutions.sql/28	3.6 \n Same as previous exercise, but select only those warehouses where the average value of the boxes is greater than 150.   Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_03/3_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_03/3_questions_and_solutions.sql/36	3.7 \n Select the code of each box, along with the name of the city the box is located in. Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_03/3_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_03/3_questions_and_solutions.sql/47	3.8 \n Select the warehouse codes, along with the number of boxes in each warehouse. \n Optionally, take into account that some warehouses are empty (i.e., the box count should show up as zero, instead of omitting the warehouse from the result).   Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_03/3_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_03/3_questions_and_solutions.sql/55	3.9 \n Select the codes of all warehouses that are saturated (a warehouse is saturated if the number of boxes in it is larger than the warehouse's capacity).  Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_03/3_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_03/3_questions_and_solutions.sql/74	3.10 \n Select the codes of all the boxes located in Chicago.   Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_03/3_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_03/3_questions_and_solutions.sql/82	 Without subqueries     Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_03/3_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_03/3_questions_and_solutions.sql/88	 With a subquery    Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_03/3_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_03/3_questions_and_solutions.sql/99	3.11 \n Create a new warehouse in New York with a capacity for 3 boxes. Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_03/3_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_03/3_questions_and_solutions.sql/104	3.12 \n Create a new box, with code "H5RT", containing "Papers" with a value of $200, and located in warehouse 2.   Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_03/3_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_03/3_questions_and_solutions.sql/109	3.13 \n Reduce the value of all boxes by 15%.   Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_03/3_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_03/3_questions_and_solutions.sql/115	3.14 \n Remove all boxes with a value lower than $100.  Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_03/3_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_03/3_questions_and_solutions.sql/120	 3.15 \n Remove all boxes from saturated warehouses. Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_03/3_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_03/3_questions_and_solutions.sql/135	 3.16 \n Add Index for column "Warehouse" in table "boxes"   Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_03/3_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_03/3_questions_and_solutions.sql/137	 !!!NOTE!!!: index should NOT be used on small tables in practice   Notice
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_03/3_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_03/3_questions_and_solutions.sql/140	 3.17 \n Print all the existing indexes  Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_03/3_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_03/3_questions_and_solutions.sql/142	 !!!NOTE!!!: index should NOT be used on small tables in practice   Notice
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_03/3_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_03/3_questions_and_solutions.sql/144	 MySQL  Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_03/3_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_03/3_questions_and_solutions.sql/148	 SQLite Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_03/3_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_03/3_questions_and_solutions.sql/150	 OR Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_03/3_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_03/3_questions_and_solutions.sql/153	 Oracle Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_03/3_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_03/3_questions_and_solutions.sql/158	 3.18 \n Remove (drop) the index you added just  Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_03/3_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_03/3_questions_and_solutions.sql/160	 !!!NOTE!!!: index should NOT be used on small tables in practice   Notice
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_04/4_build_schema.sql	XD-DENG/SQL-exercise/SQL_exercise_04/4_build_schema.sql/1	 https://en.wikibooks.org/wiki/SQL_Exercises/Movie_theatres Notice
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_04/4_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_04/4_questions_and_solutions.sql/1	 https://en.wikibooks.org/wiki/SQL_Exercises/Movie_theatres Notice
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_04/4_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_04/4_questions_and_solutions.sql/3	 4.1 \n Select the title of all movies. Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_04/4_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_04/4_questions_and_solutions.sql/7	 4.2 \n Show all the distinct ratings in the database.  Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_04/4_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_04/4_questions_and_solutions.sql/11	 4.3 \n Show all unrated movies.    Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_04/4_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_04/4_questions_and_solutions.sql/17	 4.4 \n Select all movie theaters that are not currently showing a movie.   Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_04/4_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_04/4_questions_and_solutions.sql/22	 4.5 \n Select all data from all movie theaters \n and, additionally, the data from the movie that is being shown in the theater (if one is being shown).  Functional-Inline 
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_04/4_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_04/4_questions_and_solutions.sql/26	 This query below would fail as it will only return the theaters with movies shown. \n we need to use left outer join instead.    Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_04/4_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_04/4_questions_and_solutions.sql/28	 This is a great example to demonstrate why we need to use left join rather than inner join sometimes.  Notice
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_04/4_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_04/4_questions_and_solutions.sql/33	 correct query  Notice
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_04/4_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_04/4_questions_and_solutions.sql/39	 4.6 Select all data from all movies and, if that movie is being shown in a theater, show the data from the theater.    Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_04/4_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_04/4_questions_and_solutions.sql/42	 the query below would fail Notice
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_04/4_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_04/4_questions_and_solutions.sql/47	 Correct solution   Notice
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_04/4_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_04/4_questions_and_solutions.sql/56	 4.7 \n Show the titles of movies not currently being shown in any theaters. \n VERY IMPORTANT!!!   Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_04/4_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_04/4_questions_and_solutions.sql/60	 the query below would FAIL due to the NULL value returned by the subquery  Notice
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_04/4_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_04/4_questions_and_solutions.sql/67	 With JOIN  Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_04/4_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_04/4_questions_and_solutions.sql/73	 With subquery  Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_04/4_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_04/4_questions_and_solutions.sql/82	 4.8 \n Add the unrated movie "One, Two, Three".    Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_04/4_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_04/4_questions_and_solutions.sql/88	 4.9 \n Set the rating of all unrated movies to "G".    Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_04/4_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_04/4_questions_and_solutions.sql/94	 4.10 \n Remove movie theaters projecting movies rated "NC-17". Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_05/5_build_schema.sql	XD-DENG/SQL-exercise/SQL_exercise_05/5_build_schema.sql/1	 https://en.wikibooks.org/wiki/SQL_Exercises/Pieces_and_providers   Notice
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_05/5_build_schema.sql	XD-DENG/SQL-exercise/SQL_exercise_05/5_build_schema.sql/21	 alternative one for SQLite Notice
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_05/5_build_schema.sql	XD-DENG/SQL-exercise/SQL_exercise_05/5_build_schema.sql/22	 \n CREATE TABLE Provides (\n Piece INTEGER,\n Provider VARCHAR(40),  \n Price INTEGER NOT NULL,\n PRIMARY KEY(Piece, Provider) \n );\n Code
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_05/5_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_05/5_questions_and_solutions.sql/1	 https://en.wikibooks.org/wiki/SQL_Exercises/Pieces_and_providers   Notice
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_05/5_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_05/5_questions_and_solutions.sql/10	 5.1 \n Select the name of all the pieces.     Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_05/5_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_05/5_questions_and_solutions.sql/14	 5.2 \n Select all the providers' data.    Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_05/5_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_05/5_questions_and_solutions.sql/18	 5.3 \n Obtain the average price of each piece (show only the piece code and the average price).   Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_05/5_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_05/5_questions_and_solutions.sql/24	 5.4 \n Obtain the names of all providers who supply piece 1.  Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_05/5_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_05/5_questions_and_solutions.sql/37	 Without subquery   Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_05/5_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_05/5_questions_and_solutions.sql/43	 With subquery  Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_05/5_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_05/5_questions_and_solutions.sql/51	 5.5 \n Select the name of pieces provided by provider with code "HAL".    Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_05/5_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_05/5_questions_and_solutions.sql/63	 With EXISTS subquery   Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_05/5_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_05/5_questions_and_solutions.sql/64	 Interesting clause Notice
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_05/5_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_05/5_questions_and_solutions.sql/75	 5.6 \n Intereting and important one. \n For each piece, find the most expensive offering of that piece and include the piece name, provider name, and price \n (note that there could be two providers who supply the same piece at the most expensive price). Functional-Method
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_05/5_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_05/5_questions_and_solutions.sql/82	 WRONG solution given by XD-DENG.   Notice
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_05/5_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_05/5_questions_and_solutions.sql/89	 this is wrong since when I group by a.code, SQL will automatically select the first c.Name in each group to return, \n which is not what we expected.  Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_05/5_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_05/5_questions_and_solutions.sql/92	 CORRECT SOLUTION   Notice
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_05/5_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_05/5_questions_and_solutions.sql/101	 This is worthwhile to look into again  Notice
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_05/5_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_05/5_questions_and_solutions.sql/105	 5.7 \n Add an entry to the database to indicate that "Skellington Supplies" (code "TNBC") will provide sprockets (code "1") for 7 cents each. Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_05/5_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_05/5_questions_and_solutions.sql/109	 5.8 \n Increase all prices by one cent.   Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_05/5_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_05/5_questions_and_solutions.sql/114	 5.9 \n Update the database to reflect that "Susan Calvin Corp." (code "RBT") will not supply bolts (code 4).  Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_05/5_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_05/5_questions_and_solutions.sql/119	 5.10 \n Update the database to reflect that "Susan Calvin Corp." (code "RBT") will not supply any pieces \n (the provider should still remain in the database).    Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_06/6_question_and_solution.sql	XD-DENG/SQL-exercise/SQL_exercise_06/6_question_and_solution.sql/1	 https://en.wikibooks.org/wiki/SQL_Exercises/Scientists Notice
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_06/6_question_and_solution.sql	XD-DENG/SQL-exercise/SQL_exercise_06/6_question_and_solution.sql/3	 6.1 \n List all the scientists' names, their projects' names, \n and the hours worked by that scientist on each project, \n in alphabetical order of project name, then scientist name.    Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_06/6_question_and_solution.sql	XD-DENG/SQL-exercise/SQL_exercise_06/6_question_and_solution.sql/14	 6.2 \n Select the project names which are not assigned yet    Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_07/7_build_schema.sql	XD-DENG/SQL-exercise/SQL_exercise_07/7_build_schema.sql/1	 https://en.wikibooks.org/wiki/SQL_Exercises/Planet_Express Notice
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_07/7_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_07/7_questions_and_solutions.sql/1	 https://en.wikibooks.org/wiki/SQL_Exercises/Planet_Express     Notice
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_07/7_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_07/7_questions_and_solutions.sql/3	 7.1 \n Who receieved a 1.5kg package?  Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_07/7_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_07/7_questions_and_solutions.sql/17	 The result is "Al Gore's Head".    Notice
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_07/7_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_07/7_questions_and_solutions.sql/20	 7.2 \n What is the total weight of all the packages that he sent?  Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_08/8_build_schema.sql	XD-DENG/SQL-exercise/SQL_exercise_08/8_build_schema.sql/1	 https://en.wikibooks.org/wiki/SQL_Exercises/The_Hospital   Notice
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_08/8_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_08/8_questions_and_solutions.sql/2	 8.1 \n Obtain the names of all physicians that have performed a medical procedure they have never been certified to perform.   Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_08/8_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_08/8_questions_and_solutions.sql/6	 8.2 \n Same as the previous query, but include the following information in the results: Physician name, name of procedure, date when the procedure was carried out, name of the patient the procedure was carried out on. Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_08/8_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_08/8_questions_and_solutions.sql/10	 8.3 \n Obtain the names of all physicians that have performed a medical procedure that they are certified to perform, but such that the procedure was done at a date (Undergoes.Date) after the physician's certification expired (Trained_In.CertificationExpires).   Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_08/8_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_08/8_questions_and_solutions.sql/14	 8.4 \n Same as the previous query, but include the following information in the results: Physician name, name of procedure, date when the procedure was carried out, name of the patient the procedure was carried out on, and date when the certification expired.    Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_08/8_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_08/8_questions_and_solutions.sql/18	 8.5 \n Obtain the information for appointments where a patient met with a physician other than his/her primary care physician. Show the following information: Patient name, physician name, nurse name (if any), start and end time of appointment, examination room, and the name of the patient's primary care physician.   Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_08/8_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_08/8_questions_and_solutions.sql/22	 8.6 \n The Patient field in Undergoes is redundant, since we can obtain it from the Stay table. There are no constraints in force to prevent inconsistencies between these two tables. More specifically, the Undergoes table may include a row where the patient ID does not match the one we would obtain from the Stay table through the Undergoes.Stay foreign key. Select all rows from Undergoes that exhibit this inconsistency.    Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_08/8_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_08/8_questions_and_solutions.sql/26	 8.7 \n Obtain the names of all the nurses who have ever been on call for room 123. Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_08/8_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_08/8_questions_and_solutions.sql/30	 8.8 \n The hospital has several examination rooms where appointments take place. Obtain the number of appointments that have taken place in each examination room. Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_08/8_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_08/8_questions_and_solutions.sql/33	 8.9 \n Obtain the names of all patients (also include, for each patient, the name of the patient's primary care physician), such that \emph{all} the following are true: \n The patient has been prescribed some medication by his/her primary care physician. \n The patient has undergone a procedure with a cost larger that $5,000 \n The patient has had at least two appointment where the nurse who prepped the appointment was a registered nurse. \n The patient's primary care physician is not the head of any department.  Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_09/9_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_09/9_questions_and_solutions.sql/1	 9.1 give the total number of recordings in this table  Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_09/9_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_09/9_questions_and_solutions.sql/7	 9.2 the number of packages listed in this table?   Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_09/9_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_09/9_questions_and_solutions.sql/13	 9.3 How many times the package "Rcpp" was downloaded?  Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_09/9_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_09/9_questions_and_solutions.sql/21	 9.4 How many recordings are from China ("CN")? Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_09/9_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_09/9_questions_and_solutions.sql/29	 9.5 Give the package name and how many times they're downloaded. Order by the 2nd column descently.    Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_09/9_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_09/9_questions_and_solutions.sql/37	 9.6 Give the package ranking (based on how many times it was downloaded) during 9AM to 11AM    Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_09/9_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_09/9_questions_and_solutions.sql/49	 9.7 How many recordings are from China ("CN") or Japan("JP") or Singapore ("SG")? \n Select based on a given list. Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_09/9_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_09/9_questions_and_solutions.sql/68	 9.8 Print the countries whose downloaded are more than the downloads from China ("CN") Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_09/9_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_09/9_questions_and_solutions.sql/86	 9.9 Print the average length of the package name of all the UNIQUE packages    Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_09/9_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_09/9_questions_and_solutions.sql/88	 Wrong Solution (missed "UNIQUE")   Notice
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_09/9_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_09/9_questions_and_solutions.sql/91	 Correct Solution   Notice
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_09/9_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_09/9_questions_and_solutions.sql/100	 9.10 Get the package whose downloading count ranks 2nd (print package name and it's download count).   Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_09/9_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_09/9_questions_and_solutions.sql/115	 9.11 Print the name of the package whose download count is bigger than 1000.   Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_09/9_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_09/9_questions_and_solutions.sql/117	 Solution 1 (without sub-query) Notice
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_09/9_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_09/9_questions_and_solutions.sql/123	 Solution 2 (with sub-query)    Notice
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_09/9_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_09/9_questions_and_solutions.sql/134	 9.12 The field "r_os" is the operating system of the users. \n Here we would like to know what main system we have (ignore version number), the relevant counts, and the proportion (in percentage).   Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_09/9_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_09/9_questions_and_solutions.sql/142	 Here we use INT*1.0 to conver an integer to float so that we can compute compute the percentage (1/5 can be 0.2 instead of 0)  Notice
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_09/9_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_09/9_questions_and_solutions.sql/143	 || is an alternative of CONCAT() in SQLite.    Notice
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_09/9_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_09/9_questions_and_solutions.sql/144	 SUBSTR(field, start_position, length) is used to get a part of a character string. Notice
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_09/9_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_09/9_questions_and_solutions.sql/145	 [] can help use spaces in the aliases. Notice
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_10/10_build_schema.sql	XD-DENG/SQL-exercise/SQL_exercise_10/10_build_schema.sql/1	 Used SQLite3 for this example  Notice
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_10/10_build_schema.sql	XD-DENG/SQL-exercise/SQL_exercise_10/10_build_schema.sql/3	 table PEOPLE: containing unique ID and corresponding names.    Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_10/10_build_schema.sql	XD-DENG/SQL-exercise/SQL_exercise_10/10_build_schema.sql/11	 ADDRESS: containing the history of address information of each ID. Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_10/10_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_10/10_questions_and_solutions.sql/1	 Used SQLite3 for this example  Notice
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_10/10_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_10/10_questions_and_solutions.sql/3	 10.1 Join table PEOPLE and ADDRESS, but keep only one address information for each person (we don't mind which record we take for each person). \n i.e., the joined table should have the same number of rows as table PEOPLE  Functional-Inline
EN	SQL	XD-DENG/SQL-exercise	SQL_exercise_10/10_questions_and_solutions.sql	XD-DENG/SQL-exercise/SQL_exercise_10/10_questions_and_solutions.sql/20	 10.2 Join table PEOPLE and ADDRESS, but ONLY keep the LATEST address information for each person. \n i.e., the joined table should have the same number of rows as table PEOPLE    Functional-Inline
EN	SQL	confluentinc/ksql	ksqldb-examples/src/main/resources/SampleQueries.sql	confluentinc/ksql/ksqldb-examples/src/main/resources/SampleQueries.sql/9	 Enrich the pageview stream Functional-Inline
EN	SQL	confluentinc/ksql	ksqldb-examples/src/main/resources/SampleQueries.sql	confluentinc/ksql/ksqldb-examples/src/main/resources/SampleQueries.sql/12	 Find all the pageviews by female users Functional-Inline
EN	SQL	confluentinc/ksql	ksqldb-examples/src/main/resources/SampleQueries.sql	confluentinc/ksql/ksqldb-examples/src/main/resources/SampleQueries.sql/15	 Find the pageviews from reagion with id ending in _8 and _9 from the female pageview Functional-Inline
EN	SQL	confluentinc/ksql	ksqldb-examples/src/main/resources/SampleQueries.sql	confluentinc/ksql/ksqldb-examples/src/main/resources/SampleQueries.sql/18	 Number of views for each page for tumbling window of 5 seconds Functional-Inline
EN	SQL	confluentinc/ksql	ksqldb-examples/src/main/resources/SampleQueries.sql	confluentinc/ksql/ksqldb-examples/src/main/resources/SampleQueries.sql/21	 Number of views for each page for tumbling window of 5 minutes Functional-Inline
EN	SQL	confluentinc/ksql	ksqldb-examples/src/main/resources/SampleQueries.sql	confluentinc/ksql/ksqldb-examples/src/main/resources/SampleQueries.sql/25	 Number of views for each each reagion and gender combination for tumbling window of 15 seconds\n when the view count is greater than 5 Functional-Inline
EN	SQL	confluentinc/ksql	ksqldb-functional-tests/src/test/resources/test-runner/test4/statements.sql	confluentinc/ksql/ksqldb-functional-tests/src/test/resources/test-runner/test4/statements.sql/1	 This test is courtesy of Michael Drogalis (https://gist.github.com/MichaelDrogalis)	Notice
EN	SQL	hyrise/sql-parser	hyrise/web-interface/sample-queries.sql	hyrise/sql-parser/hyrise/web-interface/sample-queries.sql/1	 Load Tables	Functional-Inline
EN	SQL	hyrise/sql-parser	test/queries/queries-bad.sql	hyrise/sql-parser/test/queries/queries-bad.sql/1	 This file contains a list of strings that are NOT valid SQL queries.	Functional-Module
EN	SQL	hyrise/sql-parser	test/queries/queries-bad.sql	hyrise/sql-parser/test/queries/queries-bad.sql/2	 Each line contains a single SQL query.	Notice
EN	SQL	hyrise/sql-parser	test/queries/queries-bad.sql	hyrise/sql-parser/test/queries/queries-bad.sql/3	 Each line starts with a '!' char to indicate that parsing should fail.	Notice
EN	SQL	hyrise/sql-parser	test/queries/queries-bad.sql	hyrise/sql-parser/test/queries/queries-bad.sql/20	 We do not support nested WITH clauses	Notice
EN	SQL	hyrise/sql-parser	test/queries/queries-bad.sql	hyrise/sql-parser/test/queries/queries-bad.sql/21	 Missing comma between WITH descriptions	Notice
EN	SQL	hyrise/sql-parser	test/queries/queries-bad.sql	hyrise/sql-parser/test/queries/queries-bad.sql/22	 Transaction naming is currently not supported	Notice
EN	SQL	hyrise/sql-parser	test/queries/queries-good.sql	hyrise/sql-parser/test/queries/queries-good.sql/1	 This file contains a list of strings that are NOT valid SQL queries.	Functional-Module
EN	SQL	hyrise/sql-parser	test/queries/queries-good.sql	hyrise/sql-parser/test/queries/queries-good.sql/2	 Each line contains a single SQL query.	Notice
EN	SQL	hyrise/sql-parser	test/queries/tpc-h-01.sql	hyrise/sql-parser/test/queries/tpc-h-01.sql/1	 http://www.sqlserver-dba.com/2011/09/this-is-a-followup-on-my-earlier-post-of-sql-server-test-data-generation-testing-tools-i-had-some-requests-for-my-set-up-pr.html	Notice
EN	SQL	hyrise/sql-parser	test/queries/tpc-h-11.sql	hyrise/sql-parser/test/queries/tpc-h-11.sql/2	 TPC_H Query 11 - Important Stock Identification	Functional-Inline
EN	SQL	hyrise/sql-parser	test/queries/tpc-h-12.sql	hyrise/sql-parser/test/queries/tpc-h-12.sql/1	 TPC_H Query 12 - Shipping Modes and Order Priority	Functional-Inline
EN	SQL	hyrise/sql-parser	test/queries/tpc-h-13.sql	hyrise/sql-parser/test/queries/tpc-h-13.sql/1	 TPC_H Query 13 - Customer Distribution	Functional-Inline
EN	SQL	hyrise/sql-parser	test/queries/tpc-h-14.sql	hyrise/sql-parser/test/queries/tpc-h-14.sql/1	 TPC_H Query 14 - Promotion Effect	Functional-Inline
EN	SQL	hyrise/sql-parser	test/queries/tpc-h-15.sql	hyrise/sql-parser/test/queries/tpc-h-15.sql/1	 TPC_H Query 15.1 - Create View for Top Supplier Query	Functional-Inline
EN	SQL	hyrise/sql-parser	test/queries/tpc-h-15.sql	hyrise/sql-parser/test/queries/tpc-h-15.sql/8	 TPC_H Query 15.2 - Top Supplier	Functional-Inline
EN	SQL	hyrise/sql-parser	test/queries/tpc-h-15.sql	hyrise/sql-parser/test/queries/tpc-h-15.sql/14	 TPC_H Query 15.3 - Drop View	Functional-Inline
EN	SQL	hyrise/sql-parser	test/queries/tpc-h-16.sql	hyrise/sql-parser/test/queries/tpc-h-16.sql/2	 TPC_H Query 16 - Parts/Supplier Relationship	Functional-Inline
EN	SQL	hyrise/sql-parser	test/queries/tpc-h-17.sql	hyrise/sql-parser/test/queries/tpc-h-17.sql/1	 TPC_H Query 17 - Small-Quantity-Order Revenue	Functional-Inline
EN	SQL	hyrise/sql-parser	test/queries/tpc-h-18.sql	hyrise/sql-parser/test/queries/tpc-h-18.sql/1	 TPC_H Query 18 - Large Volume Customer	Functional-Inline
EN	SQL	hyrise/sql-parser	test/queries/tpc-h-19.sql	hyrise/sql-parser/test/queries/tpc-h-19.sql/1	 TPC_H Query 19 - Discounted Revenue	Functional-Inline
EN	SQL	hyrise/sql-parser	test/queries/tpc-h-20.sql	hyrise/sql-parser/test/queries/tpc-h-20.sql/1	 TPC_H Query 20 - Potential Part Promotion	Functional-Inline
EN	SQL	hyrise/sql-parser	test/queries/tpc-h-21.sql	hyrise/sql-parser/test/queries/tpc-h-21.sql/1	 TPC_H Query 21 - Suppliers Who Kept Orders Waiting	Functional-Inline
EN	SQL	hyrise/sql-parser	test/queries/tpc-h-22.sql	hyrise/sql-parser/test/queries/tpc-h-22.sql/1	 TPC_H Query 22 - Global Sales Opportunity */	Functional-Inline
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/1	 MySQL dump 10.13  Distrib 5.5.54, for debian-linux-gnu (x86_64)	General
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/3	 Host: localhost    Database: UM_INFO_EXTENDED_CLEANED	General
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/5	Server version 5.5.54-0ubuntu0.14.04.1	General
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/7	!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/8	!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/9	!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/10	!40101 SET NAMES utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/11	!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/12	!40103 SET TIME_ZONE='+00:00' 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/13	!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/14	!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/15	!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/16	!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/19	 Table structure for table `AREA`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/23	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/24	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/29	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/32	 Dumping data for table `AREA`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/36	!40000 ALTER TABLE `AREA` DISABLE KEYS	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/38	!40000 ALTER TABLE `AREA` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/42	 Table structure for table `COMMENT_INSTRUCTOR`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/46	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/47	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/55	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/58	 Dumping data for table `COMMENT_INSTRUCTOR`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/62	!40000 ALTER TABLE `COMMENT_INSTRUCTOR` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/63	!40000 ALTER TABLE `COMMENT_INSTRUCTOR` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/67	 Table structure for table `COURSE`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/71	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/72	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/94	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/97	 Dumping data for table `COURSE`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/101	!40000 ALTER TABLE `COURSE` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/115	!40000 ALTER TABLE `COURSE` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/119	 Table structure for table `COURSE_OFFERING`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/123	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/124	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/148	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/151	 Dumping data for table `COURSE_OFFERING`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/155	!40000 ALTER TABLE `COURSE_OFFERING` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/170	!40000 ALTER TABLE `COURSE_OFFERING` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/174	 Table structure for table `COURSE_PREREQUISITE`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/178	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/179	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/185	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/188	 Dumping data for table `COURSE_PREREQUISITE`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/192	!40000 ALTER TABLE `COURSE_PREREQUISITE` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/194	!40000 ALTER TABLE `COURSE_PREREQUISITE` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/198	 Table structure for table `COURSE_TAGS_COUNT`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/202	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/203	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/228	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/231	 Dumping data for table `COURSE_TAGS_COUNT`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/235	!40000 ALTER TABLE `COURSE_TAGS_COUNT` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/236	!40000 ALTER TABLE `COURSE_TAGS_COUNT` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/240	 Table structure for table `GSI`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/244	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/245	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/251	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/254	 Dumping data for table `GSI`	Functional-Inline
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/258	!40000 ALTER TABLE `GSI` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/259	!40000 ALTER TABLE `GSI` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/263	 Table structure for table `INSTRUCTOR`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/267	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/268	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/275	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/278	 Dumping data for table `INSTRUCTOR`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/282	!40000 ALTER TABLE `INSTRUCTOR` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/284	!40000 ALTER TABLE `INSTRUCTOR` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/288	 Table structure for table `OFFERING_INSTRUCTOR`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/292	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/293	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/304	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/307	 Dumping data for table `OFFERING_INSTRUCTOR`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/311	!40000 ALTER TABLE `OFFERING_INSTRUCTOR` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/316	!40000 ALTER TABLE `OFFERING_INSTRUCTOR` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/320	 Table structure for table `PROGRAM`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/324	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/325	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/333	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/336	 Dumping data for table `PROGRAM`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/340	!40000 ALTER TABLE `PROGRAM` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/342	!40000 ALTER TABLE `PROGRAM` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/346	 Table structure for table `PROGRAM_COURSE`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/350	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/351	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/359	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/362	 Dumping data for table `PROGRAM_COURSE`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/366	!40000 ALTER TABLE `PROGRAM_COURSE` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/368	!40000 ALTER TABLE `PROGRAM_COURSE` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/372	 Table structure for table `PROGRAM_REQUIREMENT`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/376	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/377	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/385	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/388	 Dumping data for table `PROGRAM_REQUIREMENT`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/392	!40000 ALTER TABLE `PROGRAM_REQUIREMENT` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/394	!40000 ALTER TABLE `PROGRAM_REQUIREMENT` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/398	 Table structure for table `SEMESTER`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/402	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/403	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/410	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/413	 Dumping data for table `SEMESTER`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/417	!40000 ALTER TABLE `SEMESTER` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/419	!40000 ALTER TABLE `SEMESTER` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/423	 Table structure for table `STUDENT`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/427	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/428	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/445	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/448	 Dumping data for table `STUDENT`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/452	!40000 ALTER TABLE `STUDENT` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/454	!40000 ALTER TABLE `STUDENT` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/458	 Table structure for table `STUDENT_RECORD`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/462	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/463	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/480	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/483	 Dumping data for table `STUDENT_RECORD`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/487	!40000 ALTER TABLE `STUDENT_RECORD` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/489	!40000 ALTER TABLE `STUDENT_RECORD` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/491	!40103 SET TIME_ZONE=@OLD_TIME_ZONE 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/493	!40101 SET SQL_MODE=@OLD_SQL_MODE 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/494	!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/495	!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/496	!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/497	!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/498	!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/499	!40111 SET SQL_NOTES=@OLD_SQL_NOTES 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/advising-db.sql	jkkummerfeld/text2sql-data/data/advising-db.sql/501	 Dump completed on 2017-02-07 15:36:24	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/1	 MySQL dump 10.13  Distrib 5.7.17, for Linux (x86_64)	General
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/3	 Host: localhost    Database: atis	General
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/5	Server version 5.7.17	General
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/7	!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/8	!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/9	!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/10	!40101 SET NAMES utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/11	!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/12	!40103 SET TIME_ZONE='+00:00' 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/13	!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/14	!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/15	!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/16	!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/19	 Table structure for table `aircraft`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/23	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/24	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/61	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/64	 Dumping data for table `aircraft`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/68	!40000 ALTER TABLE `aircraft` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/70	!40000 ALTER TABLE `aircraft` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/74	 Table structure for table `airline`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/78	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/79	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/87	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/90	 Dumping data for table `airline`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/94	!40000 ALTER TABLE `airline` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/96	!40000 ALTER TABLE `airline` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/100	 Table structure for table `airport`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/104	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/105	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/122	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/125	 Dumping data for table `airport`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/129	!40000 ALTER TABLE `airport` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/131	!40000 ALTER TABLE `airport` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/135	 Table structure for table `airport_service`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/139	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/140	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/153	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/156	 Dumping data for table `airport_service`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/160	!40000 ALTER TABLE `airport_service` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/162	!40000 ALTER TABLE `airport_service` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/166	 Table structure for table `city`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/170	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/171	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/184	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/187	 Dumping data for table `city`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/191	!40000 ALTER TABLE `city` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/193	!40000 ALTER TABLE `city` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/197	 Table structure for table `class_of_service`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/201	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/202	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/210	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/213	 Dumping data for table `class_of_service`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/217	!40000 ALTER TABLE `class_of_service` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/219	!40000 ALTER TABLE `class_of_service` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/223	 Table structure for table `code_description`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/227	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/228	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/234	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/237	 Dumping data for table `code_description`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/241	!40000 ALTER TABLE `code_description` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/243	!40000 ALTER TABLE `code_description` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/247	 Table structure for table `compartment_class`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/251	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/252	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/259	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/262	 Dumping data for table `compartment_class`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/266	!40000 ALTER TABLE `compartment_class` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/268	!40000 ALTER TABLE `compartment_class` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/272	 Table structure for table `date_day`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/276	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/277	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/288	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/291	 Dumping data for table `date_day`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/295	!40000 ALTER TABLE `date_day` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/297	!40000 ALTER TABLE `date_day` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/301	 Table structure for table `days`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/305	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/306	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/313	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/316	 Dumping data for table `days`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/320	!40000 ALTER TABLE `days` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/322	!40000 ALTER TABLE `days` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/326	 Table structure for table `dual_carrier`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/330	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/331	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/343	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/346	 Dumping data for table `dual_carrier`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/350	!40000 ALTER TABLE `dual_carrier` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/352	!40000 ALTER TABLE `dual_carrier` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/356	 Table structure for table `equipment_sequence`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/360	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/361	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/368	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/371	 Dumping data for table `equipment_sequence`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/375	!40000 ALTER TABLE `equipment_sequence` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/377	!40000 ALTER TABLE `equipment_sequence` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/381	 Table structure for table `fare`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/385	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/386	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/407	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/410	 Dumping data for table `fare`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/414	!40000 ALTER TABLE `fare` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/416	!40000 ALTER TABLE `fare` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/420	 Table structure for table `fare_basis`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/424	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/425	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/445	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/448	 Dumping data for table `fare_basis`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/452	!40000 ALTER TABLE `fare_basis` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/454	!40000 ALTER TABLE `fare_basis` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/458	 Table structure for table `flight`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/462	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/463	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/497	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/500	 Dumping data for table `flight`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/504	!40000 ALTER TABLE `flight` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/507	!40000 ALTER TABLE `flight` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/511	 Table structure for table `flight_fare`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/515	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/516	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/524	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/527	 Dumping data for table `flight_fare`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/531	!40000 ALTER TABLE `flight_fare` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/534	!40000 ALTER TABLE `flight_fare` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/538	 Table structure for table `flight_leg`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/542	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/543	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/552	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/555	 Dumping data for table `flight_leg`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/559	!40000 ALTER TABLE `flight_leg` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/561	!40000 ALTER TABLE `flight_leg` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/565	 Table structure for table `flight_stop`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/569	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/570	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/589	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/592	 Dumping data for table `flight_stop`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/596	!40000 ALTER TABLE `flight_stop` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/598	!40000 ALTER TABLE `flight_stop` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/602	 Table structure for table `food_service`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/606	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/607	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/618	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/621	 Dumping data for table `food_service`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/625	!40000 ALTER TABLE `food_service` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/627	!40000 ALTER TABLE `food_service` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/631	 Table structure for table `ground_service`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/635	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/636	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/646	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/649	 Dumping data for table `ground_service`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/653	!40000 ALTER TABLE `ground_service` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/655	!40000 ALTER TABLE `ground_service` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/659	 Table structure for table `month`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/663	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/664	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/669	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/672	 Dumping data for table `month`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/676	!40000 ALTER TABLE `month` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/678	!40000 ALTER TABLE `month` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/682	 Table structure for table `restriction`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/686	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/687	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/702	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/705	 Dumping data for table `restriction`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/709	!40000 ALTER TABLE `restriction` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/711	!40000 ALTER TABLE `restriction` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/715	 Table structure for table `state`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/719	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/720	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/728	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/731	 Dumping data for table `state`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/735	!40000 ALTER TABLE `state` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/737	!40000 ALTER TABLE `state` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/741	 Table structure for table `time_interval`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/745	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/746	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/753	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/756	 Dumping data for table `time_interval`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/760	!40000 ALTER TABLE `time_interval` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/762	!40000 ALTER TABLE `time_interval` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/766	 Table structure for table `time_zone`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/770	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/771	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/779	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/782	 Dumping data for table `time_zone`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/786	!40000 ALTER TABLE `time_zone` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/788	!40000 ALTER TABLE `time_zone` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/790	!40103 SET TIME_ZONE=@OLD_TIME_ZONE 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/792	!40101 SET SQL_MODE=@OLD_SQL_MODE 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/793	!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/794	!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/795	!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/796	!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/797	!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/798	!40111 SET SQL_NOTES=@OLD_SQL_NOTES 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/atis-db.sql	jkkummerfeld/text2sql-data/data/atis-db.sql/800	 Dump completed on 2017-04-13 11:18:11	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/1	 MySQL dump 10.13  Distrib 5.7.17, for Linux (x86_64)	General
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/3	 Host: localhost    Database: geo	General
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/5	Server version 5.7.17	General
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/7	!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/8	!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/9	!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/10	!40101 SET NAMES utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/11	!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/12	!40103 SET TIME_ZONE='+00:00' 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/13	!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/14	!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/15	!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/16	!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/19	 Table structure for table `border_info`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/23	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/24	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/29	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/32	 Dumping data for table `border_info`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/36	!40000 ALTER TABLE `border_info` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/38	!40000 ALTER TABLE `border_info` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/42	 Table structure for table `city`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/46	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/47	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/54	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/57	 Dumping data for table `city`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/61	!40000 ALTER TABLE `city` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/63	!40000 ALTER TABLE `city` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/67	 Table structure for table `highlow`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/71	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/72	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/80	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/83	 Dumping data for table `highlow`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/87	!40000 ALTER TABLE `highlow` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/89	!40000 ALTER TABLE `highlow` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/93	 Table structure for table `lake`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/97	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/98	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/105	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/108	 Dumping data for table `lake`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/112	!40000 ALTER TABLE `lake` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/114	!40000 ALTER TABLE `lake` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/118	 Table structure for table `mountain`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/122	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/123	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/130	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/133	 Dumping data for table `mountain`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/137	!40000 ALTER TABLE `mountain` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/139	!40000 ALTER TABLE `mountain` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/143	 Table structure for table `river`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/147	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/148	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/155	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/158	 Dumping data for table `river`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/162	!40000 ALTER TABLE `river` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/164	!40000 ALTER TABLE `river` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/168	 Table structure for table `state`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/172	!40101 SET @saved_cs_client     = @@character_set_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/173	!40101 SET character_set_client = utf8 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/182	!40101 SET character_set_client = @saved_cs_client 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/185	 Dumping data for table `state`	Notice
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/189	!40000 ALTER TABLE `state` DISABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/191	!40000 ALTER TABLE `state` ENABLE KEYS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/193	!40103 SET TIME_ZONE=@OLD_TIME_ZONE 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/195	!40101 SET SQL_MODE=@OLD_SQL_MODE 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/196	!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/197	!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/198	!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/199	!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/200	!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/201	!40111 SET SQL_NOTES=@OLD_SQL_NOTES 	Code
EN	SQL	jkkummerfeld/text2sql-data	data/geography-db.sql	jkkummerfeld/text2sql-data/data/geography-db.sql/203	 Dump completed on 2017-04-12 17:54:35	Notice
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/17	 Formerly Pollster  Notice
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/18	 Formerly LogShaming    Notice
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/111	Holds the database that's currently being processed Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/112	Used for TRY/CATCH  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/115	Used for RAISERROR  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/116	Used to hold the RPO value in our configuration table   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/118	Used to hold the backup path in our configuration table Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/119	Config table: Y = escalate to full backup, MSDB = escalate if MSDB history doesn't show a recent full.  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/120	Config table: Y = encrypt the backup. N (default) = do not encrypt. Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/121	Config table: native 2014 choices include TRIPLE_DES_3KEY, AES_128, AES_192, AES_256    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/122	Config table: server certificate that is used to encrypt the backup Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/123	Used to hold the base backup path in our configuration table    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/124	Used to hold the full backup path in our configuration table    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/125	Used to hold the log backup path in our configuration table Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/126	Used to hold the dynamic SQL to create msdbCentral  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/127	Used to hold the dynamic SQL that creates tables in msdbCentral Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/128	Used to hold the name of the database we create to centralize data  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/129	Right now it's hardcoded to msdbCentral, but I made it dynamic in case that changes down the line   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/130	Holds dir cmd   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/131	Where we dump @cmd  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/132	We use this one Notice
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/137	\n\nMake sure we're doing something\n\n Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/156	\nMake sure xp_cmdshell is enabled\n    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/166	\nMake sure Ola Hallengren's scripts are installed in master\n  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/176	\nMake sure sp_DatabaseRestore is installed in master\n Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/206	 If they passed in a dynamic **DATABASENAME**, stop at that folder looking for databases. More info: https://github.com/BrentOzarULTD/SQL-Server-First-Responder-Kit/issues/993     Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/221	 No instance installed  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/237	 IF CHARINDEX('**', @restore_path_base) <> 0    Code
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/239	 IF @PollDiskForNewDatabases = 1 OR @Restore = 1    Code					
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/415	 Check to make sure job is still enabled    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/454	\n\nThis section runs in a loop checking restore path for new databases added to the server, or broken restores\n\n Functional-Method
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/477	\n					\n					Look for new non-system databases -- there should probably be additional filters here for accessibility, etc.\n\n	    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/617	\n						\n						Wait 1 minute between runs, we don't need to be checking this constantly\n						\n  Notice
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/623	 Check to make sure job is still enabled    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/688	\n			\n			Make sure configuration table exists...\n			\n  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/700	\n			\n			These settings are configurable\n	\n			I haven't found a good way to find the default backup path that doesn't involve xp_regread\n			\n  Notice
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/773	\n			\n			Start loop to take log backups\n\n  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/789	\n								\n								This grabs a database for a worker to work on\n\n								The locking hints hope to provide some isolation when 10+ workers are in action\n								\n  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/802	This section works on databases already part of the backup cycle    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/806	 negative numbers indicate human attention required Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/810	This section picks up newly added databases by Pollster Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/815	 negative numbers indicate human attention required     Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/826	\n								\n										Update the worker table so other workers know a database is being backed up\n								\n  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/847	\n						\n						Do I need to build retry logic in here? Try to catch deadlocks? I don't know yet!\n						\n  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/866	 If we don't find a database to work on, wait for a few seconds Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/873	 Check to make sure job is still enabled    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/895	\n							\n							Make sure we have a database to work on -- I should make this more robust so we do something if it is NULL, maybe\n							\n  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/907	\n										\n										Call Ola's proc to backup the database\n										\n  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/914	Database we're working on   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/915	Going for the LOGs  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/916	The path we need to back up to  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/917	We don't want to verify these, it eats into job time    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/918	If we need to switch to a FULL because one hasn't been taken    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/919	These are a good idea   Notice
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/920	This is usually a good idea Notice
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/921	We should do this for posterity Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/927	Database we're working on   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/928	Going for the LOGs  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/929	The path we need to back up to  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/930	We don't want to verify these, it eats into job time    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/931	If we need to switch to a FULL because one hasn't been taken    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/937	\n										\n										Catch any erroneous zones\n										\n  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/947	End call to dbo.DatabaseBackup  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/949	End successful check of @database (not NULL)    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/957	\n						\n						If the ERROR() function returns a number, update the table with it and the last error date.\n\n						Also update the last start time to 1900-01-01 so it gets picked back up immediately -- the query to find a log backup to take sorts by start time\n\n   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/984	\n								\n								Set @database back to NULL to avoid variable assignment weirdness\n								\n  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/993	\n										\n										Wait around for a second so we're not just spinning wheels -- this only runs if the BEGIN CATCH is triggered by an error\n\n    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1009	\n						\n					If no error, update everything normally\n						\n  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1032	\n								\n							Set @database back to NULL to avoid variable assignment weirdness\n								\n  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1073	 Check to make sure backup jobs aren't enabled  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1089	\n			\n			Make sure configuration table exists...\n			\n  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1101	\n			\n			These settings are configurable\n			\n  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1134	\n			\n			Start loop to restore log backups\n\n   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1150	\n								\n								This grabs a database for a worker to work on\n\n								The locking hints hope to provide some isolation when 10+ workers are in action\n								\n  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1171	This section works on databases already part of the backup cycle    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1175	 negative numbers indicate human attention required Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1178	This section picks up newly added databases by DiskPollster Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1194	\n								\n										Update the worker table so other workers know a database is being restored\n								\n  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1215	\n						\n						Do I need to build retry logic in here? Try to catch deadlocks? I don't know yet!\n						\n  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1234	 If we don't find a database to work on, wait for a few seconds Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1241	 Check to make sure backup jobs aren't enabled  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1253	 Check to make sure job is still enabled    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1274	\n							\n							Make sure we have a database to work on -- I should make this more robust so we do something if it is NULL, maybe\n							\n  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1291	\n										\n										Call sp_DatabaseRestore to backup the database\n										\n  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1341	\n										\n										Catch any erroneous zones\n										\n  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1361	\n						\n						If the ERROR() function returns a number, update the table with it and the last error date.\n\n						Also update the last start time to 1900-01-01 so it gets picked back up immediately -- the query to find a log restore to take sorts by start time\n\n  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1388	\n								\n								Set @database back to NULL to avoid variable assignment weirdness\n								\n  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1397	\n										\n										Wait around for a second so we're not just spinning wheels -- this only runs if the BEGIN CATCH is triggered by an error\n\n    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1414	\n						\n					If no error, update everything normally\n						\n  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1425	 Make sure database actually exists and is in the restoring state   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1426	 Restoring  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1439	 The database doesn't exist, or it's not in the restoring state Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1447	 unknown, human attention required  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1449	 rw.last_log_restore_finish_time = GETDATE()    don't change this - the last log may still be successful    Code
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1456	\n								\n							Set @database back to NULL to avoid variable assignment weirdness\n								\n  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1630	 IF @Help = 1   Code
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1632	Holds the database that's currently being processed Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1633	Used for TRY/CATCH  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1636	Used for RAISERROR  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1637	Used to hold the RPO value in our configuration table   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1638	Used to hold the backup path in our configuration table Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1639	Used to hold the dynamic SQL to create msdbCentral  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1640	Used to hold the dynamic SQL that creates tables in msdbCentral Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1641	Used to hold the name of the database we create to centralize data  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1642	Right now it's hardcoded to msdbCentral, but I made it dynamic in case that changes down the line   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1645	These variables control the loop to create/modify jobs  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1646	Used to hold the dynamic SQL that creates Agent jobs    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1647	For looping to create 10 Agent jobs Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1648	Job category    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1649	 Admin user/owner   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1650	 list of jobs we need to enable or disable  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1651	 While looping through Agent jobs to enable or disable  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1653	We need to wait for a while when disabling jobs Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1655	Specifically for Backups    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1656	Name of log backup job  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1657	Job description Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1658	Command the Agent job will run  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1660	Specifically for Restores   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1661	Name of log backup job  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1662	Job description Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1663	Command the Agent job will run  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1666	\n\nSanity check some variables\n\n Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1685	\n\nShould be a positive number\n\n Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1700	\n\nProbably shouldn't be more than 20\n\n  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1714	\n\nProbably shouldn't be more than 4 hours\n\n Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1729	\n\nCan't enable both the backup and restore jobs at the same time\n\n  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1743	\nMake sure xp_cmdshell is enabled\n    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1753	\nMake sure Ola Hallengren's scripts are installed in master\n  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1763	\nMake sure sp_DatabaseRestore is installed in master\n Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1773	\n\nBasic path sanity checks\n\n    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1779	Local path, don't think anyone has A or B drives    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1780	UNC path    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1788	\n\nIf you want to update the table, one of these has to not be NULL\n\n    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1822	\n				\n				First check to see if Agent is running -- we'll get errors if it's not\n				\n  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1856	\n						\n						Check to see if the database exists\n\n Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/1896	\n						\n						Check for tables and stuff\n\n  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/2035	\n						\n						This section creates tables for restore workers to work off of\n						\n  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/2042	 \n						\n						In search of msdb \n						\n  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/2061	 In search of restore_configuration Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/2141	\n		\n		Add Jobs\n		\n  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/2149	\n		\n		Look for our ten second schedule -- all jobs use this to restart themselves if they fail\n\n		Fun fact: you can add the same schedule name multiple times, so we don't want to just stick it in there\n		\n  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/2188	\n			\n			Look for Backup Pollster job -- this job sets up our watcher for new databases to back up\n			\n  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/2256	\n			\n			Look for Restore Pollster job -- this job sets up our watcher for new databases to back up\n			\n  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/2326	\n				\n				This section creates @Jobs (quantity) of worker jobs to take log backups with\n\n				They work in a queue\n\n				It's queuete\n				\n  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/2422	\n				\n				This section creates @Jobs (quantity) of worker jobs to restore logs with\n\n				They too work in a queue\n\n				Like a queue-t 3.14\n				\n  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/2541	 IF @RunSetup = 1   Code
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/2552	 If we're enabling backup jobs, we may need to run restore with recovery on msdbCentral to bring it online: Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/2577	 Only check for this after trying to restore msdbCentral:   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/2681	 If they wanted to turn off restore jobs, wait to make sure that finishes before we start enabling the backup jobs  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/2707	 Wait until the restore jobs are fully stopped  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/2722	 IF @EnableRestoreJobs = 0  Code
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/2931	 IF @OutputType = 'SCHEMA'  Code
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/2963	 Flag for Windows OS to help with Linux support Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/2966	 For First Responder Kit consistency check: Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3002	 Last startup   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3010	 \n		Set the session state of Numeric_RoundAbort to off if any databases have Numeric Round-Abort enabled.  \n		Stops arithmetic overflow errors during data conversion. See Github issue #2302 for more info.\n    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3014	 Numeric RoundAbort is currently on, so we may need to turn it off temporarily  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3018	 A database has it turned on    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3028	\n		--TOURSTOP01--\n		See https://www.BrentOzar.com/go/blitztour for a guided tour.\n\n		We start by creating #BlitzResults. It's a temp table that will store all of\n		the results from our checks. Throughout the rest of this stored procedure,\n		we're running a series of checks looking for dangerous things inside the SQL\n		Server. When we find a problem, we insert rows into #BlitzResults. At the\n		end, we return these results to the end user.\n\n		#BlitzResults has a CheckID field, but there's no Check table. As we do\n		checks, we insert data into this table, and we manually put in the CheckID.\n		For a list of checks, visit http://FirstResponderKit.org.\n Functional-Method
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3066	 First Responder Kit consistency (temporary tables) Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3073	 this one represents FRK objects    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3089	 This one will contain the statements to be executed\n order: 1- Mandatory, 2- VersionCheckMode, 3- VersionCheck    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3107	\n		You can build your own table with a list of checks to skip. For example, you\n		might have some databases that you don't care about, or some checks you don't\n		want to run. Then, when you run sp_Blitz, you can specify these parameters:\n		@SkipChecksDatabase = 'DBAtools',\n		@SkipChecksSchema = 'dbo',\n		@SkipChecksTable = 'BlitzChecksToSkip'\n		Pass in the database, schema, and table that contains the list of checks you\n		want to skip. This part of the code checks those parameters, gets the list,\n		and then saves those in a temp table. As we run each check, we'll see if we\n		need to skip it.\n\n		Really anal-retentive users will note that the @SkipChecksServer parameter is\n		not used. YET. We added that parameter in so that we could avoid changing the\n		stored proc's surface area (interface) later.\n Functional-Method
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3148	 Flag for Windows OS to help with Linux support Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3169	 Set the trace file path separator based on underlying OS   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3185	 If the server has any databases on Antiques Roadshow, skip the checks that would break due to CTEs.    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3210	 If the server is Amazon RDS, skip checks that it doesn't allow Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3257	 Amazon RDS skipped checks  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3259	 If the server is ExpressEdition, skip checks that it doesn't allow Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3281	 Express Edition skipped checks Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3283	 If the server is an Azure Managed Instance, skip checks that it doesn't allow  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3286	 /* Full backups - because of the MI GUID name bug mentioned here: https://github.com/BrentOzarULTD/SQL-Server-First-Responder-Kit/issues/1481 */   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3287	 /* Log backups - because of the MI GUID name bug mentioned here: https://github.com/BrentOzarULTD/SQL-Server-First-Responder-Kit/issues/1481 */    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3288	 /* Security - Jobs Owned By Users per https://github.com/BrentOzarULTD/SQL-Server-First-Responder-Kit/issues/1919 */   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3289	 /* Informational - Database Encrypted per https://github.com/BrentOzarULTD/SQL-Server-First-Responder-Kit/issues/1919 */   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3290	 /* File Configuration - System Database on C Drive per https://github.com/BrentOzarULTD/SQL-Server-First-Responder-Kit/issues/1919 */  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3291	 /* Max Server Memory Set Too High - because they max it out */ Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3292	 /* Security - Database Owner <> sa per https://github.com/BrentOzarULTD/SQL-Server-First-Responder-Kit/issues/1919 */  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3293	 /* TraceFlag On - because Azure Managed Instances go wild and crazy with the trace flags */    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3294	 /* Unusual SQL Server Edition */   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3295	 /* Remote DAC disabled - but it's working anyway, details here: https://github.com/BrentOzarULTD/SQL-Server-First-Responder-Kit/issues/1481 */ Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3296	 /* MSDB Backup History Purged Too Frequently */    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3297	 /* Default trace, details here: https://github.com/BrentOzarULTD/SQL-Server-First-Responder-Kit/issues/1481 */ Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3298	 /*Power Plan */    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3317	 Azure Managed Instance skipped checks  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3574	 Have they cleared wait stats? Using a 10% fudge factor Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3600	 @CpuMsSinceWaitsCleared is used for waits stats calculations   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3607	 If we're outputting CSV or Markdown, don't bother checking the plan cache because we cannot export plans.  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3611	 If we're posting a question on Stack, include background info on the server    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3615	 Only run CheckUserDatabaseObjects if there are less than 50 databases. Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3637	 Sanitize our inputs    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3644	 Get the major and minor build numbers  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3652	\n		Whew! we're finally done with the setup, and we can start doing checks.\n		First, let's make sure we're actually supposed to do checks on this server.\n		The user could have passed in a SkipChecks table that specified to skip ALL\n		checks on this server, so let's check for that:\n   Functional-Method
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3666	\n				Our very first check! We'll put more comments in this one just to\n				explain exactly how it works. First, we check to see if we're\n				supposed to skip CheckID 1 (that's the check we're working on.)\n   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3676	\n						Below, we check master.sys.databases looking for databases\n						that haven't had a backup in the last week. If we find any,\n						we insert them into #BlitzResults, the temp table that\n						tracks our server's problems. Note that if the check does\n						NOT find any problems, we don't save that. We're only\n						saving the problems, not the successful checks.\n   Functional-Method
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3687	 Azure Managed Instances need a special query   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3709	Backupset ran on current server Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3711	 Not currently offline or restoring, like log shipping databases    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3712	 Not a log shipping target database Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3713	 Excludes database snapshots    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3718	\n										    The above NOT IN filters out the databases we're not supposed to check.\n   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3727	 SERVERPROPERTY('EngineName') must be 8, Azure Managed Instances    Functional-Inline					
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3778	\n				And that's the end of CheckID #1.\n\n				CheckID #2 is a little simpler because it only involves one query, and it's\n				more typical for queries that people contribute. But keep reading, because\n				the next check gets more complex again.\n   Functional-Method
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3829	\n				Next up, we've got CheckID 8. (These don't have to go in order.) This one\n				won't work on SQL Server 2005 because it relies on a new DMV that didn't\n				exist prior to SQL Server 2008. This means we have to check the SQL Server\n				version first, then build a dynamic string with the query we want to run:\n Functional-Method
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3865	\n				But what if you need to run a query in every individual database?\n				Hop down to the @CheckUserDatabaseObjects section.\n\n				And that's the basic idea! You can read through the rest of the\n				checks if you like - some more exciting stuff happens closer to the\n				end of the stored proc, where we start doing things like checking\n				the plan cache, but those aren't as cleanly commented.\n\n				If you'd like to contribute your own check, use one of the check\n				formats shown above and email it to Help@BrentOzar.com. You don't\n				have to pick a CheckID or a link - we'll take care of that when we\n				test and publish the code. Thanks!\n    Functional-Method
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/3908	 Filter out databases that were recently restored:  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/4557	\n				Believe it or not, SQL Server doesn't track the default values\n				for sp_configure options! We'll make our own list here.\n   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/4652	 Accepting both 0 and 16 below because both have been seen in the wild as defaults. Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/4691	 SQL Server 2012 changes a configuration default    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/4808	 Let's set variables so that our query is still SARGable    Functional-Inline 
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/4820	 If Cost Threshold for Parallelism is default then flag as a potential issue    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/4821	 If MAXDOP is default and processors > 8 or NUMA nodes > 1 then flag as potential issue Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/5195	check for alerts that do NOT include event descriptions in their outputs via email/pager/net-send   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/5225	bitmask: 1 = email, 2 = pager, 4 = net send Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/5229	check whether we have NO ENABLED operators! Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/5925	 Exclude SSRS category  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/6377	AND @ProductVersionMinor < 6000 Code
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/6378	AND @ProductVersionMinor < 6000 Code
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/6379	AND @ProductVersionMinor <= 5000    Code
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/6439	 Check if SQL 2016 Standard Edition but not SP1 Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/6457	 Check if SQL 2017 but not CU3  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/6475	 Cumulative Update Available    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/6479	 Azure Managed Instances and Azure SQL DB   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/6494	 Performance - High Memory Use for In-Memory OLTP (Hekaton) Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/6524	 Performance - In-Memory OLTP (Hekaton) In Use  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/6553	 In-Memory OLTP (Hekaton) - Transaction Errors  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/6649	 Reliability - Errors Logged Recently in the Default Trace  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/6651	 First, let's check that there aren't any issues with the trace files   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/6762	 Removed these as they're unnecessary, we filter this when inserting data into #fnTraceGettable Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/6763	AND t.Severity >= 17    Code
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/6764	AND t.StartTime > DATEADD(dd, -30, GETDATE());  Code
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/6796	AND t.StartTime > DATEADD(dd, -30, GETDATE())   Code
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/6797	AND t.Duration > 15000000   Code
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/6916	 Populate a list of database defaults. I'm doing this kind of oddly -\n						    it reads like a lot of work, but this way it compiles & runs on all\n						    versions of SQL Server.\n   Functional-Method
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/6933	 RCSI is always enabled in Azure SQL DB per https://github.com/BrentOzarULTD/SQL-Server-First-Responder-Kit/issues/1919 Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/6965	 Not alerting for this since we actually want it and we have a separate check for it:\n						INSERT INTO #DatabaseDefaults\n						  SELECT 'is_query_store_on', 0, 139, 210, 'Query Store Enabled', 'https://BrentOzar.com/go/dbdefaults', NULL\n						  FROM sys.all_columns\n						  WHERE name = 'is_query_store_on' AND object_id = OBJECT_ID('sys.databases');\n    Functional-Method
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/6991	 Hekaton is always enabled in Managed Instances per https://github.com/BrentOzarULTD/SQL-Server-First-Responder-Kit/issues/1919 Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/7004	 Target Recovery Time (142) can be either 0 or 60 due to a number of bugs   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/7028	This checks to see if Agent is Offline  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/7066	This checks to see if the Full Text thingy is offline   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/7103	This checks which service account SQL Server is running as. Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/7142	This checks which service account SQL Agent is running as.  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/7180	This checks that First Responder Kit is consistent. \nIt assumes that all the objects of the kit resides in the same database, the one in which this SP is stored\nIt also is ready to check for installation in another schema.\n  Functional-Method
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/7277	 TODO: add check for statement success  ToDo
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/7279	 TODO: based on SP requirements and presence (SchemaName is not null) ==> update MandatoryComponent column  ToDo
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/7331	 loop on queries... Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/7347	 in case of schema change   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/7358	 we start a new component   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/7364	 reset variables    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/7391	 we will stop the test because it's possible to get the same message for other components   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/7398	 outputs counter    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/7447	 as it's missing, no value for SubjectFullPath  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/7656	 Kept for debug purpose:\n            ELSE \n            BEGIN\n                INSERT  INTO #BlitzResults( \n                    CheckID ,\n                    Priority ,\n                    FindingsGroup ,\n                    Finding ,\n                    URL ,\n                    Details\n                )\n                SELECT \n                    2000 AS CheckID ,\n                    250 AS Priority ,\n                    'Informational' AS FindingsGroup ,\n                    'First Responder kit component ' + @CurrentComponentFullName + ' is at the expected version' AS Finding ,\n                    'https://www.BrentOzar.com/blitz/' AS URL ,\n                    'Version date is: ' + CONVERT(VARCHAR(32),@CurrentComponentVersionDate,121) AS Details\n                ;\n            END;\n    Code
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/7679	 could be performed differently to minimize computation Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/7685	This counts memory dumps and gives min and max date of in view  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/7687	 Skip due to crash bug: https://support.microsoft.com/en-us/help/2908087    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/7731	Checks to see if you're on Developer or Evaluation  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/7762	Checks to see if Buffer Pool Extensions are in use  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/7801	Check for too many tempdb files Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/7874	Harmful startup parameter   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/7938	 McAfee VirusScan Enterprise    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/7939	 McAfee Host Intrusion  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/7940	 Sophos AV  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/7941	 OSISoft PI data access     Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/7945	Find shrink database tasks  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/7950	 Only run on 2008+  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/7958	 ID required to link maintenace plan with jobs and jobhistory (sp_Blitz Issue #776) Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/7973	 Job has history and was executed in the last 30 days   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/7976	 no job history (implicit) AND job not run in the past 30 days AND (Job disabled OR Job Schedule disabled)  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/8000	 get the latest entry date  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/8001	 get the latest entry time  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/8006	Find repetitive maintenance tasks   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/8107	Perf - Odd number of cores in a socket  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/8164	Grab relevant event data    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/8174	This replaces everything up to an open paren, if one exists.    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/8182	This replaces any optional WITH clause to a DBCC command, like tableresults.    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/8207	Overall count of DBCC events excluding silly stuff  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/8232	 This WHERE clause below looks horrible, but it's because users can run stuff like\n			   DBCC     LOGINFO\n			   with lots of spaces (or carriage returns, or comments) in between the DBCC and the\n			   command they're trying to run. See Github issues 1062, 1074, 1075.\n Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/8277	Check for someone running drop clean buffers    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/8308	Check for someone running free proc cache   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/8339	Check for someone clearing wait stats   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/8370	Check for someone writing to pages. Yeah, right?    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/8680	 Thanks Michaels3 for catching this General
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/8691	\n                        But what if you need to run a query in every individual database?\n				        Check out CheckID 99 below. Yes, it uses sp_MSforeachdb, and no,\n				        we're not happy about that. sp_MSforeachdb is known to have a lot\n				        of issues, like skipping databases sometimes. However, this is the\n				        only built-in option that we have. If you're writing your own code\n				        for database maintenance, consider Aaron Bertrand's alternative:\n				        http://www.mssqltips.com/sqlservertip/2201/making-a-more-reliable-and-flexible-spmsforeachdb/\n				        We don't include that as part of sp_Blitz, of course, because\n				        copying and distributing copyrighted code from others without their\n				        written permission isn't a good idea.\n Functional-Method
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/8712	\n				        Note that by using sp_MSforeachdb, we're running the query in all\n				        databases. We're not checking #SkipChecks here for each database to\n				        see if we should run the check in this database. That means we may\n				        still run a skipped check if it involves sp_MSforeachdb. We just\n				        don't output those results in the last step.\n  Functional-Method
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/8873	 addition by Henrik Staun Poulsen, Stovi Software   General
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/8936	 Method 1: Check sys.databases parameters   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/8968	 Method B: check subscribers for MSreplication_objects tables   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/9330	Check for non-aligned indexes in partioned databases    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/9443	 SQL Server 2012 and newer uses temporary stats for Availability Groups, and those show up as user-created  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/9492	Check for high VLF count: this will omit any database snapshots Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/9608	 Non-Default Database Scoped Config - Github issue #598 Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/9632	 Check 218 - Show me the dodgy SET Options  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/9669	 Check 225 - Reliability - Resumable Index Operation Paused Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/9780	 Set up the cache tables. Different on 2005 since it doesn't support query_hash, query_plan_hash.   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/9906	 Populate the query_plan_filtered field. Only works in 2005SP2+, but we're just doing it in 2008 to be safe.    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/9917	 Populate the additional query_plan, text, and text_filtered fields Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/9936	 Dump instances of our own script. We're not trying to tune ourselves.  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/9941	 Look for implicit conversions  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/10036	 Look for missing indexes   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/10067	 Look for cursors   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/10098	 Look for scalar user-defined functions Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/10133	Check to see if the HA endpoint account is set at the same as the SQL Server Service Account    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/10164	Check for the last good DBCC CHECKDB date   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/10228	Verify that the servername is set   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/10254	 @@SERVERNAME IS set    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/10257	 not a named instance   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/10260	 not clustered, when computername may be different than the servername  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/10263	 @@SERVERNAME is different than the computer name   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/10286	Check to see if a failsafe operator has been configured Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/10326	Identify globally enabled trace flags   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/10368	 High CMEMTHREAD waits that could need trace flag 8048.\n               This check has to be run AFTER the globally enabled trace flag check,\n               since it uses the #TraceStatus table to know if flags are enabled.\n  Functional-Method
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/10407	Check for transaction log file larger than data file    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/10439	 Size is measured in pages here, so this gets us log files over 1GB.    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/10451	Check for collation conflicts between user databases and tempdb     Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/10542	 Job has history and was executed in the last 30 days OR Job is enabled AND Job Schedule is enabled Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/10545	 no job history (implicit) AND job not run in the past 30 days AND (Job disabled OR Job Schedule disabled)  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/10630	This checks Windows version. It would be better if Microsoft gave everything a separate build number, but whatever. Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/10677	 Otherwise, stick with Windows-only detection   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/10717	\nThis check hits the dm_os_process_memory system view\nto see if locked_page_allocations_kb is > 0,\nwhich could indicate that locked pages in memory is enabled.\n    Functional-Method
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/10755	 Server Info - Locked Pages In Memory Enabled - Check 166 - SQL Server 2016 SP1 and newer   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/10783	\n			Starting with SQL Server 2014 SP2, Instant File Initialization\n			is logged in the SQL Server Error Log.\n    Functional-Method
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/10816	 Server Info - Instant File Initialization Not Enabled - Check 192 - SQL Server 2016 SP1 and newer  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/10879	 DATETIMEOFFSET and DATETIME have different minimum values, so there's\n a small workaround here to force 1753-01-01 if the minimum is detected Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/11177	 Get power plan if set by group policy [Git Hub Issue #1620]    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/11183	 If power plan was not set by group policy, get local value [Git Hub Issue #1620]   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/11307	 Check for waits that have had more than 10% of the server's wait time  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/11335	 CAST(CAST(\n														100.* SUM(os.wait_time_ms) OVER (PARTITION BY os.wait_type)\n   Code													/ (1. * SUM(os.wait_time_ms) OVER () )\n														AS NUMERIC(18,1)) AS NVARCHAR(40)) + N'% of waits, ' + 
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/11353	 IF EXISTS (SELECT * FROM sys.dm_os_wait_stats WHERE wait_time_ms > 0 AND waiting_tasks_count > 0)  Code
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/11355	 If no waits were found, add a note about that  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/11459	 Azure SQL Database doesn't have sys.master_files, so we have to build our own. Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/11491	 Delete priorites they wanted to skip.  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/11500	 Delete checks they wanted to skip. Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/11518	 Add summary mode   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/11590	 Database mail won't work off a local temp table. I'm not happy about this hacky workaround either.     Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/11627	 Checks if @OutputServerName is populated with a valid linked server, and that the database name specified is valid     Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/11682	 @OutputTableName lets us export the results to a permanent table   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/11848	 Specifically excluding security checks for public exports  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/11958	\n	Reset the Nmumeric_RoundAbort session state back to enabled if it was disabled earlier. \n	See Github issue #2302 for more info.\n Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/11968	\n--Sample execution call with the most common parameters:\nEXEC [dbo].[sp_Blitz] \n    @CheckUserDatabaseObjects = 1 ,\n    @CheckProcedureCache = 0 ,\n    @OutputType = 'TABLE' ,\n    @OutputProcedureCache = 0 ,\n    @CheckProcedureCacheFilter = NULL,\n    @CheckServerInfo = 1\n   Code
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/12373	 Find the most recent full backups for those logs   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/12409	 Add any full backups in the StartDate range that weren't part of the above log backup chain    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/12431	 Fill out the most recent log for that full, but before the next full   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/12454	 Fill out a diff in that range  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/12477	 Get time & size totals for full & diff     Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/12501	 Get time & size totals for logs    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/12581	Populating Recoverability   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/12584	Get distinct list of databases  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/12594	Recoverability ( DatabaseName, DatabaseGUID )   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/12598	Find most recent recovery model, backup size, and backup date   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/12622	Find first backup size and date Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/12646	Find average backup throughputs for full, diff, and log Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/12701	Find max and avg diff and log sizes Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/12743	Trending - only works if backupfile is populated, which means in msdb EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/12812	Looking for out of band backups by finding most common backup operator user_name and noting backups taken by other user_names   Functional-Method
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/12845	Looking for compatibility level changing. Only looking for databases that have changed more than twice (It''s possible someone may have changed up, had CE problems, and then changed back) Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/12865	Looking for password protected backups. This hasn''t been a popular option ever, and was largely replaced by encrypted backups, but it''s simple to check for.  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/12885	Looking for snapshot backups. There are legit reasons for these, but we should flag them so the questions get asked. What questions? Good question. Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/12905	It''s fine to take backups of read only databases, but it''s not always necessary (there''s no new data, after all).    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/12925	So, I''ve come across people who think they need to change their database to single user mode to take a backup. Or that doing that will help something. I just need to know, here.  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/12945	C''mon, it''s 2017. Take your backups with CHECKSUMS, people.   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/12966	Damaged is a Black Flag album. You don''t want your backups to be like a Black Flag album.  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/12986	Checking for encrypted backups and the last backup of the encryption key.   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/13018	Looking for backups that have BULK LOGGED data in them -- this can screw up point in time LOG recovery. Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/13038	Looking for recovery model being switched between FULL and SIMPLE, because it''s a bad practice.    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/13059	Looking for uncompressed backups.   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/13104	Insert thank you stuff last Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/13243	Checking for and creating the PK/CX Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/13272	Checking for and creating index on backup_set_uuid  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/13299	Checking for and creating index on media_set_id Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/13326	Checking for and creating index on backup_finish_date   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/13353	Checking for and creating index on database_name    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/13386	\n		Batching code comes from the lovely and talented Michael J. Swart\n		http://michaeljswart.com/2014/09/take-care-when-scripting-batches/\n		If you're ever in Canada, he says you can stay at his house, too.\n Functional-Method
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/13606	The Memory Grant columns are only supported \n		  in certain versions, giggle giggle.\n Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/13621	 these next four columns are the total for the type of query.\n            don't actually use them for anything apart from math by type.\n  Notice 
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/13967	 Column definitions Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/14201	 Configuration table description    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/14239	Validate version    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/14255	 If they want to sort by query hash, populate the @OnlyQueryHashes list for them    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/14280	 When they ran it, @SortOrder probably looked like 'query hash, cpu', so strip the first sort order out:    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/14283	 If they just called it with @SortOrder = 'query hash', set it to 'cpu' for backwards compatibility:    Functional-Inline        
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/14555	 Change duration from seconds to milliseconds   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/15088	SELECT CAST(SUBSTRING(@individual, 1, 2) AS BINARY(8)); Code
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/15102	SELECT CAST(SUBSTRING(@individual, 1, 2) AS VARBINARY(MAX)) ;   Code
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/15193	 If the user is attempting to limit by query hash, set up the\n   #only_query_hashes temp table. This will be used to narrow down\n   results.\n\n   Just a reminder: Using @OnlyQueryHashes will ignore stored\n   procedures and triggers.\n  Functional-Method
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/15236	 If the user is setting up a list of query hashes to ignore, those\n   values will be inserted into #ignore_query_hashes. This is used to\n   exclude values from query results.\n\n   Just a reminder: Using @IgnoreQueryHashes will ignore stored\n   procedures and triggers.\n  Functional-Method
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/15412	 end filtering for query hashes     Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/15435	 Apply the sort order here to only grab relevant plans.\n   This should make it faster to process since we'll be pulling back fewer\n   plans for processing.\n Functional-Method
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/15449	 And now the averages   Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/16006	 Compute the total CPU, etc across our active set of the plan cache.\n * Yes, there's a flaw - this doesn't include anything outside of our @Top\n * metric.\n  Functional-Method
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/16029	 Update CPU percentage for stored procedures    Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/16038	 Strip newlines and tabs. Tabs are replaced with multiple spaces\n           so that the later whitespace trim will completely eliminate them\n Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/16149	 Testing using XML nodes to speed up processing Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/16193	 high level plan stuff  Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/16210	 query level checks Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/16229	 statement level checks Functional-Inline
EN	SQL	BrentOzarULTD/SQL-Server-First-Responder-Kit	Install-All-Scripts.sql	BrentOzarULTD/SQL-Server-First-Responder-Kit/Install-All-Scripts.sql/16360	Gather costs    Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/CTASLoad-Example.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/CTASLoad-Example.sql/1	 STEP 1: Create a master key. Only necessary if one does not already exist.Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/CTASLoad-Example.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/CTASLoad-Example.sql/5	 STEP 2: Create a database scoped credential	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/CTASLoad-Example.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/CTASLoad-Example.sql/6	 Azure Data Lake Credential	General
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/CTASLoad-Example.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/CTASLoad-Example.sql/11	 Blob Storage Credential\nCREATE DATABASE SCOPED CREDENTIAL AzureCredential \nWITH IDENTITY = 'SHARED ACCESS SIGNATURE', \n	 SECRET = 'your key here';\n	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/CTASLoad-Example.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/CTASLoad-Example.sql/17	 STEP 3: Create an external data source - type HADOOP for ADLS	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/CTASLoad-Example.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/CTASLoad-Example.sql/22	 Blob Storage Data Source - wabs syntax with Hadoop type\nCREATE EXTERNAL DATA SOURCE AzureStorage\nWITH (TYPE = HADOOP, LOCATION = 'wasbs://container@storageacct.blob.core.windows.net',\n      CREDENTIAL = AzureCredential);\n	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/CTASLoad-Example.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/CTASLoad-Example.sql/28	 STEP 4: Create an external file format	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/CTASLoad-Example.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/CTASLoad-Example.sql/31	 DATE_FORMAT = 'yyyy-MM-dd HH:mm:ss.fff',	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/CTASLoad-Example.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/CTASLoad-Example.sql/37	 STEP 5: Create external table pointing to blob storage files	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/CTASLoad-Example.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/CTASLoad-Example.sql/55	 STEP 6: Create Table As Select (CTAS) operation - invokes Polybase to pull information out of one or more text files in ADLS into DW tables\nnote you need to split the input text files to take advantage of parallel load on the compute nodes	Functional-Method
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/7	 ensure your data warehouse has a master key	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/8	 CREATE MASTER KEY;	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/10	 Use your blob storage key to provide SQL DW access to blob storage	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/14	 Create the file format definition	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/16	STRING_DELIMITER = '',	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/23	 Ensure target schema exists	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/30	 Check external table schema exists	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/34	 cleanup of any previous failed run	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/36	tables Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/38	columns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/40	tables	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/48	columns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/60	 Set up to process all tables in the defined source schema	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/61	tables	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/66	tables	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/68	select * from #tables	Code
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/70	 initial cleanup of any previous run - if an external table still exists, you will have to drop it first	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/74	tables where rowid=@trow	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/78	 save start time	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/81	 create the external data source	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/87	 clear all rows in columns temp table (for previous table)	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/88	columns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/90	 get all the column definitions for the target table	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/91	columns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/98	 build external table definition	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/101	 process each column for the target table	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/102	columns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/104	columns where colid=@crow	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/117	columns where colid=@crow	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/123	 statements can exceed the capacity of a single print	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/129	 get the distribution mechanism and column for the target table	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/133	 remove target table if it already exists Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/140	 build simple CTAS statement (since column type and nullability done in external table)	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/147	 Cleanup external objects	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/155	 Output row count and elapsed load time for the current table	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/159	 Increment to the next table	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/161	tables where rowid=@trow	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/163	tables	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/164	columns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/7	 ensure your data warehouse has a master key	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/8	 CREATE MASTER KEY;	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/10	 Use your blob storage key to provide SQL DW access to blob storage	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/14	 Create the file format definition	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/16	STRING_DELIMITER = '', 	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/23	 Ensure target schema exists	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/29	 Check external table schema exists	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/33	 cleanup of any previous failed run	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/35	tables	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/37	columns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/39	tables	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/47	columns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/59	 Set up to process all tables in the defined source schema	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/60	tables	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/65	tables	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/67	select * from #tables	Code
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/69	 initial cleanup of any previous run - if an external table still exists, you will have to drop it first	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/73	tables where rowid=@trow	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/77	 save start time	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/80	 create the external data source	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/86	 clear all rows in columns temp table (for previous table)	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/87	columns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/89	 get all the column definitions for the target table	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/90	columns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/97	 build external table definition	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/100	 process each column for the target table	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/101	columns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/103	columns where colid=@crow	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/111	 handle null and add quotes (& embedded quotes)	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/113	 dates and times @ 50 - image, text, xml, hierarchy and spatial data types not supported on DW	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/115	columns where colid=@crow	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/121	 statements can exceed the capacity of a single print	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/127	 get the distribution mechanism and column for the target table	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/131	 remove target table if it already exists	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/138	 build CTAS statement - looping through all of the columns to do a cast to the appropriate data type	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/141	columns where colid=@crow	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/144	 remove lead and tail quotes	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/146	 if this column is not nullable we have to give SQL DW the hint to make it NOT NULL - in theory we should error if there is a text value of null in the field, but that is just more code...	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/148	 remove escaped quotes and replace special line end characters with line feed	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/162	 not sure any data types are left - if so, you need a null value for 'not null' instead of the 0	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/164	 add column name	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/166	columns where colid=@crow	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/178	 Cleanup external objects	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/185	 Output row count and elapsed load time for the current table	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/189	 Increment to the next table	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/191	tables where rowid=@trow	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/193	tables	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/194	columns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/8	 ensure your data warehouse has a master key	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/9	 CREATE MASTER KEY;	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/11	 Use your blob storage key to provide SQL DW access to blob storage	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/15	 Create the file format definition	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/17	STRING_DELIMITER = '', 	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/24	 Ensure target schema exists	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/30	 Check external table schema exists	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/34	 cleanup of any previous failed run	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/36	tables	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/38	columns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/40	tables	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/48	columns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/60	 Set up to process all tables in the defined source schema	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/61	tables	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/66	tables	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/68	select * from #tables Code
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/70	 initial cleanup of any previous run - if an external table still exists, you will have to drop it first Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/74	tables where rowid=@trow	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/76	 create the external data source (once - since all files are in "subfolders")	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/83	 save start time	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/86	 clear all rows in columns temp table (for previous table)	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/87	columns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/89	 get all the column definitions for the target table	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/90	columns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/97	 build external table definition	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/100	 process each column for the target table	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/101	columns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/103	columns where colid=@crow	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/111	 handle null and add quotes (& embedded quotes)	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/113	 dates and times @ 50 - image, text, xml, hierarchy and spatial data types not supported on DW	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/115	columns where colid=@crow	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/121	 statements can exceed the capacity of a single print	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/127	 get the distribution mechanism and column for the target table	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/131	 remove target table if it already exists	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/138	 build CTAS statement - looping through all of the columns to do a cast to the appropriate data type	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/141	columns where colid=@crow	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/144	 remove lead and tail quotes	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/146	 if this column is not nullable we have to give SQL DW the hint to make it NOT NULL - in theory we should error if there is a text value of null in the field, but that is just more code...	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/148	 remove escaped quotes and replace special line end characters with line feed	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/162	 not sure any data types are left - if so, you need a null value for 'not null' instead of the 0	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/164	 add column name	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/166	columns where colid=@crow	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/178	 Cleanup external objects	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/183	 Output row count and elapsed load time for the current table	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/187	 Increment to the next table	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/189	tables where rowid=@trow	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/191	tables	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/192	columns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddSPChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddSPChanges.sql/1	 Creating script to drop SP if it exists and recreate. Called from DeploySPChanges	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/1	 This script checks the source table meta data which has been staged to keep the taraget instance in sync 	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/5	 All tables currently in "production db"	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/6	Temp1 Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/19	Temp1);	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/22	 Looping through all tables in "production" and checking for deltas	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/26	 Current table in prod db and collecting all column names it should have based on source columns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/27	Temp1 WHERE number = @counter);	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/28	tempprodtablecolumns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/36	tempdevtablecolumns FROM sourceColumns WHERE tablename = @currentTable	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/38	 Find newly added columns not in "production" into temp table	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/39	addedcolumns FROM 	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/41	tempprodtablecolumns a	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/42	tempdevtablecolumns b ON a.name = b.colname) A WHERE missingcolumn is NULL;	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/44	tempprodtablecolumns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/45	tempdevtablecolumns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/46	addedcolumns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/48	 Clean up temp tables	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/49	tempprodtablecolumns;	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/50	tempdevtablecolumns;	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/59	addedcolumns);	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/64	 Loop through added columns and adding columns in "production" table	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/67	addedcolumns where number = @secondcounter);	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/68	addedcolumns where number = @secondcounter);	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/77	addedcolumns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/GetCreateStatement_Function_Proc_View.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/GetCreateStatement_Function_Proc_View.sql/3	 From the PS script we call, we extract the object_id as the parameter and get the DDL for Functions, Stored Precedures, and views	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/GetCreateStatement_Table.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/GetCreateStatement_Table.sql/3	 \n\nFrom the PS script, we extract the object_id to be used in this script for table metadata. This metadata \nwill be used arguments for an internal SP (usp_ConstructCreateStatementForTable) to create the DDL. Ensure\nthis SP already exists in your data warehouse.\n\n	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/usp_ConstructCreateStatementForTable.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/usp_ConstructCreateStatementForTable.sql/1	 \n\nSP executed to get the Table DDL for generate scripts. Called from GetCreateStatment_Tabls.sql. This \ndoes not take into account partitions\n\n	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/usp_ConstructCreateStatementForTable.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/usp_ConstructCreateStatementForTable.sql/25	 Construct the CREATE TABLE 	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/usp_ConstructCreateStatementForTable.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/usp_ConstructCreateStatementForTable.sql/28	 Construct the column definition	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/usp_ConstructCreateStatementForTable.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/usp_ConstructCreateStatementForTable.sql/43	 Extracting the column name/type	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/usp_ConstructCreateStatementForTable.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/usp_ConstructCreateStatementForTable.sql/58	 Construct the distribution clause by querrying for the distribution type/column	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/usp_ConstructCreateStatementForTable.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/usp_ConstructCreateStatementForTable.sql/60	 Distribution Type	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/usp_ConstructCreateStatementForTable.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/usp_ConstructCreateStatementForTable.sql/72	 Distribution Column	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/usp_ConstructCreateStatementForTable.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/usp_ConstructCreateStatementForTable.sql/91	 Construct the index clause by querrying the index type	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/usp_ConstructCreateStatementForTable.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/usp_ConstructCreateStatementForTable.sql/93	> Index Type	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/usp_ConstructCreateStatementForTable.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/usp_ConstructCreateStatementForTable.sql/138	 Construct the entire sql command	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/indexes/generate_rebuild_all.sql	microsoft/sql-data-warehouse-samples/scripts/indexes/generate_rebuild_all.sql/1	 Lists out the T-SQL necessary to rebuild CLUSTERED COLUMNSTORE indexes 	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/monitor/concurrency/queued_queries.sql	microsoft/sql-data-warehouse-samples/scripts/monitor/concurrency/queued_queries.sql/1	 Displays wait information for any query that is queued waiting for exeuction	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/monitor/concurrency/running_queued_queries_slots.sql	microsoft/sql-data-warehouse-samples/scripts/monitor/concurrency/running_queued_queries_slots.sql/1	 Total running queries and slots consumed	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/monitor/service_level_objective/slo_status.sql	microsoft/sql-data-warehouse-samples/scripts/monitor/service_level_objective/slo_status.sql/1	 Must be run from the [master] database	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/monitor/service_level_objective/slo_status.sql	microsoft/sql-data-warehouse-samples/scripts/monitor/service_level_objective/slo_status.sql/3	 One 	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/monitor/service_level_objective/slo_status.sql	microsoft/sql-data-warehouse-samples/scripts/monitor/service_level_objective/slo_status.sql/16	 Loop to monitor a scaling event	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/queries/query_memory_usage.sql	microsoft/sql-data-warehouse-samples/scripts/queries/query_memory_usage.sql/1	-------------------------------------------------------------------------------------------------\n Applies To: Azure SQL Data Warehouse, Microsoft Analytics Platform System (APS)\n Author: Matt Usher (Microsoft)\n Last Updated: 2016-05-25\n-------------------------------------------------------------------------------------------------	General
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/queries/query_memory_usage.sql	microsoft/sql-data-warehouse-samples/scripts/queries/query_memory_usage.sql/6	 The script below lists the current queries executed against the SQL Data Warehouse\nand the amount of granted, requested, and ideal memory. This script can be used to \nhelp identify queries that would benefit from larger resource class assignments. The\nstatement returns the following columns:	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/queries/query_memory_usage.sql	microsoft/sql-data-warehouse-samples/scripts/queries/query_memory_usage.sql/11	 request_id: Unique numeric id for the request.\nresource_class: The resource class for the request. \ncommand: The text of the request as submitted by the user\ngranted_memory_kb: Total amount of memory actually granted in kilobytes. \nrequested_memory_kb: Total requested amount of memory in kilobytes\nideal_memory_kb: Size, in kilobytes, of the memory grant to fit everything into physical\n                 memory. This is based on the cardinality estimate for the query. \nrequested_memory_gap: The difference in memory between the ideal and granted amounds. A value\n                      greater than 0 indicates a query that could use additional memory via\n                      a larger resource class.	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/queries/query_memory_usage.sql	microsoft/sql-data-warehouse-samples/scripts/queries/query_memory_usage.sql/34	 Get all pdw requests	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/queries/query_memory_usage.sql	microsoft/sql-data-warehouse-samples/scripts/queries/query_memory_usage.sql/36	 For each request_id, add the associated SQL requests on the Compute nodes.	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/queries/query_memory_usage.sql	microsoft/sql-data-warehouse-samples/scripts/queries/query_memory_usage.sql/38	 Add in the memory grant information	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	sqlops/MonitoringScripts/LatestBackup.sql	microsoft/sql-data-warehouse-samples/sqlops/MonitoringScripts/LatestBackup.sql/1	 Latest backup deatils 	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	sqlops/MonitoringScripts/MemoryConsumption.sql	microsoft/sql-data-warehouse-samples/sqlops/MonitoringScripts/MemoryConsumption.sql/1	-- sys.dm_pdw_sql_requests with the correct node id\nCREATE VIEW sql_requests AS\n(SELECT\n       sr.request_id,\n       sr.step_index,\n       (CASE \n              WHEN (sr.distribution_id = -1 ) THEN \n              (SELECT pdw_node_id FROM sys.dm_pdw_nodes WHERE type = 'CONTROL') \n              ELSE d.pdw_node_id END) AS pdw_node_id,\n       sr.distribution_id,\n       sr.status,\n       sr.error_id,\n       sr.start_time,\n       sr.end_time,\n       sr.total_elapsed_time,\n       sr.row_count,\n       sr.spid,\n       sr.command\nFROM sys.pdw_distributions AS d\nRIGHT JOIN sys.dm_pdw_sql_requests AS sr ON d.distribution_id = sr.distribution_id)\n	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	sqlops/MonitoringScripts/MemoryConsumption.sql	microsoft/sql-data-warehouse-samples/sqlops/MonitoringScripts/MemoryConsumption.sql/23	 Memory consumption	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	sqlops/MonitoringScripts/MemoryConsumption.sql	microsoft/sql-data-warehouse-samples/sqlops/MonitoringScripts/MemoryConsumption.sql/28	 pc1: current memory	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	sqlops/MonitoringScripts/MemoryConsumption.sql	microsoft/sql-data-warehouse-samples/sqlops/MonitoringScripts/MemoryConsumption.sql/30	 pc2: total memory allowed for this SQL instance	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	sqlops/MonitoringScripts/MemoryGrant.sql	microsoft/sql-data-warehouse-samples/sqlops/MonitoringScripts/MemoryGrant.sql/1	 Calculating memory grants per table 	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	sqlops/MonitoringScripts/MemoryGrant.sql	microsoft/sql-data-warehouse-samples/sqlops/MonitoringScripts/MemoryGrant.sql/3	,CAST((table_overhead * 1.0 + column_size + short_string_size + long_string_size) AS DECIMAL(18, 2)) AS est_mem_grant_B Code
EN	SQL	microsoft/sql-data-warehouse-samples	sqlops/MonitoringScripts/MemoryGrant.sql	microsoft/sql-data-warehouse-samples/sqlops/MonitoringScripts/MemoryGrant.sql/5	,CAST((table_overhead * 1.0 + column_size + short_string_size + long_string_size) / 1073741824 AS DECIMAL(18, 2)) AS est_mem_grant_GiB	Code
EN	SQL	microsoft/sql-data-warehouse-samples	sqlops/MonitoringScripts/SkewDetection.sql	microsoft/sql-data-warehouse-samples/sqlops/MonitoringScripts/SkewDetection.sql/1	 Returns the data distribution across all distribution databases to help detect any skew 	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	sqlops/MonitoringScripts/SlotUsage.sql	microsoft/sql-data-warehouse-samples/sqlops/MonitoringScripts/SlotUsage.sql/1	 Total running queries and slots consumed	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	sqlops/MonitoringScripts/StorageSize.sql	microsoft/sql-data-warehouse-samples/sqlops/MonitoringScripts/StorageSize.sql/1	 Returns reserved space within the database broken down into the data, index, and unused space 	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	sqlops/MonitoringScripts/TableHealthCount.sql	microsoft/sql-data-warehouse-samples/sqlops/MonitoringScripts/TableHealthCount.sql/1	 Retuns the number of tables which may be suffering from poor quality segments 	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	sqlops/MonitoringScripts/TempdbConsumption.sql	microsoft/sql-data-warehouse-samples/sqlops/MonitoringScripts/TempdbConsumption.sql/1	 Monitor tempdb per compute node 	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	sqlops/MonitoringScripts/UserActivities.sql	microsoft/sql-data-warehouse-samples/sqlops/MonitoringScripts/UserActivities.sql/1	 Monitor active sessions, queries, and queried queries 	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	sqlops/MonitoringScripts/UserActivities.sql	microsoft/sql-data-warehouse-samples/sqlops/MonitoringScripts/UserActivities.sql/5	 Active Sessions	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	sqlops/MonitoringScripts/UserActivities.sql	microsoft/sql-data-warehouse-samples/sqlops/MonitoringScripts/UserActivities.sql/11	 Active Queries	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	sqlops/MonitoringScripts/UserActivities.sql	microsoft/sql-data-warehouse-samples/sqlops/MonitoringScripts/UserActivities.sql/17	 Waiting Queued queries	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	sqlops/MonitoringScripts/UserActivities.sql	microsoft/sql-data-warehouse-samples/sqlops/MonitoringScripts/UserActivities.sql/24	 Waiting load queries	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	sqlops/MonitoringScripts/UserActivities.sql	microsoft/sql-data-warehouse-samples/sqlops/MonitoringScripts/UserActivities.sql/30	WHERE command IN('%CREATE TABLE AS%', '%INSERT%') AND r.status = 'Running' 	Code
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/CTASLoad-Example.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/CTASLoad-Example.sql/1	 STEP 1: Create a master key. Only necessary if one does not already exist.	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/CTASLoad-Example.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/CTASLoad-Example.sql/5	 STEP 2: Create a database scoped credential	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/CTASLoad-Example.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/CTASLoad-Example.sql/6	 Azure Data Lake Credential	General
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/CTASLoad-Example.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/CTASLoad-Example.sql/11	 Blob Storage Credential\nCREATE DATABASE SCOPED CREDENTIAL AzureCredential \nWITH IDENTITY = 'SHARED ACCESS SIGNATURE', \n	 SECRET = 'your key here';\n	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/CTASLoad-Example.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/CTASLoad-Example.sql/17	 STEP 3: Create an external data source - type HADOOP for ADLS	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/CTASLoad-Example.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/CTASLoad-Example.sql/22	 Blob Storage Data Source - wabs syntax with Hadoop type\nCREATE EXTERNAL DATA SOURCE AzureStorage\nWITH (TYPE = HADOOP, LOCATION = 'wasbs://container@storageacct.blob.core.windows.net',\n      CREDENTIAL = AzureCredential);\n	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/CTASLoad-Example.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/CTASLoad-Example.sql/28	 STEP 4: Create an external file format 	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/CTASLoad-Example.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/CTASLoad-Example.sql/31	 DATE_FORMAT = 'yyyy-MM-dd HH:mm:ss.fff', 	Code
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/CTASLoad-Example.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/CTASLoad-Example.sql/37	 STEP 5: Create external table pointing to blob storage files	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/CTASLoad-Example.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/CTASLoad-Example.sql/55	 STEP 6: Create Table As Select (CTAS) operation - invokes Polybase to pull information out of one or more text files in ADLS into DW tables\nnote you need to split the input text files to take advantage of parallel load on the compute nodes	Functional-Module
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/7	 ensure your data warehouse has a master key	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/8	 CREATE MASTER KEY;	Code
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/10	 Use your blob storage key to provide SQL DW access to blob storage	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/14	 Create the file format definition	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/16	STRING_DELIMITER = '', 	Code
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/23	 Ensure target schema exists	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/30	 Check external table schema exists	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/34	 cleanup of any previous failed run	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/36	tables	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/38	columns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/40	tables	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/48	columns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/60	 Set up to process all tables in the defined source schema	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/61	tables	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/66	tables	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/68	select * from #tables	Code
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/70	 initial cleanup of any previous run - if an external table still exists, you will have to drop it first	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/74	tables where rowid=@trow	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/78	 save start time	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/81	 create the external data source	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/87	 clear all rows in columns temp table (for previous table)	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/88	columns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/90	 get all the column definitions for the target table	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/91	columns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/98	 build external table definition	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/101	 process each column for the target table	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/102	columns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/104	columns where colid=@crow	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/117	columns where colid=@crow	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/123	 statements can exceed the capacity of a single print	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/129	 get the distribution mechanism and column for the target table	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/133	 remove target table if it already exists	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/140	 build simple CTAS statement (since column type and nullability done in external table)	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/147	 Cleanup external objects	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/155	 Output row count and elapsed load time for the current table	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/159	 Increment to the next table	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/161	tables where rowid=@trow	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/163	tables	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V1.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V1.sql/164	columns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/7	 ensure your data warehouse has a master key	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/8	 CREATE MASTER KEY;	Code
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/10	 Use your blob storage key to provide SQL DW access to blob storage	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/14	 Create the file format definition	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/16	STRING_DELIMITER = '', 	Code
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/23	 Ensure target schema exists	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/29	 Check external table schema exists	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/33	 cleanup of any previous failed run	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/35	tables	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/37	columns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/39	tables	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/47	columns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/59	 Set up to process all tables in the defined source schema	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/60	tables	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/65	tables	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/67	select * from #tables	Code
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/69	 initial cleanup of any previous run - if an external table still exists, you will have to drop it first	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/73	tables where rowid=@trow	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/77	 save start time	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/80	 create the external data source	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/86	 clear all rows in columns temp table (for previous table)	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/87	columns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/89	 get all the column definitions for the target table	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/90	columns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/97	 build external table definition	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/100	 process each column for the target table	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/101	columns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/103	columns where colid=@crow	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/111	 handle null and add quotes (& embedded quotes)	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/113	 dates and times @ 50 - image, text, xml, hierarchy and spatial data types not supported on DW	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/115	columns where colid=@crow	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/121	 statements can exceed the capacity of a single print	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/127	 get the distribution mechanism and column for the target table	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/131	 remove target table if it already exists	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/138	 build CTAS statement - looping through all of the columns to do a cast to the appropriate data type	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/141	columns where colid=@crow	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/144	 remove lead and tail quotes	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/146	 if this column is not nullable we have to give SQL DW the hint to make it NOT NULL - in theory we should error if there is a text value of null in the field, but that is just more code...	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/148	 remove escaped quotes and replace special line end characters with line feed	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/162	 not sure any data types are left - if so, you need a null value for 'not null' instead of the 0	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/164	 add column name	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/166	columns where colid=@crow	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/178	 Cleanup external objects	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/185	 Output row count and elapsed load time for the current table	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/189	 Increment to the next table	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/191	tables where rowid=@trow	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/193	tables	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V2.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V2.sql/194	columns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/8	 ensure your data warehouse has a master key	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/9	 CREATE MASTER KEY;	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/11	 Use your blob storage key to provide SQL DW access to blob storage	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/15	 Create the file format definition	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/17	STRING_DELIMITER = '', 	Code
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/24	 Ensure target schema exists	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/30	 Check external table schema exists	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/34	 cleanup of any previous failed run	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/36	tables	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/38	columns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/40	tables	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/48	columns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/60	 Set up to process all tables in the defined source schema	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/61	tables	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/66	tables	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/68	select * from #tables	Code
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/70	 initial cleanup of any previous run - if an external table still exists, you will have to drop it first	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/74	tables where rowid=@trow	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/76	 create the external data source (once - since all files are in "subfolders")	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/83	 save start time	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/86	 clear all rows in columns temp table (for previous table)	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/87	columns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/89	 get all the column definitions for the target table	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/90	columns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/97	 build external table definition	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/100	 process each column for the target table	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/101	columns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/103	columns where colid=@crow	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/111	 handle null and add quotes (& embedded quotes)	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/113	 dates and times @ 50 - image, text, xml, hierarchy and spatial data types not supported on DW	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/115	columns where colid=@crow	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/121	 statements can exceed the capacity of a single print	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/127	 get the distribution mechanism and column for the target table	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/131	 remove target table if it already exists	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/138	 build CTAS statement - looping through all of the columns to do a cast to the appropriate data type	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/141	columns where colid=@crow	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/144	 remove lead and tail quotes	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/146	 if this column is not nullable we have to give SQL DW the hint to make it NOT NULL - in theory we should error if there is a text value of null in the field, but that is just more code...	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/148	 remove escaped quotes and replace special line end characters with line feed	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/162	 not sure any data types are left - if so, you need a null value for 'not null' instead of the 0	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/164	 add column name	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/166	columns where colid=@crow	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/178	 Cleanup external objects	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/183	 Output row count and elapsed load time for the current table	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/187	 Increment to the next table	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/189	tables where rowid=@trow	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/191	tables	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql	microsoft/sql-data-warehouse-samples/scripts/data-load/GenerateLoadScript-V3-ContainerSubfolders.sql/192	columns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddSPChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddSPChanges.sql/1	 Creating script to drop SP if it exists and recreate. Called from DeploySPChanges	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/1	 This script checks the source table meta data which has been staged to keep the taraget instance in sync 	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/5	 All tables currently in "production db"	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/6	Temp1	Code
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/19	Temp1);	Code
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/22	 Looping through all tables in "production" and checking for deltas	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/26	 Current table in prod db and collecting all column names it should have based on source columns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/27	Temp1 WHERE number = @counter);	Code
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/28	tempprodtablecolumns	Code
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/36	tempdevtablecolumns FROM sourceColumns WHERE tablename = @currentTable	Code
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/38	 Find newly added columns not in "production" into temp table	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/39	addedcolumns FROM 	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/41	tempprodtablecolumns a	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/42	tempdevtablecolumns b ON a.name = b.colname) A WHERE missingcolumn is NULL;	Code
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/44	tempprodtablecolumns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/45	tempdevtablecolumns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/46	addedcolumns	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/48	 Clean up temp tables	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/49	tempprodtablecolumns;	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/50	tempdevtablecolumns;	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/59	addedcolumns);	Code
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/64	 Loop through added columns and adding columns in "production" table	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/67	addedcolumns where number = @secondcounter);	Code
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/68	addedcolumns where number = @secondcounter);	Code
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/AddTableChanges.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/AddTableChanges.sql/77	addedcolumns	Code
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/GetCreateStatement_Function_Proc_View.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/GetCreateStatement_Function_Proc_View.sql/3	 From the PS script we call, we extract the object_id as the parameter and get the DDL for Functions, Stored Precedures, and views	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/GetCreateStatement_Table.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/GetCreateStatement_Table.sql/3	 \n\nFrom the PS script, we extract the object_id to be used in this script for table metadata. This metadata \nwill be used arguments for an internal SP (usp_ConstructCreateStatementForTable) to create the DDL. Ensure\nthis SP already exists in your data warehouse.\n\n	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/usp_ConstructCreateStatementForTable.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/usp_ConstructCreateStatementForTable.sql/1	 \n\nSP executed to get the Table DDL for generate scripts. Called from GetCreateStatment_Tabls.sql. This \ndoes not take into account partitions\n\n	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/usp_ConstructCreateStatementForTable.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/usp_ConstructCreateStatementForTable.sql/25	 Construct the CREATE TABLE	Functional-Inline 
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/usp_ConstructCreateStatementForTable.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/usp_ConstructCreateStatementForTable.sql/28	 Construct the column definition	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/usp_ConstructCreateStatementForTable.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/usp_ConstructCreateStatementForTable.sql/43	 Extracting the column name/type	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/usp_ConstructCreateStatementForTable.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/usp_ConstructCreateStatementForTable.sql/58	 Construct the distribution clause by querrying for the distribution type/column	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/usp_ConstructCreateStatementForTable.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/usp_ConstructCreateStatementForTable.sql/60	 Distribution Type	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/usp_ConstructCreateStatementForTable.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/usp_ConstructCreateStatementForTable.sql/72	 Distribution Column	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/usp_ConstructCreateStatementForTable.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/usp_ConstructCreateStatementForTable.sql/91	 Construct the index clause by querrying the index type	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/usp_ConstructCreateStatementForTable.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/usp_ConstructCreateStatementForTable.sql/93	> Index Type	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/deployments/usp_ConstructCreateStatementForTable.sql	microsoft/sql-data-warehouse-samples/scripts/deployments/usp_ConstructCreateStatementForTable.sql/138	 Construct the entire sql command	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/indexes/generate_rebuild_all.sql	microsoft/sql-data-warehouse-samples/scripts/indexes/generate_rebuild_all.sql/1	 Lists out the T-SQL necessary to rebuild CLUSTERED COLUMNSTORE indexes 	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/monitor/concurrency/queued_queries.sql	microsoft/sql-data-warehouse-samples/scripts/monitor/concurrency/queued_queries.sql/1	 Displays wait information for any query that is queued waiting for exeuction	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/monitor/concurrency/running_queued_queries_slots.sql	microsoft/sql-data-warehouse-samples/scripts/monitor/concurrency/running_queued_queries_slots.sql/1	 Total running queries and slots consumed	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/monitor/service_level_objective/slo_status.sql	microsoft/sql-data-warehouse-samples/scripts/monitor/service_level_objective/slo_status.sql/1	 Must be run from the [master] database	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/monitor/service_level_objective/slo_status.sql	microsoft/sql-data-warehouse-samples/scripts/monitor/service_level_objective/slo_status.sql/3	 One 	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/monitor/service_level_objective/slo_status.sql	microsoft/sql-data-warehouse-samples/scripts/monitor/service_level_objective/slo_status.sql/16	 Loop to monitor a scaling event Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/queries/query_memory_usage.sql	microsoft/sql-data-warehouse-samples/scripts/queries/query_memory_usage.sql/1	-------------------------------------------------------------------------------------------------\n Applies To: Azure SQL Data Warehouse, Microsoft Analytics Platform System (APS)\n Author: Matt Usher (Microsoft)\n Last Updated: 2016-05-25\n------------------------------------------------------------------------------------------------- 	General\nThe script below lists the current queries executed against the SQL Data Warehouse\nand the amount of granted, requested, and ideal memory. This script can be used to \nhelp identify queries that would benefit from larger resource class assignments. The\nstatement returns the following columns:\nrequest_id: Unique numeric id for the request.\nresource_class: The resource class for the request. \ncommand: The text of the request as submitted by the user\ngranted_memory_kb: Total amount of memory actually granted in kilobytes. \nrequested_memory_kb: Total requested amount of memory in kilobytes\nideal_memory_kb: Size, in kilobytes, of the memory grant to fit everything into physical\nmemory. This is based on the cardinality estimate for the query. \nrequested_memory_gap: The difference in memory between the ideal and granted amounds. A value\ngreater than 0 indicates a query that could use additional memory via\na larger resource class.	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/queries/query_memory_usage.sql	microsoft/sql-data-warehouse-samples/scripts/queries/query_memory_usage.sql/34	 Get all pdw requests	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/queries/query_memory_usage.sql	microsoft/sql-data-warehouse-samples/scripts/queries/query_memory_usage.sql/36	 For each request_id, add the associated SQL requests on the Compute nodes.	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	scripts/queries/query_memory_usage.sql	microsoft/sql-data-warehouse-samples/scripts/queries/query_memory_usage.sql/38	 Add in the memory grant information	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	sqlops/MonitoringScripts/LatestBackup.sql	microsoft/sql-data-warehouse-samples/sqlops/MonitoringScripts/LatestBackup.sql/1	 Latest backup deatils 	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	sqlops/MonitoringScripts/MemoryConsumption.sql	microsoft/sql-data-warehouse-samples/sqlops/MonitoringScripts/MemoryConsumption.sql/1	-- sys.dm_pdw_sql_requests with the correct node id\nCREATE VIEW sql_requests AS\n(SELECT\n       sr.request_id,\n       sr.step_index,\n       (CASE \n              WHEN (sr.distribution_id = -1 ) THEN \n              (SELECT pdw_node_id FROM sys.dm_pdw_nodes WHERE type = 'CONTROL') \n              ELSE d.pdw_node_id END) AS pdw_node_id,\n       sr.distribution_id,\n       sr.status,\n       sr.error_id,\n       sr.start_time,\n       sr.end_time,\n       sr.total_elapsed_time,\n       sr.row_count,\n       sr.spid,\n       sr.command\nFROM sys.pdw_distributions AS d\nRIGHT JOIN sys.dm_pdw_sql_requests AS sr ON d.distribution_id = sr.distribution_id)\n	Code
EN	SQL	microsoft/sql-data-warehouse-samples	sqlops/MonitoringScripts/MemoryConsumption.sql	microsoft/sql-data-warehouse-samples/sqlops/MonitoringScripts/MemoryConsumption.sql/23	 Memory consumption	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	sqlops/MonitoringScripts/MemoryConsumption.sql	microsoft/sql-data-warehouse-samples/sqlops/MonitoringScripts/MemoryConsumption.sql/28	 pc1: current memory	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	sqlops/MonitoringScripts/MemoryConsumption.sql	microsoft/sql-data-warehouse-samples/sqlops/MonitoringScripts/MemoryConsumption.sql/30	 pc2: total memory allowed for this SQL instance	Notice
EN	SQL	microsoft/sql-data-warehouse-samples	sqlops/MonitoringScripts/MemoryGrant.sql	microsoft/sql-data-warehouse-samples/sqlops/MonitoringScripts/MemoryGrant.sql/1	 Calculating memory grants per table 	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	sqlops/MonitoringScripts/MemoryGrant.sql	microsoft/sql-data-warehouse-samples/sqlops/MonitoringScripts/MemoryGrant.sql/3	,CAST((table_overhead * 1.0 + column_size + short_string_size + long_string_size) AS DECIMAL(18, 2)) AS est_mem_grant_B	Code
EN	SQL	microsoft/sql-data-warehouse-samples	sqlops/MonitoringScripts/MemoryGrant.sql	microsoft/sql-data-warehouse-samples/sqlops/MonitoringScripts/MemoryGrant.sql/5	,CAST((table_overhead * 1.0 + column_size + short_string_size + long_string_size) / 1073741824 AS DECIMAL(18, 2)) AS est_mem_grant_GiB	Code
EN	SQL	microsoft/sql-data-warehouse-samples	sqlops/MonitoringScripts/SkewDetection.sql	microsoft/sql-data-warehouse-samples/sqlops/MonitoringScripts/SkewDetection.sql/1	 Returns the data distribution across all distribution databases to help detect any skew 	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	sqlops/MonitoringScripts/SlotUsage.sql	microsoft/sql-data-warehouse-samples/sqlops/MonitoringScripts/SlotUsage.sql/1	 Total running queries and slots consumed	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	sqlops/MonitoringScripts/StorageSize.sql	microsoft/sql-data-warehouse-samples/sqlops/MonitoringScripts/StorageSize.sql/1	 Returns reserved space within the database broken down into the data, index, and unused space Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	sqlops/MonitoringScripts/TableHealthCount.sql	microsoft/sql-data-warehouse-samples/sqlops/MonitoringScripts/TableHealthCount.sql/1	 Retuns the number of tables which may be suffering from poor quality segments 	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	sqlops/MonitoringScripts/TempdbConsumption.sql	microsoft/sql-data-warehouse-samples/sqlops/MonitoringScripts/TempdbConsumption.sql/1	 Monitor tempdb per compute node 	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	sqlops/MonitoringScripts/UserActivities.sql	microsoft/sql-data-warehouse-samples/sqlops/MonitoringScripts/UserActivities.sql/1	 Monitor active sessions, queries, and queried queries 	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	sqlops/MonitoringScripts/UserActivities.sql	microsoft/sql-data-warehouse-samples/sqlops/MonitoringScripts/UserActivities.sql/5	 Active Sessions	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	sqlops/MonitoringScripts/UserActivities.sql	microsoft/sql-data-warehouse-samples/sqlops/MonitoringScripts/UserActivities.sql/11	 Active Queries	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	sqlops/MonitoringScripts/UserActivities.sql	microsoft/sql-data-warehouse-samples/sqlops/MonitoringScripts/UserActivities.sql/17	 Waiting Queued queries	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	sqlops/MonitoringScripts/UserActivities.sql	microsoft/sql-data-warehouse-samples/sqlops/MonitoringScripts/UserActivities.sql/24	 Waiting load queries	Functional-Inline
EN	SQL	microsoft/sql-data-warehouse-samples	sqlops/MonitoringScripts/UserActivities.sql	microsoft/sql-data-warehouse-samples/sqlops/MonitoringScripts/UserActivities.sql/30	WHERE command IN('%CREATE TABLE AS%', '%INSERT%') AND r.status = 'Running' 	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Benchmarks/DB2/Benchmarking DB2 (absolute).sql	jOOQ/jOOQ/jOOQ-examples/Benchmarks/DB2/Benchmarking DB2 (absolute).sql/1	 Copyright Data Geekery GmbH\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nThis version displays actual execution times.\nBeware that according to DB2 licensing, it is not allowed to publish benchmark results\nRepeat the whole benchmark several times to avoid warmup penalty\nPaste statement 1 here\nPaste statement 2 here\nCopyright Data Geekery GmbH\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nThis version displays actual execution times.\nAccording to our understanding of DB2 licensing, such benchmark results may be published\nas they cannot be compared to other databases and do not provide absolute time values	General
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Benchmarks/DB2/Benchmarking DB2 (relative).sql	jOOQ/jOOQ/jOOQ-examples/Benchmarks/DB2/Benchmarking DB2 (relative).sql/29	 Repeat the whole benchmark several times to avoid warmup penalty	Notice
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Benchmarks/DB2/Benchmarking DB2 (relative).sql	jOOQ/jOOQ/jOOQ-examples/Benchmarks/DB2/Benchmarking DB2 (relative).sql/40	 Paste statement 1 here	Notice
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Benchmarks/DB2/Benchmarking DB2 (relative).sql	jOOQ/jOOQ/jOOQ-examples/Benchmarks/DB2/Benchmarking DB2 (relative).sql/57	 Paste statement 2 here	Notice\nCopyright Data Geekery GmbH\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n	General\nCopyright Data Geekery GmbH\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n	General\nCopyright Data Geekery GmbH\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nThis version displays actual execution times.\nBeware that according to Oracle licensing, it is not allowed to publish benchmark results	General
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Benchmarks/Oracle/Benchmarking Oracle (absolute).sql	jOOQ/jOOQ/jOOQ-examples/Benchmarks/Oracle/Benchmarking Oracle (absolute).sql/28	 Repeat the whole benchmark several times to avoid warmup penalty	Notice
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Benchmarks/Oracle/Benchmarking Oracle (absolute).sql	jOOQ/jOOQ/jOOQ-examples/Benchmarks/Oracle/Benchmarking Oracle (absolute).sql/34	 Paste statement 1 here	Notice
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Benchmarks/Oracle/Benchmarking Oracle (absolute).sql	jOOQ/jOOQ/jOOQ-examples/Benchmarks/Oracle/Benchmarking Oracle (absolute).sql/46	 Paste statement 2 here	Notice\nCopyright Data Geekery GmbH\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nThis version displays relative execution times (fastest execution = 1)\nAccording to our understanding of Oracle licensing, such benchmark results may be published\nas they cannot be compared to other databases and do not provide absolute time values	General
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Benchmarks/Oracle/Benchmarking Oracle (relative).sql	jOOQ/jOOQ/jOOQ-examples/Benchmarks/Oracle/Benchmarking Oracle (relative).sql/34	 Repeat the whole benchmark several times to avoid warmup penalty	Notice
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Benchmarks/Oracle/Benchmarking Oracle (relative).sql	jOOQ/jOOQ/jOOQ-examples/Benchmarks/Oracle/Benchmarking Oracle (relative).sql/40	 Paste statement 1 here	Notice
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Benchmarks/Oracle/Benchmarking Oracle (relative).sql	jOOQ/jOOQ/jOOQ-examples/Benchmarks/Oracle/Benchmarking Oracle (relative).sql/52	 Paste statement 2 here	Notice\nCopyright Data Geekery GmbH\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n	General
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Benchmarks/PostgreSQL/Benchmarking PostgreSQL (absolute).sql	jOOQ/jOOQ/jOOQ-examples/Benchmarks/PostgreSQL/Benchmarking PostgreSQL (absolute).sql/22	 Repeat the whole benchmark several times to avoid warmup penalty	Notice
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Benchmarks/PostgreSQL/Benchmarking PostgreSQL (absolute).sql	jOOQ/jOOQ/jOOQ-examples/Benchmarks/PostgreSQL/Benchmarking PostgreSQL (absolute).sql/28	 Paste statement 1 here	Notice
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Benchmarks/PostgreSQL/Benchmarking PostgreSQL (absolute).sql	jOOQ/jOOQ/jOOQ-examples/Benchmarks/PostgreSQL/Benchmarking PostgreSQL (absolute).sql/40	 Paste statement 2 here	Notice\nCopyright Data Geekery GmbH\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n	General
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Benchmarks/PostgreSQL/Benchmarking PostgreSQL (relative).sql	jOOQ/jOOQ/jOOQ-examples/Benchmarks/PostgreSQL/Benchmarking PostgreSQL (relative).sql/27	 Repeat the whole benchmark several times to avoid warmup penalty	Notice
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Benchmarks/PostgreSQL/Benchmarking PostgreSQL (relative).sql	jOOQ/jOOQ/jOOQ-examples/Benchmarks/PostgreSQL/Benchmarking PostgreSQL (relative).sql/33	 Paste statement 1 here	Notice
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Benchmarks/PostgreSQL/Benchmarking PostgreSQL (relative).sql	jOOQ/jOOQ/jOOQ-examples/Benchmarks/PostgreSQL/Benchmarking PostgreSQL (relative).sql/48	 Paste statement 2 here	Notice\nCopyright Data Geekery GmbH\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nThis version displays actual execution times.\nBeware that according to SQL Server licensing, it is not allowed to publish benchmark results	General
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Benchmarks/SQLServer/Benchmarking SQL Server (absolute).sql	jOOQ/jOOQ/jOOQ-examples/Benchmarks/SQLServer/Benchmarking SQL Server (absolute).sql/32	 Paste statement 1 here	Notice
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Benchmarks/SQLServer/Benchmarking SQL Server (absolute).sql	jOOQ/jOOQ/jOOQ-examples/Benchmarks/SQLServer/Benchmarking SQL Server (absolute).sql/36	 Paste statement 2 here	Notice
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Benchmarks/SQLServer/Benchmarking SQL Server (relative).sql	jOOQ/jOOQ/jOOQ-examples/Benchmarks/SQLServer/Benchmarking SQL Server (relative).sql/1	 Copyright Data Geekery GmbH\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nThis version displays relative execution times (fastest execution = 1)\nAccording to our understanding of SQL Server licensing, such benchmark results may be published\nas they cannot be compared to other databases and do not provide absolute time values	General
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Benchmarks/SQLServer/Benchmarking SQL Server (relative).sql	jOOQ/jOOQ/jOOQ-examples/Benchmarks/SQLServer/Benchmarking SQL Server (relative).sql/39	 Paste statement 1 here	Notice
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Benchmarks/SQLServer/Benchmarking SQL Server (relative).sql	jOOQ/jOOQ/jOOQ-examples/Benchmarks/SQLServer/Benchmarking SQL Server (relative).sql/43	 Paste statement 2 here	Notice
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-oracle-example/src/main/resources/db-oracle.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-oracle-example/src/main/resources/db-oracle.sql/218	 Examples can be found here:\nhttps://docs.oracle.com/database/121/SPATL/spatial-data-types-and-metadata.htm	Notice
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-oracle-example/src/main/resources/db-oracle.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-oracle-example/src/main/resources/db-oracle.sql/239	 two-dimensional polygon	Functional-Inline
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-oracle-example/src/main/resources/db-oracle.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-oracle-example/src/main/resources/db-oracle.sql/242	 one rectangle (1003 = exterior)\nonly 2 points needed to\ndefine rectangle (lower left and upper right) with\nCartesian-coordinate data	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-oracle-example/src/main/resources/db-oracle.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-oracle-example/src/main/resources/db-oracle.sql/254	 two-dimensional polygon	Functional-Inline
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-oracle-example/src/main/resources/db-oracle.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-oracle-example/src/main/resources/db-oracle.sql/257	 one polygon (exterior polygon ring)	Functional-Inline
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-oracle-example/src/main/resources/db-oracle.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-oracle-example/src/main/resources/db-oracle.sql/267	 two-dimensional polygon	Functional-Inline
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-oracle-example/src/main/resources/db-oracle.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-oracle-example/src/main/resources/db-oracle.sql/270	 one polygon (exterior polygon ring)	Functional-Inline
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-oracle-example/src/main/resources/db-oracle.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-oracle-example/src/main/resources/db-oracle.sql/280	 two-dimensional polygon	Functional-Inline
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-oracle-example/src/main/resources/db-oracle.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-oracle-example/src/main/resources/db-oracle.sql/283	 one circle	Functional-Inline
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-oracle-example/src/main/resources/db-oracle.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-oracle-example/src/main/resources/db-oracle.sql/298	 20X20 grid	Functional-Inline
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-oracle-example/src/main/resources/db-oracle.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-oracle-example/src/main/resources/db-oracle.sql/302	 SRID	Functional-Inline
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1	\n PostgreSQL database dump\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/11	\n Name: SCHEMA public; Type: COMMENT; Schema: -; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/20	\n Name: actor_actor_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/37	\n Name: actor; Type: TABLE; Schema: public; Owner: postgres; Tablespace:\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/51	\n Name: mpaa_rating; Type: TYPE; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/66	\n Name: year; Type: DOMAIN; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/76	\n Name: _group_concat(text, text); Type: FUNCTION; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/93	\n Name: group_concat(text); Type: AGGREGATE; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/105	\n Name: category_category_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/118	\n Name: category; Type: TABLE; Schema: public; Owner: postgres; Tablespace:\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/131	\n Name: film_film_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/144	\n Name: film; Type: TABLE; Schema: public; Owner: postgres; Tablespace:\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/168	\n Name: film_actor; Type: TABLE; Schema: public; Owner: postgres; Tablespace:\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/181	\n Name: film_category; Type: TABLE; Schema: public; Owner: postgres; Tablespace:\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/194	\n Name: actor_info; Type: VIEW; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/204	\n Name: address_address_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/217	\n Name: address; Type: TABLE; Schema: public; Owner: postgres; Tablespace:\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/235	\n Name: city_city_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/248	\n Name: city; Type: TABLE; Schema: public; Owner: postgres; Tablespace:\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/262	\n Name: country_country_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/275	\n Name: country; Type: TABLE; Schema: public; Owner: postgres; Tablespace:\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/288	\n Name: customer_customer_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/301	\n Name: customer; Type: TABLE; Schema: public; Owner: postgres; Tablespace:\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/321	\n Name: customer_list; Type: VIEW; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/331	\n Name: film_list; Type: VIEW; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/341	\n Name: inventory_inventory_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/354	\n Name: inventory; Type: TABLE; Schema: public; Owner: postgres; Tablespace:\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/368	\n Name: language_language_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/381	\n Name: language; Type: TABLE; Schema: public; Owner: postgres; Tablespace:\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/394	\n Name: nicer_but_slower_film_list; Type: VIEW; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/404	\n Name: payment_payment_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/417	\n Name: payment; Type: TABLE; Schema: public; Owner: postgres; Tablespace:\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/433	\n Name: payment_p2007_01; Type: TABLE; Schema: public; Owner: postgres; Tablespace:\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/444	\n Name: payment_p2007_02; Type: TABLE; Schema: public; Owner: postgres; Tablespace:\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/455	\n Name: payment_p2007_03; Type: TABLE; Schema: public; Owner: postgres; Tablespace:\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/466	\n Name: payment_p2007_04; Type: TABLE; Schema: public; Owner: postgres; Tablespace:\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/477	\n Name: payment_p2007_05; Type: TABLE; Schema: public; Owner: postgres; Tablespace:\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/488	\n Name: payment_p2007_06; Type: TABLE; Schema: public; Owner: postgres; Tablespace:\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/499	\n Name: rental_rental_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/512	\n Name: rental; Type: TABLE; Schema: public; Owner: postgres; Tablespace:\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/529	\n Name: sales_by_film_category; Type: VIEW; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/539	\n Name: staff_staff_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/552	\n Name: staff; Type: TABLE; Schema: public; Owner: postgres; Tablespace:\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/573	\n Name: store_store_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/586	\n Name: store; Type: TABLE; Schema: public; Owner: postgres; Tablespace:\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/600	\n Name: sales_by_store; Type: VIEW; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/610	\n Name: staff_list; Type: VIEW; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/620	\n Name: film_in_stock(integer, integer); Type: FUNCTION; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/637	\n Name: film_not_in_stock(integer, integer); Type: FUNCTION; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/654	\n Name: get_customer_balance(integer, timestamp without time zone); Type: FUNCTION; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/660	#OK, WE NEED TO CALCULATE THE CURRENT BALANCE GIVEN A CUSTOMER_ID AND A DATE\n#THAT WE WANT THE BALANCE TO BE EFFECTIVE FOR. THE BALANCE IS:\n#   1) RENTAL FEES FOR ALL PREVIOUS RENTALS\n#   2) ONE DOLLAR FOR EVERY DAY THE PREVIOUS RENTALS ARE OVERDUE\n#   3) IF A FILM IS MORE THAN RENTAL_DURATION * 2 OVERDUE, CHARGE THE REPLACEMENT_COST\n#   4) SUBTRACT ALL PAYMENTS MADE BEFORE THE DATE SPECIFIED\n#FEES PAID TO RENT THE VIDEOS INITIALLY\n#LATE FEES FOR PRIOR RENTALS\n#SUM OF PAYMENTS MADE PREVIOUSLY\n\n Name: inventory_held_by_customer(integer); Type: FUNCTION; Schema: public; Owner: postgres\n	Notice
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/721	\n Name: inventory_in_stock(integer); Type: FUNCTION; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/731	 AN ITEM IS IN-STOCK IF THERE ARE EITHER NO ROWS IN THE rental TABLE\n FOR THE ITEM OR ALL ROWS HAVE return_date POPULATED	Notice
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/758	\n Name: last_day(timestamp without time zone); Type: FUNCTION; Schema: public; Owner: postgres\n	Notice
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/776	\n Name: last_updated(); Type: FUNCTION; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/791	\n Name: rewards_report(integer, numeric); Type: FUNCTION; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/804	 Some sanity checks... 	Functional-Inline
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/816	\n    Create a temporary storage area for Customer IDs.\n    	Notice
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/821	\n    Find all customers meeting the monthly purchase requirements\n    	Notice
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/835	\n    Output ALL customer information of matching rewardees.\n    Customize output as needed.\n    	Notice
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/843	 Clean up 	Functional-Inline
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/855	\n Name: actor_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/863	\n Name: address_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/871	\n Name: category_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/879	\n Name: city_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/887	\n Name: country_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/896	 Name: customer_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/904	 Name: film_actor_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/912	 Name: film_category_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/920	 Name: film_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/928	 Name: inventory_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/936	 Name: language_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/944	 Name: payment_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/952	 Name: rental_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/960	 Name: staff_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/968	 Name: store_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/976	 Name: film_fulltext_idx; Type: INDEX; Schema: public; Owner: postgres; Tablespace:	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/983	 Name: idx_actor_last_name; Type: INDEX; Schema: public; Owner: postgres; Tablespace:	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/990	 Name: idx_fk_address_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace:	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/997	 Name: idx_fk_city_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace:	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1004	 Name: idx_fk_country_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace:	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1011	 Name: idx_fk_customer_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace:	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1018	 Name: idx_fk_film_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace:	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1025	 Name: idx_fk_inventory_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace:	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1032	 Name: idx_fk_language_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace:	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1039	 Name: idx_fk_original_language_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace:	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1046	 Name: idx_fk_payment_p2007_01_customer_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace:	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1053	 Name: idx_fk_payment_p2007_01_staff_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace:	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1060	 Name: idx_fk_payment_p2007_02_customer_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace:	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1067	 Name: idx_fk_payment_p2007_02_staff_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace:	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1074	 Name: idx_fk_payment_p2007_03_customer_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace:	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1081	 Name: idx_fk_payment_p2007_03_staff_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace:	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1088	 Name: idx_fk_payment_p2007_04_customer_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace:	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1095	 Name: idx_fk_payment_p2007_04_staff_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace:	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1102	 Name: idx_fk_payment_p2007_05_customer_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace:	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1109	 Name: idx_fk_payment_p2007_05_staff_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace:	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1116	 Name: idx_fk_payment_p2007_06_customer_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace:	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1123	 Name: idx_fk_payment_p2007_06_staff_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace:	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1130	 Name: idx_fk_staff_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace:	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1137	 Name: idx_fk_store_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace:	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1144	 Name: idx_last_name; Type: INDEX; Schema: public; Owner: postgres; Tablespace:	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1151	 Name: idx_store_id_film_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace:	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1158	 Name: idx_title; Type: INDEX; Schema: public; Owner: postgres; Tablespace:	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1165	 Name: idx_unq_manager_staff_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace:	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1172	 Name: idx_unq_rental_rental_date_inventory_id_customer_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace:	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1179	 Name: payment_insert_p2007_01; Type: RULE; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1186	 Name: payment_insert_p2007_02; Type: RULE; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1193	 Name: payment_insert_p2007_03; Type: RULE; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1200	 Name: payment_insert_p2007_04; Type: RULE; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1207	 Name: payment_insert_p2007_05; Type: RULE; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1214	 Name: payment_insert_p2007_06; Type: RULE; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1221	 Name: film_fulltext_trigger; Type: TRIGGER; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1231	 Name: last_updated; Type: TRIGGER; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1241	 Name: last_updated; Type: TRIGGER; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1251	 Name: last_updated; Type: TRIGGER; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1261	 Name: last_updated; Type: TRIGGER; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1271	 Name: last_updated; Type: TRIGGER; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1281	 Name: last_updated; Type: TRIGGER; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1291	 Name: last_updated; Type: TRIGGER; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1301	 Name: last_updated; Type: TRIGGER; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1311	 Name: last_updated; Type: TRIGGER; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1322	 Name: last_updated; Type: TRIGGER; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1331	 Name: last_updated; Type: TRIGGER; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1341	 Name: last_updated; Type: TRIGGER; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1351	 Name: last_updated; Type: TRIGGER; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1361	 Name: last_updated; Type: TRIGGER; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1371	 Name: address_city_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1379	 Name: city_country_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1387	 Name: customer_address_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1395	 Name: customer_store_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1403	 Name: film_actor_actor_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1411	 Name: film_actor_film_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1419	 Name: film_category_category_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1427	 Name: film_category_film_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1435	 Name: film_language_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1443	 Name: film_original_language_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1451	 Name: inventory_film_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1459	 Name: inventory_store_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1467	 Name: payment_customer_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1475	Name: payment_p2007_01_customer_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1483	 Name: payment_p2007_01_rental_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1491	 Name: payment_p2007_01_staff_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1499	 Name: payment_p2007_02_customer_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1507	 Name: payment_p2007_02_rental_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1515	 Name: payment_p2007_02_staff_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1523	 Name: payment_p2007_03_customer_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1531	 Name: payment_p2007_03_rental_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1539	 Name: payment_p2007_03_staff_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1547	 Name: payment_p2007_04_customer_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1555	 Name: payment_p2007_04_rental_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1563	 Name: payment_p2007_04_staff_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1571	 Name: payment_p2007_05_customer_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1579	 Name: payment_p2007_05_rental_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1587	 Name: payment_p2007_05_staff_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1595	 Name: payment_p2007_06_customer_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1603	 Name: payment_p2007_06_rental_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1611	 Name: payment_p2007_06_staff_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1619	 Name: payment_rental_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1627	 Name: payment_staff_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1635	 Name: rental_customer_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1643	 Name: rental_inventory_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1651	 Name: rental_staff_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1659	 Name: staff_address_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1667	 Name: staff_store_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1675	 Name: store_address_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1683	 Name: store_manager_staff_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1691	 Name: public; Type: ACL; Schema: -; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V1__postgres-sakila-schema.sql/1700	 PostgreSQL database dump complete	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/1	\n PostgreSQL database dump	Code\n	General
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/14	 Name: actor_actor_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/21	 Name: category_category_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/28	 Name: film_film_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/35	 Name: address_address_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/42	 Name: city_city_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/49	 Name: country_country_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/56	 Name: customer_customer_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/63	 Name: inventory_inventory_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/70	 Name: language_language_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/77	 Name: payment_payment_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/84	 Name: rental_rental_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/91	 Name: staff_staff_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/98	 Name: store_store_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/105	 Data for Name: actor; Type: TABLE DATA; Schema: public; Owner: postgres	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/110	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table language\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/147	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/150	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table country\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/705	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/708	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table city\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/3717	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/3720	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table address\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/6744	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/6747	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table actor\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/7757	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/7760	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table staff\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/7780	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/7783	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table store\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/7803	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/7806	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table category\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/7896	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/7899	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table film\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/12905	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/12908	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table inventory\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/35823	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/35826	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table film_actor\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/63143	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/63146	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table film_category\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/68153	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/68156	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table customer\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/71161	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/71164	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table rental\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/151394	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/151397	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table payment\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql	jOOQ/jOOQ/jOOQ-examples/jOOQ-spark-chart-example/src/main/resources/db/migration/V2__postgres-sakila-data.sql/231652	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-delete-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-delete-data.sql/1	\n\nSakila for Oracle is a port of the Sakila example database available for MySQL, which was originally developed by Mike Hillyer of the MySQL AB documentation team. \nThis project is designed to help database administrators to decide which database to use for development of new products\nThe user can run the same SQL against different kind of databases and compare the performance\n\nLicense: BSD\nCopyright DB Software Laboratory\nhttp://www.etl-tools.com\n\n	General
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-delete-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-delete-data.sql/14	 Delete data	Functional-Inline
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-drop-objects.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-drop-objects.sql/1	\n\nSakila for DB2 is a port of the Sakila example database available for MySQL, which was originally developed by Mike Hillyer of the MySQL AB documentation team. \nThis project is designed to help database administrators to decide which database to use for development of new products\nThe user can run the same SQL against different kind of databases and compare the performance\n\nLicense: BSD\nCopyright DB Software Laboratory and Data Geekery GmbH (DB2 port)\nhttp://www.etl-tools.com / http://www.datageekery.com\n\n	General
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-drop-objects.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-drop-objects.sql/13	 Drop Views	Functional-Inline
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-drop-objects.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-drop-objects.sql/21	 Drop Tables	Functional-Inline
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql/1	\n\nSakila for DB2 is a port of the Sakila example database available for MySQL, which was originally developed by Mike Hillyer of the MySQL AB documentation team. \nThis project is designed to help database administrators to decide which database to use for development of new products\nThe user can run the same SQL against different kind of databases and compare the performance\n\nLicense: BSD\nCopyright DB Software Laboratory and Data Geekery GmbH (DB2 port)\nhttp://www.etl-tools.com / http://www.datageekery.com\n\n	General
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql/13	 Delete data	Functional-Inline
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql/34	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table language\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql/69	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql/72	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table country\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql/621	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql/624	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table city\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql/3628	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql/6646	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table actor\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql/7650	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql/7663	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table store\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql/7677	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql/7680	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table category\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql/7764	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql/7767	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table film\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql/12771	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql/12774	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table inventory\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql/35683	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql/35686	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table film_actor\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql/63000	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql/63003	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table film_category\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql/68007	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql/68010	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table customer\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql/71009	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql/71012	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table rental\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql/151236	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql/151239	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table payment\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-insert-data.sql/231488	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/db2-sakila-db/db2-sakila-schema.sql/1	\n\nSakila for DB2 is a port of the Sakila example database available for MySQL, which was originally developed by Mike Hillyer of the MySQL AB documentation team. \nThis project is designed to help database administrators to decide which database to use for development of new products\nThe user can run the same SQL against different kind of databases and compare the performance\n\nLicense: BSD\nCopyright DB Software Laboratory and Data Geekery GmbH (DB2 port)\nhttp://www.etl-tools.com / http://www.datageekery.com\n\n\n	General
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-delete-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-delete-data.sql/1	 Delete data 	Functional-Inline
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-drop-objects.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-drop-objects.sql/1	 Drop Views	Functional-Inline
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-drop-objects.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-drop-objects.sql/10	 Drop Tables	Functional-Inline
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-drop-objects.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-drop-objects.sql/30	 Procedures and views	Functional-Inline
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql/1	 Delete data	Functional-Inline
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql/22	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table language\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql/56	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql/59	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table country\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql/608	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql/611	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table city\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql/3615	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql/6633	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table actor\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql/7637	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql/7650	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table store\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql/7664	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql/7667	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table category\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql/7751	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql/7754	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table film\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql/12758	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql/12761	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table inventory\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql/35670	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql/35673	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table film_actor\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql/62987	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql/62990	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table film_category\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql/67994	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql/67997	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table customer\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql/70996	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql/70999	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table rental\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql/151223	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql/151226	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table payment\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-insert-data.sql/231475	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql/1	 Sakila Sample Database Schema\n Version 0.8\n Copyright (c) 2006, MySQL AB\n All rights reserved.	General
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql/7	 Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:	General
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql/9	  * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n  * Neither the name of MySQL AB nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.	General
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql/13	 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.	General
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql/24	\n Table structure for table `actor`\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql/37	\n Table structure for table `address`\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql/55	\n Table structure for table `category`\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql/66	\n Table structure for table `city`\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql/80	\n Table structure for table `country`\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql/91	\n Table structure for table `customer`\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql/113	\n Table structure for table `film`\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql/139	\n Table structure for table `film_actor`\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql/153	\n Table structure for table `film_category`\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql/166	\n Table structure for table `film_text`\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql/178	\n Triggers for loading film_text from film\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql/207	\n Table structure for table `inventory`\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql/223	\n Table structure for table `language`\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql/234	\n Table structure for table `payment`\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql/255	\n Table structure for table `rental`\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql/277	\n Table structure for table `staff`\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql/300	\n Table structure for table `store`\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql/316	\n View structure for view `customer_list`\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql/327	\n View structure for view `film_list`\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql/340	\n View structure for view `nicer_but_slower_film_list`\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql/355	\n View structure for view `staff_list`\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql/366	\n View structure for view `sales_by_store`\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql/387	\n View structure for view `sales_by_film_category`\n\n Note that total sales will add up to >100% because\n some titles belong to more than 1 category\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql/408	\n View structure for view `actor_info`\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql/440	\n Procedure structure for procedure `rewards_report`\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql/461	 Some sanity checks... 	Functional-Inline
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql/471	 Determine start and end time periods	Functional-Inline 
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql/476	\n        Create a temporary storage area for\n        Customer IDs.\n    	Functional-Inline
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql/482	\n        Find all customers meeting the\n        monthly purchase requirements\n    	Functional-Inline
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql/494	 Populate OUT parameter with count of found customers 	Functional-Inline
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql/497	\n        Output ALL customer information of matching rewardees.\n        Customize output as needed.\n    Functional-Inline
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql/505	 Clean up 	Functional-Inline
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql/518	OK, WE NEED TO CALCULATE THE CURRENT BALANCE GIVEN A CUSTOMER_ID AND A DATE\nTHAT WE WANT THE BALANCE TO BE EFFECTIVE FOR. THE BALANCE IS:\n   1) RENTAL FEES FOR ALL PREVIOUS RENTALS\n   2) ONE DOLLAR FOR EVERY DAY THE PREVIOUS RENTALS ARE OVERDUE\n   3) IF A FILM IS MORE THAN RENTAL_DURATION * 2 OVERDUE, CHARGE THE REPLACEMENT_COST\n   4) SUBTRACT ALL PAYMENTS MADE BEFORE THE DATE SPECIFIED	Notice
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql/525	FEES PAID TO RENT THE VIDEOS INITIALLY\nLATE FEES FOR PRIOR RENTALS\nSUM OF PAYMENTS MADE PREVIOUSLY	Notice
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/mysql-sakila-db/mysql-sakila-schema.sql/614	AN ITEM IS IN-STOCK IF THERE ARE EITHER NO ROWS IN THE rental TABLE\nFOR THE ITEM OR ALL ROWS HAVE return_date POPULATED	Notice
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-delete-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-delete-data.sql/1	\n\nSakila for Oracle is a port of the Sakila example database available for MySQL, which was originally developed by Mike Hillyer of the MySQL AB documentation team. \nThis project is designed to help database administrators to decide which database to use for development of new products\nThe user can run the same SQL against different kind of databases and compare the performance\n\nLicense: BSD\nCopyright DB Software Laboratory\nhttp://www.etl-tools.com\n\n	General
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-delete-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-delete-data.sql/14	 Delete data	Functional-Inline
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-drop-objects.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-drop-objects.sql/1	\n\nSakila for Oracle is a port of the Sakila example database available for MySQL, which was originally developed by Mike Hillyer of the MySQL AB documentation team. \nThis project is designed to help database administrators to decide which database to use for development of new products\nThe user can run the same SQL against different kind of databases and compare the performance\n\nLicense: BSD\nCopyright DB Software Laboratory\nhttp://www.etl-tools.com\n\n	General
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-drop-objects.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-drop-objects.sql/13	 Drop Views	Functional-Inline
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-drop-objects.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-drop-objects.sql/17	DROP VIEW nicer_but_slower_film_list;	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-drop-objects.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-drop-objects.sql/22	 Drop Tables	Functional-Inline
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-drop-objects.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-drop-objects.sql/44	 Procedures and views\ndrop procedure film_in_stock;\ndrop procedure film_not_in_stock;\ndrop function get_customer_balance;\ndrop function inventory_held_by_customer;\ndrop function inventory_in_stock;\ndrop procedure rewards_report;	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-drop-objects.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-drop-objects.sql/53	 DROP SEQUENCES	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql/1	\n\nSakila for Oracle is a port of the Sakila example database available for MySQL, which was originally developed by Mike Hillyer of the MySQL AB documentation team. \nThis project is designed to help database administrators to decide which database to use for development of new products\nThe user can run the same SQL against different kind of databases and compare the performance\n\nLicense: BSD\nCopyright DB Software Laboratory\nhttp://www.etl-tools.com\n\n	General
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql/13	 Delete data	Functional-Inline
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql/37	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table language\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql/75	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql/78	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table country\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql/630	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql/633	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table city\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql/3640	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql/6658	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table actor\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql/7665	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql/7678	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table store\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql/7695	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql/7698	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table category\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql/7785	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql/7788	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table film\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql/12795	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql/12798	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table inventory\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql/35710	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql/35713	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table film_actor\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql/63030	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql/63033	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table film_category\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql/68040	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql/68043	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table customer\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql/71045	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql/71048	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table rental\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql/151275	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql/151278	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table payment\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-insert-data.sql/231530	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql/1	\n\nSakila for Oracle is a port of the Sakila example database available for MySQL, which was originally developed by Mike Hillyer of the MySQL AB documentation team. \nThis project is designed to help database administrators to decide which database to use for development of new products\nThe user can run the same SQL against different kind of databases and compare the performance\n\nLicense: BSD\nCopyright DB Software Laboratory\nhttp://www.etl-tools.com\n\n	General
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql/14	\n Table structure for table actor\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql/17	DROP TABLE actor;	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql/29	DROP SEQUENCE actor_sequence;	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql/52	\n Table structure for table country\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql/63	-DROP SEQUENCE country_sequence;	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql/87	\n Table structure for table city\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql/102	- DROP SEQUENCE city_sequence;	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql/125	\n Table structure for table address\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql/145	DROP SEQUENCE city_sequence;	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql/167	\n Table structure for table language\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql/178	-DROP SEQUENCE language_sequence;	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql/200	\n Table structure for table category\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql/211	-DROP SEQUENCE category_sequence;	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql/233	\n Table structure for table customer\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql/257	-DROP SEQUENCE customer_sequence;	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql/278	\n Table structure for table film\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql/314	-DROP SEQUENCE film_sequence;	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql/336	\n Table structure for table film_actor\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql/367	\n Table structure for table film_category\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql/398	\n Table structure for table film_text\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql/409	\n Table structure for table inventory\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql/426	-DROP SEQUENCE inventory_sequence;	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql/447	\n Table structure for table staff\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql/471	-DROP SEQUENCE inventory_sequence;	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql/493	\n Table structure for table store\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql/511	-DROP SEQUENCE store_sequence;	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql/534	\n Table structure for table payment\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql/555	-DROP SEQUENCE payment_sequence;	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql/600	-DROP SEQUENCE payment_sequence;	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql/622	 FK CONSTRAINTS	Notice
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql/631	\n View structure for view customer_list\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql/649	\n View structure for view film_list\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql/667	\n View structure for view staff_list\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql/684	\n View structure for view sales_by_store\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql/708	\n View structure for view sales_by_film_category\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql/711	 Note that total sales will add up to >100% because\n some titles belong to more than 1 category\n	Notice
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql/728	\n View structure for view actor_info\n	Functional-Method
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/oracle-sakila-db/oracle-sakila-schema.sql/732	\nCREATE VIEW actor_info\nAS\nSELECT\na.actor_id,\na.first_name,\na.last_name,\nGROUP_CONCAT(DISTINCT CONCAT(c.name, ': ',\n        (SELECT GROUP_CONCAT(f.title ORDER BY f.title SEPARATOR ', ')\n                    FROM sakila.film f\n                    INNER JOIN sakila.film_category fc\n                      ON f.film_id = fc.film_id\n                    INNER JOIN sakila.film_actor fa\n                      ON f.film_id = fa.film_id\n                    WHERE fc.category_id = c.category_id\n                    AND fa.actor_id = a.actor_id\n                 )\n             )\n             ORDER BY c.name SEPARATOR '; ')\nAS film_info\nFROM sakila.actor a\nLEFT JOIN sakila.film_actor fa\n  ON a.actor_id = fa.actor_id\nLEFT JOIN sakila.film_category fc\n  ON fa.film_id = fc.film_id\nLEFT JOIN sakila.category c\n  ON fc.category_id = c.category_id\nGROUP BY a.actor_id, a.first_name, a.last_name;\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-delete-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-delete-data.sql/1	 Delete data	Functional-Inline
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-drop-objects.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-drop-objects.sql/1	 Drop Views	Functional-Inline
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-drop-objects.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-drop-objects.sql/10	 Drop Tables	Functional-Inline
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-drop-objects.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-drop-objects.sql/29	Procedures	Functional-Inline
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-drop-objects.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-drop-objects.sql/41	 DROP SEQUENCES	Functional-Inline
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/1	\n PostgreSQL database dump\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/13	\n Name: actor_actor_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/20	\n Name: category_category_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/27	\n Name: film_film_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/34	\n Name: address_address_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/41	\n Name: city_city_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/48	\n Name: country_country_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/55	\n Name: customer_customer_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/62	\n Name: inventory_inventory_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/69	\n Name: language_language_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/76	\n Name: payment_payment_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/83	\n Name: rental_rental_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/90	\n Name: staff_staff_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/97	\n Name: store_store_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/104	\n Data for Name: actor; Type: TABLE DATA; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/110	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table language\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/147	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/150	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table country\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/705	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/708	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table city\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/3717	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/3720	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table address\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/6744	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/6747	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table actor\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/7757	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/7760	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table staff\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/7780	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/7783	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table store\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/7803	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/7806	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table category\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/7896	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/7899	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table film\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/12905	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/12908	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table inventory\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/35823	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/35826	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table film_actor\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/63143	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/63146	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table film_category\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/68153	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/68156	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table customer\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/71161	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/71164	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table rental\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/151394	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/151397	 Automatically generated by Advanced ETl Processor\n http://www.etl-tools.com/\n table payment\n Start of script	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-insert-data.sql/231652	 End of Script\n\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1	\n PostgreSQL database dump\n	IDE
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/11	\n Name: SCHEMA public; Type: COMMENT; Schema: -; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/18	\n Name: plpgsql; Type: PROCEDURAL LANGUAGE; Schema: -; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/29	\n Name: actor_actor_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/46	\n Name: actor; Type: TABLE; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/60	\n Name: mpaa_rating; Type: TYPE; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/75	\n Name: year; Type: DOMAIN; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/85	\n Name: _group_concat(text, text); Type: FUNCTION; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/102	\n Name: group_concat(text); Type: AGGREGATE; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/114	\n Name: category_category_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/127	\n Name: category; Type: TABLE; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/140	\n Name: film_film_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/153	\n Name: film; Type: TABLE; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/177	\n Name: film_actor; Type: TABLE; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/190	\n Name: film_category; Type: TABLE; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/203	\n Name: actor_info; Type: VIEW; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/213	\n Name: address_address_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/226	\n Name: address; Type: TABLE; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/244	\n Name: city_city_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/257	\n Name: city; Type: TABLE; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/271	\n Name: country_country_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/284	\n Name: country; Type: TABLE; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/297	\n Name: customer_customer_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/310	\n Name: customer; Type: TABLE; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/330	\n Name: customer_list; Type: VIEW; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/340	\n Name: film_list; Type: VIEW; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/350	\n Name: inventory_inventory_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/363	\n Name: inventory; Type: TABLE; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/377	\n Name: language_language_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/390	\n Name: language; Type: TABLE; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/403	\n Name: nicer_but_slower_film_list; Type: VIEW; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/413	\n Name: payment_payment_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/426	\n Name: payment; Type: TABLE; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/442	\n Name: payment_p2007_01; Type: TABLE; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/453	\n Name: payment_p2007_02; Type: TABLE; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/464	\n Name: payment_p2007_03; Type: TABLE; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/475	\n Name: payment_p2007_04; Type: TABLE; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/486	\n Name: payment_p2007_05; Type: TABLE; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/497	\n Name: payment_p2007_06; Type: TABLE; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/508	\n Name: rental_rental_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/521	\n Name: rental; Type: TABLE; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/538	\n Name: sales_by_film_category; Type: VIEW; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/548	\n Name: staff_staff_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/561	\n Name: staff; Type: TABLE; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/582	\n Name: store_store_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/595	\n Name: store; Type: TABLE; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/609	\n Name: sales_by_store; Type: VIEW; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/619	\n Name: staff_list; Type: VIEW; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/629	\n Name: film_in_stock(integer, integer); Type: FUNCTION; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/646	\n Name: film_not_in_stock(integer, integer); Type: FUNCTION; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/663	\n Name: get_customer_balance(integer, timestamp without time zone); Type: FUNCTION; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/669	#OK, WE NEED TO CALCULATE THE CURRENT BALANCE GIVEN A CUSTOMER_ID AND A DATE\n#THAT WE WANT THE BALANCE TO BE EFFECTIVE FOR. THE BALANCE IS:\n#   1) RENTAL FEES FOR ALL PREVIOUS RENTALS\n#   2) ONE DOLLAR FOR EVERY DAY THE PREVIOUS RENTALS ARE OVERDUE\n#   3) IF A FILM IS MORE THAN RENTAL_DURATION * 2 OVERDUE, CHARGE THE REPLACEMENT_COST\n#   4) SUBTRACT ALL PAYMENTS MADE BEFORE THE DATE SPECIFIED\n#FEES PAID TO RENT THE VIDEOS INITIALLY\n#LATE FEES FOR PRIOR RENTALS\n#SUM OF PAYMENTS MADE PREVIOUSLY	General
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/709	\n Name: inventory_held_by_customer(integer); Type: FUNCTION; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/731	\n Name: inventory_in_stock(integer); Type: FUNCTION; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/741	 AN ITEM IS IN-STOCK IF THERE ARE EITHER NO ROWS IN THE rental TABLE\n FOR THE ITEM OR ALL ROWS HAVE return_date POPULATED	Notice
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/768	\n Name: last_day(timestamp without time zone); Type: FUNCTION; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/786	\n Name: last_updated(); Type: FUNCTION; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/801	\n Name: rewards_report(integer, numeric); Type: FUNCTION; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/814	 Some sanity checks... 	Notice
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/826	\n    Create a temporary storage area for Customer IDs.\n    	Functional-Inline
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/831	\n    Find all customers meeting the monthly purchase requirements\n    	Functional-Inline
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/845	\n    Output ALL customer information of matching rewardees.\n    Customize output as needed.\n    	Functional-Inline
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/853	 Clean up 	Functional-Inline
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/865	\n Name: actor_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/873	\n Name: address_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/881	\n Name: category_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/889	\n Name: city_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/897	\n Name: country_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/905	\n Name: customer_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/913	\n Name: film_actor_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/921	\n Name: film_category_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/929	\n Name: film_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/937	\n Name: inventory_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/945	\n Name: language_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/953	\n Name: payment_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/961	\n Name: rental_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/969	\n Name: staff_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/977	\n Name: store_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/985	\n Name: film_fulltext_idx; Type: INDEX; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/992	\n Name: idx_actor_last_name; Type: INDEX; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/999	\n Name: idx_fk_address_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1006	\n Name: idx_fk_city_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1013	\n Name: idx_fk_country_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1020	\n Name: idx_fk_customer_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1027	\n Name: idx_fk_film_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1034	\n Name: idx_fk_inventory_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1041	\n Name: idx_fk_language_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1048	\n Name: idx_fk_original_language_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1055	\n Name: idx_fk_payment_p2007_01_customer_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1062	\n Name: idx_fk_payment_p2007_01_staff_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1069	\n Name: idx_fk_payment_p2007_02_customer_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1076	\n Name: idx_fk_payment_p2007_02_staff_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1083	\n Name: idx_fk_payment_p2007_03_customer_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1090	\n Name \n: idx_fk_payment_p2007_03_staff_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1097	\n Name: idx_fk_payment_p2007_04_customer_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1104	\n Name: idx_fk_payment_p2007_04_staff_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1111	\n Name: idx_fk_payment_p2007_05_customer_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1118	\n Name: idx_fk_payment_p2007_05_staff_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1125	\n Name: idx_fk_payment_p2007_06_customer_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1132	\n Name: idx_fk_payment_p2007_06_staff_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1139	\n Name: idx_fk_staff_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1146	\n Name: idx_fk_store_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1153	\n Name: idx_last_name; Type: INDEX; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1160	\n Name: idx_store_id_film_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1167	\n Name: idx_title; Type: INDEX; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1174	\n Name: idx_unq_manager_staff_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1181	\n Name: idx_unq_rental_rental_date_inventory_id_customer_id; Type: INDEX; Schema: public; Owner: postgres; Tablespace: \n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1188	\n Name: payment_insert_p2007_01; Type: RULE; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1195	\n Name: payment_insert_p2007_02; Type: RULE; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1202	\n Name: payment_insert_p2007_03; Type: RULE; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1209	\n Name: payment_insert_p2007_04; Type: RULE; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1216	\n Name: payment_insert_p2007_05; Type: RULE; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1223	\n Name: payment_insert_p2007_06; Type: RULE; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1230	\n Name: film_fulltext_trigger; Type: TRIGGER; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1240	\n Name: last_updated; Type: TRIGGER; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1250	\n Name: last_updated; Type: TRIGGER; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1260	\n Name: last_updated; Type: TRIGGER; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1270	\n Name: last_updated; Type: TRIGGER; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1280	\n Name: last_updated; Type: TRIGGER; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1290	\n Name: last_updated; Type: TRIGGER; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1300	\n Name: last_updated; Type: TRIGGER; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1310	\n Name: last_updated; Type: TRIGGER; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1320	\n Name: last_updated; Type: TRIGGER; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1330	\n Name: last_updated; Type: TRIGGER; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1340	\n Name: last_updated; Type: TRIGGER; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1350	\n Name: last_updated; Type: TRIGGER; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1360	\n Name: last_updated; Type: TRIGGER; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1370	\n Name: last_updated; Type: TRIGGER; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1380	\n Name: address_city_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1388	\n Name: city_country_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1396	\n Name: customer_address_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1404	\n Name: customer_store_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1412	\n Name: film_actor_actor_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1420	\n Name: film_actor_film_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1428	\n Name: film_category_category_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1436	\n Name: film_category_film_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1444	\n Name: film_language_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1452	\n Name: film_original_language_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1460	\n Name: inventory_film_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1468	\n Name: inventory_store_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1476	\n Name: payment_customer_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1484	\n Name: payment_p2007_01_customer_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1492	\n Name: payment_p2007_01_rental_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1500	\n Name: payment_p2007_01_staff_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1508	\n Name: payment_p2007_02_customer_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1516	\n Name: payment_p2007_02_rental_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1524	\n Name: payment_p2007_02_staff_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1532	\n Name: payment_p2007_03_customer_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1540	\n Name: payment_p2007_03_rental_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1548	\n Name: payment_p2007_03_staff_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1556	\n Name: payment_p2007_04_customer_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1564	\n Name: payment_p2007_04_rental_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1572	\n Name: payment_p2007_04_staff_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1580	\n Name: payment_p2007_05_customer_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1588	\n Name: payment_p2007_05_rental_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1596	\n Name: payment_p2007_05_staff_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1604	\n Name: payment_p2007_06_customer_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1612	\n Name: payment_p2007_06_rental_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1620	\n Name: payment_p2007_06_staff_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1628	\n Name: payment_rental_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1636	\n Name: payment_staff_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1644	\n Name: rental_customer_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1652	\n Name: rental_inventory_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1660	\n Name: rental_staff_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1668	\n Name: staff_address_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1676	\n Name: staff_store_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1684	\n Name: store_address_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1692	\n Name: store_manager_staff_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1700	\n Name: public; Type: ACL; Schema: -; Owner: postgres\n	Code
EN	SQL	jOOQ/jOOQ	jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql	jOOQ/jOOQ/jOOQ-examples/Sakila/postgres-sakila-db/postgres-sakila-schema.sql/1709	\n PostgreSQL database dump complete\n	IDE